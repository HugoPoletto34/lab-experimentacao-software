number,created_at,merged_at,closed_at,files,additions,deletions,body_text,participants,comments
1725,2016-10-12T18:02:04Z,,2016-12-06T10:38:32Z,1,1,1,fix engine version which could make more compatibility to new node version,2,0
1950,2017-07-28T03:57:31Z,,2018-03-22T23:10:01Z,1,16,5,"I had this code in my slide:
```elixir
defmodule YouTube do
  def search_videos(query) do
    Repo.all(from video in Video,
    where: query in video.search_terms)
  end
end
```

Before:

After:

Similar to #1847 and #1831",1,1
2121,2018-03-10T15:01:29Z,2018-03-22T10:06:19Z,2018-03-22T10:06:19Z,1,58,50,New overrideLayout option (if true) will prevent h/w calcs.,2,3
2171,2018-06-04T20:53:23Z,2018-08-01T08:36:07Z,2018-08-01T08:36:07Z,1,1,1,,3,2
2300,2019-01-15T12:22:50Z,2019-01-31T19:09:46Z,2019-01-31T19:09:46Z,2,17,0,"Resize Event
When reveal.js changes the scale of the slides it fires an resize event. You can subscribe to the event to resize your elements accordingly.
Reveal.addEventListener( 'resize', function( event ) { /* console.log(event.scale,event.oldscale,event.size); */ } );",4,1
2312,2019-01-30T16:42:12Z,2019-02-18T14:14:40Z,2019-02-18T14:14:40Z,1,3,2,"I've noticed Math.random() used to generate a secret. However, its values are not safe against prediction, so if I understand the context correctly, it's probably preferable to use Window.crypto instead.
Full disclosure: I noticed this using LGTM.com, a code analysis platform which I also work for.",3,2
2338,2019-03-03T03:33:45Z,,2023-02-19T10:25:13Z,2,16,0,"Fixes #2126
Since inline elements don't get transform scale effects, if the grow or shrink fragment class is applied to a span, nothing happens currently. Changing the font-size instead gives the expected result.",2,0
2368,2019-04-06T13:03:27Z,,2019-04-06T15:11:37Z,39,7066,313,,7,0
2387,2019-04-30T18:53:49Z,,2019-05-06T22:57:19Z,1,94,47,"Currently, the background videos/iframes added via the data-background-[video|iframe] are lazy loaded correctly the first time when in the viewDistance of the current slide (and the data-preload attribute has been added for the specific case of the iframes). However, if we get out of the viewDistance distance, the background content lazy loaded is not unloaded like what happens for regular lazy loaded content on the main slides. This means that for example an iframe in the background content will still use the browser ressources even though it should have been unloaded.
This PR fixes this problem.",1,0
2400,2019-05-09T22:58:29Z,2019-05-27T06:11:43Z,2019-05-27T06:11:43Z,2,37,4,"The current pacing timer, introduced in 715cf0b (#1564), operates on the assumption that there is a default amount of time to be allocated to each slide, and that individual slides can deviate from that default by specifying their own data-timing attribute.
This patch introduces an alternate pacing method: by specifying the totalTime configuration option, the presenter can set the total time available to present. The pacing timer will then continue to allocate the exact pacing time for slides that do have data-timing set, as before. However, rather than applying the defaultTiming constant to all others, it will

Add up the time already allocated to slides via data-timing;
subtract that from totalTime;
divide the difference by the number of slides without data-timing set;
apply the thus-calculated average to those slides.

totalTime has no default, and if both defaultTiming and totalTime are set, totalTime wins. This preserves backward compatibility: if a presenter has set defaultTiming and updates reveal.js, totalTime will be null and defaultTiming is still applied to all slides without a data-timing attribute. The presenter can then switch to the automatic calculation, if desired, by setting a value for totalTime.",3,13
2483,2019-09-19T02:10:14Z,2020-01-11T19:51:02Z,2020-01-11T19:51:02Z,1,4,4,"Hi,
I've found a few spelling errors in the README and I've fixed them. Please accept the pull request.
Summary of words fixed

finetune
presnetations
aehad
finshing
fullfillment",3,1
2511,2019-10-16T10:16:03Z,,2019-12-09T19:52:03Z,1,2,2,,3,0
2513,2019-10-18T11:40:43Z,2019-12-09T20:00:59Z,2019-12-09T20:00:59Z,1,5,1,"We use Reveal.js in a project where we only ever want to show 1 slide at a time, so we set viewDistance: 1. On mobile devices however, this setting is overriden to viewDistance: 2 which breaks our application.
This PR adds a mobileViewDistance key which defaults to 2, as it was before, but can now be configured at will.",3,1
2521,2019-10-29T14:52:15Z,2020-03-03T14:22:08Z,2020-03-03T14:22:09Z,14,305,0,"What does this PR do?
Exposes all theme variables to CSS custom properties on :root.
Why?
To allow plugin authors to re-use them.
See linked issue.",3,13
2532,2019-11-21T10:57:58Z,,2020-03-05T13:34:06Z,1,29,13,,3,3
2633,2020-03-10T13:22:15Z,2020-03-13T18:54:25Z,2020-03-13T18:54:25Z,13,669,687,"What this PR does
It applies paper.css and pdf.css conditionally (depending on whether the query parameter ?print-pdf is defined) so they can both be loaded in the presentation without adding a script.
The style sheets can now be both imported and only apply on the following conditions:

paper.css: only applied when printing (media query) and the query parameter is NOT present
pdf.css: only applied when the query parameter is present

Question
Shouldn't the pdf style sheet also be applied only when printing? I believe so but I'm not certain.
⚠️ The current version is a bit buggy
I didn't validate using the test suite because it is commented out (see gulpfile).
I did inspect the result on the page demo.html though and found a nasty bug that I don't have the time to locate right now.
The first slide when printing to pdf with black theme follows the theme correctly but all the other slides have a white background.
I'll try to fix this ASAP, don't merge in the meantime :-)",2,11
2651,2020-04-23T09:44:12Z,2020-05-19T09:11:27Z,2020-05-19T09:11:27Z,159,16666,21048,"I've been hard at work on reveal.js 4.0.0 for a while now and wanted to share the progress so far. It's not ready to merge just yet, but it's getting close.
The main changes in this release are:

New website, docs and logo https://revealjs.com
Modernized reveal.js core. The old reveal.js file with 6.2k lines of code (!) was refactored and split into ES modules.
You can now run multiple reveal.js presentations on the same page.
import Reveal from 'reveal.js'
let deck1 = new Reveal( document.querySelector( '.deck1' ) );
let deck2 = new Reveal( document.querySelector( '.deck2' ) );
deck1.initialize({ embedded: true });
deck2.initialize({ embedded: true });

Converted all plugins to ES modules so that they can be bundled with reveal.js.
All plugins and reveal.js core are transpiled to ES5 for situations where you need to support older browsers.
Switched build systems from grunt to gulp (using rollup for bundling).
Added a major new Auto-Animate feature.
Added a new slidetransitionend event.
Reveal.add/removeEventListener -> Reveal.on/off.
Added support for code line numbers and highlights using Markdown
The initialize method now returns a promise that resolves when reveal.js has started Reveal.initialize().then( () => console.log( 'ready' ) ).
The highlight.js and marked libraries are now installed from npm. They were previously hard coded inside their corresponding plugins in this repository.

There are a few breaking changes in this release:

All compiled assets (reveal.js, reveal.css, themes) have moved to /dist.
Print stylesheets are now baked into the reveal.css file so there is no need to separately include them in the presentation HTML.
The multiplex and server side speakers notes plugins have moved out to separate repos and can be installed via npm:
https://github.com/reveal/multiplex
https://github.com/reveal/notes-server

Docs, upgrade instructions and a new revealjs.com will follow when it's ready to merge but hopefully this gives you an idea of what's to come! ✌️",15,23
2740,2020-07-29T11:39:05Z,2021-05-27T07:46:53Z,2021-05-27T07:46:53Z,24,448,434,"just created this change according to my request in #2739
This uses the already exposed CSS Variables in the theme template instead of the SASS vars. we´re still initializing the CSS Vars with the Values from SASS, so it should be compatible.
This allows us to easy overwrite theme vars without building a custom theme.",4,3
2752,2020-08-18T17:04:33Z,2020-09-09T08:24:05Z,2020-09-09T08:24:05Z,14,38,38,"The bundler I'm using happens to not work well with relative paths that don't start with ./.
Since this will not break anything existing, I've added this prefix in the themes and font CSS files.",3,2
2806,2020-10-11T23:58:23Z,,2021-05-05T09:07:09Z,4,49,3,Messages ( for issues and PRs) can be customized. This is recommended since a hello message on successfully raising a PR will motivate new contributors. :),3,1
2841,2020-11-11T16:51:26Z,,2020-11-25T14:09:53Z,1,1,1,"Currently if you attempt to run this with node 15.x you will get the below error.  Note that this change ""is advisory only and will only produce warnings when your package is installed as a dependency"" per the documentation, however I look at this as clear expectation setting with users.
$ docker run -p 8000:8000 -v ""$(pwd)"":/usr/src/app -w /usr/src/app node:15 /bin/bash -c ""npm install && npm start""

up to date, audited 926 packages in 8s

4 low severity vulnerabilities

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.
npm notice
npm notice New patch version of npm available! 7.0.8 -> 7.0.10
npm notice Changelog: <https://github.com/npm/cli/releases/tag/v7.0.10>
npm notice Run `npm install -g npm@7.0.10` to update!
npm notice

> reveal.js@4.1.0 start
> gulp serve

/usr/src/app/node_modules/node-sass/lib/binding.js:13
      throw new Error(errors.unsupportedEnvironment());
      ^

Error: Node Sass does not yet support your current environment: Linux 64-bit with Unsupported runtime (88)
For more information on which environments are supported please see:
https://github.com/sass/node-sass/releases/tag/v4.14.1
    at module.exports (/usr/src/app/node_modules/node-sass/lib/binding.js:13:13)
    at Object.<anonymous> (/usr/src/app/node_modules/node-sass/lib/index.js:14:35)
    at Module._compile (node:internal/modules/cjs/loader:1083:30)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1112:10)
    at Module.load (node:internal/modules/cjs/loader:948:32)
    at Function.Module._load (node:internal/modules/cjs/loader:789:14)
    at Module.require (node:internal/modules/cjs/loader:972:19)
    at require (node:internal/modules/cjs/helpers:88:18)
    at Object.<anonymous> (/usr/src/app/node_modules/gulp-sass/index.js:166:21)
    at Module._compile (node:internal/modules/cjs/loader:1083:30)
npm ERR! code 1
npm ERR! path /usr/src/app
npm ERR! command failed
npm ERR! command sh -c gulp serve

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2020-11-11T16_29_33_254Z-debug.log
Using 14.x it works:
$ docker run -p 8000:8000 -v ""$(pwd)"":/usr/src/app -w /usr/src/app node:14 /bin/bash -c ""npm install && npm start""

> node-sass@4.14.1 install /usr/src/app/node_modules/node-sass
> node scripts/install.js

Downloading binary from https://github.com/sass/node-sass/releases/download/v4.14.1/linux-x64-83_binding.node
Download complete
Binary saved to /usr/src/app/node_modules/node-sass/vendor/linux-x64-83/binding.node
Caching binary to /root/.npm/node-sass/4.14.1/linux-x64-83_binding.node

> puppeteer@2.1.1 install /usr/src/app/node_modules/puppeteer
> node install.js


Chromium downloaded to /usr/src/app/node_modules/puppeteer/.local-chromium/linux-722234

> node-sass@4.14.1 postinstall /usr/src/app/node_modules/node-sass
> node scripts/build.js

Binary found at /usr/src/app/node_modules/node-sass/vendor/linux-x64-83/binding.node
Testing binary
Binary is fine

> core-js@3.6.5 postinstall /usr/src/app/node_modules/core-js
> node -e ""try{require('./postinstall')}catch(e){}""

Thank you for using core-js ( https://github.com/zloirock/core-js ) for polyfilling JavaScript standard library!

The project needs your help! Please consider supporting of core-js on Open Collective or Patreon:
> https://opencollective.com/core-js
> https://www.patreon.com/zloirock

Also, the author of core-js ( https://github.com/zloirock ) is looking for a good job -)

npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.3 (node_modules/rollup/node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.3: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""linux"",""arch"":""x64""})
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.12 (node_modules/fsevents):
npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.12: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""linux"",""arch"":""x64""})

added 856 packages from 752 contributors and audited 927 packages in 208.553s

20 packages are looking for funding
  run `npm fund` for details

found 1 low severity vulnerability
  run `npm audit fix` to fix them, or `npm audit` for details

> reveal.js@4.1.0 start /usr/src/app
> gulp serve

[16:36:20] Using gulpfile /usr/src/app/gulpfile.js
[16:36:20] Starting 'serve'...
[16:36:20] Starting server...
[16:36:20] Server started http://0.0.0.0:8000
[16:36:20] LiveReload started on port 35729
[16:36:20] Running server",3,3
2855,2020-11-25T10:30:31Z,,2021-05-05T08:19:31Z,1,21,0,,3,1
2859,2020-11-30T15:47:06Z,,2021-05-05T08:08:52Z,1,9,0,new arrow added for up and down functionality in nested slides,4,2
2891,2021-02-03T05:50:56Z,,2021-05-05T08:07:11Z,1,10,0,Installation command added in Readme.md file,5,1
2896,2021-02-07T18:30:58Z,2021-05-27T07:54:46Z,2021-05-27T07:54:46Z,2,15,5,"This PR implements both data-auto-animate-id and data-auto-animate-restart, allowing for finer control of auto animate.

When at least one of two successive data-auto-animate slides has a data-auto-animate-id attribute, both need to have the same attribute value in order for auto animate to trigger
When a data-auto-animate slide has a data-auto-animate-restart attribute, auto animate does not trigger on the transition between the previous slide and it, but does trigger on the transition between it and the next slide. data-auto-animate-restart always negatively overrides auto animate, even breaking two slides with the same data-auto-animate-id apart. Note that ""previous"" and ""next"" are meant physically, so ""previous"" always means a slide to the left or the top of the current one and ""next"" always means a slide to the right or the bottom instead of ""previously shown slide"" and ""next slide to show"" (which might go in any direction, breaking data-auto-animate-restart which isn't symmetric)

This design is rather flexible and doesn't introduce a breaking change (apart from new attribute names being used by reveal.js): data-auto-animate slide pairs without data-auto-animate-id and data-auto-animate-restart behave just like before
Why both data-auto-animate-id and data-auto-animate-restart, wouldn't one be enough?
In theory yes, but I think having both is handy. Only data-auto-animate-restart would result in an unreadable hell for any non-trivial presentations with multiple auto-animate groups right next to each other and requires a lot of attention to not accidentally mess up the exact break points. While only having data-auto-animate-id would require annotating possibly two dozen slides with a different id when all you want is one simple auto animate break in the middle.
Examples: (Slide pairs with different letters won't auto animate)
<section data-auto-animate>A1</section>
<section data-auto-animate>A2</section>
<section data-auto-animate data-auto-animate-restart>B1</section>
<section data-auto-animate>B2</section>
<section data-auto-animate data-auto-animate-id=""a"">A1</section>
<section data-auto-animate data-auto-animate-id=""a"">A2</section>
<section data-auto-animate>B1</section>
<section data-auto-animate>B2</section>
<section data-auto-animate data-auto-animate-id=""c"">C1</section>
<section data-auto-animate data-auto-animate-id=""c"">C2</section>
<section data-auto-animate data-auto-animate-id=""a"">A1</section>
<section data-auto-animate data-auto-animate-id=""a"">A2</section>
<section data-auto-animate data-auto-animate-id=""b"">B1</section>
<section data-auto-animate data-auto-animate-id=""b"">B2</section>
<section data-auto-animate data-auto-animate-id=""1"">A1</section>
<section data-auto-animate data-auto-animate-id=""1"">A2</section>
<section>
    <section data-auto-animate data-auto-animate-id=""2"">Vertical B1</section>
    <section data-auto-animate data-auto-animate-id=""2"">Vertical B2</section>
    <section data-auto-animate data-auto-animate-id=""2"" data-auto-animate-restart>Vertical C1</section>
    <section data-auto-animate data-auto-animate-id=""2"">Vertical C2</section>
</section>
<section data-auto-animate>D1</section>
<section>E1</section>",4,6
2913,2021-03-06T06:39:36Z,,2021-05-05T08:04:50Z,1,1,1,Update copyright year,5,1
2923,2021-03-29T03:20:43Z,,2021-05-05T08:03:50Z,2,10296,88,"I fixed the misleading typo in 'foucsed', which should read 'focused' in the config section.
  // If you set this to 'foucsed', we will only capture keyboard events
  // for embdedded decks when they are in focus
  keyboardCondition: null,
In the CONTRIBUTING.md, it says to PR on dev, but happy to PR on master If preferred :).",5,1
2940,2021-04-23T09:04:52Z,2021-04-28T06:55:30Z,2021-04-28T06:55:30Z,1,7,1,"Currently, when using the data-background-image attribute, the user can only specify one background image. This is, because if a url is given, the whole string given in data-background-image is wrapped into url().
This MR allows to use a comma-separated list, e.g.:
<section data-background-image=""image1.png, image2.png""></section>
Would be happy to see this merged into dev.",3,2
2963,2021-05-29T08:35:37Z,,2021-05-29T09:35:43Z,1,6,0,"created a branch, created a file and made a commit, and opened a pull
request",1,0
3010,2021-09-16T10:45:27Z,,2022-09-05T09:13:23Z,7,31,19,"So far, multiple notes per slide are only supported if they are
attached to fragments (without fragments, only the first aside notes
element on a slide is displayed).  With this commit, the contents of
all notes on a slide are displayed (except for fragments with notes,
for which, as before, only each fragment's first/single note is
displayed).",3,3
3020,2021-09-29T00:38:23Z,2022-03-21T08:40:31Z,2022-03-21T08:40:31Z,1,1,1,,3,0
3291,2022-09-29T07:48:12Z,2023-02-22T03:01:21Z,2023-02-22T03:01:21Z,4,13,4,"When disableLayout:true is set in the main html of the presentation and the viewpoint was higher or wider than the configured slide size,
slides used to overlap in the overview page.
The changes made to js/reveal.js should fix that.
comment:
I ran gulp js afterwards.",2,2
3477,2023-09-17T21:31:08Z,2023-09-19T07:20:19Z,2023-09-19T07:20:19Z,1,1,1,"Fixes #3476 : data-notes worked on fragment level, but not at slide level",2,1
