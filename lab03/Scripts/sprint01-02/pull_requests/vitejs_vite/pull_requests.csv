number,created_at,merged_at,closed_at,files,additions,deletions,body_text,participants,comments
4,2020-04-22T11:38:10Z,2020-04-23T13:50:49Z,2020-04-23T13:50:49Z,1,37,1,"Hey @yyx990803 thank you for putting this together, it will be super useful moving forward!
I was inspired by the idea to integrate support for snowpack and gave an initial integration a try.
This assumes you have run npx snowpack in the directory you're working on, so I'm not calling it an integration quite yet.
However, this supports having modules present in web_modules and serving them as named packages directly from there. Quick example:
index.html:
<div id=""app""></div>
<script type=""module"">
import { createApp } from 'vue'
import Comp from './Comp.vue'

createApp(Comp).mount('#app')
</script>

Comp.vue:
<template>
  <div>
    Today's date is: {{ dayjs().format('dddd MMMM D, YYYY') }}
  </div>
</template>

<script>
import dayjs from 'dayjs';
export default {
  methods: {
    dayjs
  }
}
</script>

Then run:
$ npm init -y
$ npm i --save dayjs
$ npx snowpack
$ npx vite

I'm curious to hear what you think about this.",3,2
5,2020-04-23T04:01:02Z,,2020-04-24T03:38:06Z,2,22,1,"You don't have to check my local IP when I want to access it on a device in the same LAN
For example:
npx vite

Running at:
  > http://127.0.0.1:3000
  > http://192.168.1.35:3000


And, fs.promises in src/server/utils.ts does not support some lower versions of node.
Use util.promisify to support > node 8",2,2
53,2020-05-05T12:38:28Z,2020-05-05T15:30:05Z,2020-05-05T15:30:05Z,3,37,13,,2,0
104,2020-05-09T10:58:55Z,2020-05-09T19:02:06Z,2020-05-09T19:02:06Z,2,2,1,Exposing moduleRewrite and compileSFCStyle for plugin creators,2,2
112,2020-05-10T07:51:51Z,,2020-05-10T22:18:13Z,1,9,8,,2,1
141,2020-05-14T10:26:22Z,2020-05-14T13:16:22Z,2020-05-14T13:16:22Z,3,7,6,Fixes #137,3,0
144,2020-05-14T15:44:58Z,2020-05-15T21:40:30Z,2020-05-15T21:40:30Z,3,32,7,"This PR adds an optional config option named shouldPreload that accepts a predicate function receiving a rollup OutputChunk and returns a boolean indicating whether to add a <link rel=""modulerepload"" href=""..."" /> to the index.html or not.
Open for feedback. Maybe a more generic solution would be to offer the ability of adding html processing plugins.",2,3
164,2020-05-16T12:12:42Z,,2020-05-18T22:31:39Z,5,59,27,fix #161.#160,2,1
170,2020-05-17T12:13:59Z,2020-05-18T21:09:33Z,2020-05-18T21:09:33Z,5,143,43,fix #158,2,0
172,2020-05-17T20:31:32Z,,2020-05-18T21:42:04Z,2,29,2,"As mentioned on #171, yarn 2.0 will fail without these dependencies declared. This PR did the following
yarn add etag mime-types @vue/compiler-dom",2,0
176,2020-05-18T06:07:09Z,2020-05-19T01:59:08Z,2020-05-19T01:59:08Z,4,27,23,"…tead of async(link load)
fix #175
Bug Reson
The updateStyle is async, because change href of link is async.The mounted hooks is invoked before css load.
Fix Soultion
Let css-load and css-update to be sync.",2,0
185,2020-05-19T07:16:00Z,2020-05-20T17:37:16Z,2020-05-20T17:37:16Z,7,163,63,"… logic clearly.
Other Bug Fix

Hmrshould full-reload correct html file.
The server html cache key should be path and value is parsed content.
The pre-code implement bust cache is throgh path, but set cache is throgh content.It can work because ecah get new content and parsed it and return it to client.",2,0
223,2020-05-22T05:45:13Z,2020-05-22T17:27:14Z,2020-05-22T17:27:14Z,9,78,17,,6,15
230,2020-05-22T19:21:39Z,2020-05-22T21:09:34Z,2020-05-22T21:09:34Z,1,9,3,"Fix: #228
Let me explain with this reproduce repo: https://github.com/csr632/test-vite/tree/wrong-resolve
When dev server is re-writing this module: test-package/es/index.js
vite go to this line:
https://github.com/csr632/vite/blob/ada8886e36578c7f43b7cd12bacd65e5a7c4c6e4/src/node/server/serverPluginModuleRewrite.ts#L243
with pathname being ""/@modules/test-package/es/nested"", which is not cached by idToFileMap:https://github.com/csr632/vite/blob/e786897134cb35ca19f4358c2829a82a1b3269e7/src/node/resolver.ts#L28
Previously defaultRequestToFile do nothing when this happen, and return path.join(root, publicPath.slice(1)), which doesn't make sense because publicPath is something like /@modules/test-package/es/nested.",2,0
235,2020-05-23T06:18:53Z,2020-05-25T15:52:07Z,2020-05-25T15:52:07Z,11,91,39,"New command option --mode to specify environment mode and process.env.NODE_ENV.


Env File priority:  .env.[mode].local > .env.[mode] > .env.local > .env


In non-build scenarios, all default to development",2,0
243,2020-05-24T06:11:15Z,2020-05-25T15:52:51Z,2020-05-25T15:52:51Z,6,100,119,"I do it because i think it is useful for let the logics with built-in vue process  can be as an plugin.Well I think the hmr with vue module should be implement by hmr api, instead of use internal logic
Other
I find top boundary will update self when deps is changed.eg blew case.
hot.accpet('A',  'B', () => {} )

I think this bevaior should be handle by user self.vite don't do it because sometimes user don't hope A full-reload when B change.
If the user want to do this bevaior.they can do like this blew.
hot.accpet('A',  'B', () => {
   import('A') // re-import A
} )

Or better way. we can add hmr bubble for not accpet deps.And accpet deps should not bubble.Like this blew.
// A
import 'B'
import 'C'
hot.accpet('A',  'B', () => {} )
A should not update when B changed.A should update when C change.",2,1
262,2020-05-26T06:34:17Z,2020-05-26T14:01:52Z,2020-05-26T14:01:52Z,1,15,21,,2,0
276,2020-05-27T03:29:38Z,,2021-01-02T18:17:17Z,3,50,8,,3,7
281,2020-05-28T05:36:31Z,2020-05-29T23:12:47Z,2020-05-29T23:12:48Z,12,189,39,close #9,2,4
313,2020-05-30T14:02:23Z,2020-07-16T18:30:24Z,2020-07-16T18:30:24Z,10,108,25,close #9,4,4
314,2020-05-30T14:34:17Z,2020-06-04T18:31:59Z,2020-06-04T18:31:59Z,6,54,2,,2,0
316,2020-05-30T17:57:48Z,2020-06-02T03:18:19Z,2020-06-02T03:18:19Z,15,266,26,"I've implemented custom blocks supporting.
The custom block content is transformed with server plugin.
In about HMR, I don't understand about how to usage of websocket message type for custom blocks.
maybe, I guess that it's correct to use the custom type.
https://github.com/vitejs/vite/blob/master/src/client/client.ts#L112-L117",2,3
320,2020-05-31T15:42:09Z,2020-06-02T18:08:49Z,2020-06-02T18:08:49Z,11,265,46,Fix: #319,3,2
335,2020-06-03T05:35:35Z,2020-06-04T18:48:21Z,2020-06-04T18:48:21Z,11,149,32,"Support preprocessing style options, but it requires rollup-plugin-vue to support preprocessing options (PR), Otherwise, the build task will go wrong Error: variable @preprocess-custom-color is undefined.",3,0
344,2020-06-03T17:05:47Z,2020-06-04T21:34:00Z,2020-06-04T21:34:00Z,18,238,70,"This is a regression of #228
You can see the reproduction in the playground.",2,2
345,2020-06-04T06:40:29Z,2020-06-05T14:23:03Z,2020-06-05T14:23:03Z,3,14,2,,2,0
364,2020-06-07T15:16:44Z,,2021-01-02T18:17:17Z,14,311,69,close #139,3,0
375,2020-06-09T05:29:38Z,2020-06-18T20:54:50Z,2020-06-18T20:54:50Z,1,1,7,This is already import with style request.So it can be removed.,2,0
399,2020-06-16T03:37:43Z,,2020-06-19T00:46:34Z,2,3,2,,2,0
408,2020-06-18T14:51:01Z,2020-10-23T19:24:35Z,2020-10-23T19:24:36Z,1,19,10,Fixes #293,3,3
410,2020-06-19T01:12:59Z,2020-06-21T17:20:46Z,2020-06-21T17:20:46Z,3,26,2,chore: add @types/mime-types and git pre-commit hook,2,1
422,2020-06-21T03:05:07Z,2020-06-21T17:20:01Z,2020-06-21T17:20:01Z,1,5,1,fix #421,3,0
457,2020-06-25T08:06:59Z,2020-07-02T19:31:39Z,2020-07-02T19:31:39Z,2,5,10,…n sourcemap,2,0
488,2020-07-01T02:54:15Z,,2021-01-02T18:17:18Z,7,87,7,"close #480
Also take a look for vuejs/rollup-plugin-vue#368",4,1
500,2020-07-03T15:12:07Z,2020-07-16T20:48:22Z,2020-07-16T20:48:22Z,1,1,1,fix #490,2,0
517,2020-07-05T12:29:49Z,2020-07-16T21:06:09Z,2020-07-16T21:06:09Z,2,49,29,I write a plguin for vue2 support and need disable internal rollup-plugin-vue.,2,0
525,2020-07-07T04:48:00Z,2020-07-10T14:48:40Z,2020-07-10T14:48:41Z,5,13,11,"…mp rollup
close #503",4,2
584,2020-07-20T03:41:26Z,2020-07-21T13:43:05Z,2020-07-21T13:43:05Z,9,99,21,close #581,2,0
586,2020-07-20T06:21:19Z,2020-08-28T08:57:57Z,2020-08-28T08:57:57Z,1,1,1,,3,0
588,2020-07-20T10:33:10Z,,2021-01-02T18:17:18Z,5,57,3,fix #554,5,12
590,2020-07-20T17:03:08Z,2020-08-30T10:16:46Z,2020-08-30T10:16:46Z,1,3,2,"Hello,
First of all, thank you very much for creating and maintaining this library, very exciting.
I have been playing with it today and I find the Node API to be great. Looking forward to some more extensive docs, but the source is pretty clear and I was able to figure out the usage.
The change I am proposing here is to support passing a zero (0) as a port to the server listen method. Since I will be instantiating multiple vite processes, I don't really care about the port, which is why I want Node to choose one at will. Usually, you can just pass a zero, and Node will select a random available port. However, since vite stores the exact port that was passed through options, it later fails because it tries to use 0 instead of an actual port resolved by Node.
This simple change should fix that, and from what I can tell, it should not be a breaking change.
Open to the feedback, of course, thanks!",4,2
602,2020-07-22T12:03:43Z,2020-08-28T08:57:16Z,2020-08-28T08:57:16Z,1,1,0,Resolve #566 (comment),3,0
609,2020-07-23T07:13:12Z,2020-08-31T08:27:14Z,2020-08-31T08:27:14Z,1,3,5,"Hi,
I found the process assignment to be too aggressive. I am using vite inside Electron, and so the process global is already defined (when nodeIntegration is enabled) and contains useful info that I would prefer to keep.
The approach I am proposing is a bit more verbose, but should keep the already defined process intact, if it exists.",3,0
620,2020-07-24T05:58:45Z,2020-09-01T07:32:52Z,2020-09-01T07:32:52Z,6,42,1,"When config.define is set like below (vite.config.js)
module.exports = {
  define: {
    __VAR__: 'string'
  }
}
and main.js is like below.
console.log(__VAR__)
On dev server it becomes like
console.log('string')
though built script becomes like
console.log(string)
This PR will fix the build to be same as dev server.",3,13
624,2020-07-24T10:23:53Z,2020-08-28T08:36:38Z,2020-08-28T08:36:38Z,1,1,1,,2,0
625,2020-07-25T04:24:12Z,2020-08-28T08:38:08Z,2020-08-28T08:38:08Z,1,13,13,,3,1
658,2020-08-02T05:45:54Z,2020-08-31T06:49:26Z,2020-08-31T06:49:26Z,2,11,2,"Optional chaining and nullish coalescing
I added a test case. You can watch it fail by comment out the fix lines.",3,0
664,2020-08-03T01:50:10Z,2020-08-28T03:37:46Z,2020-08-28T03:37:46Z,1,1,1,fix #663,3,1
665,2020-08-03T02:26:31Z,2020-08-31T06:40:31Z,2020-08-31T06:40:32Z,1,4,0,,2,0
668,2020-08-03T08:44:36Z,2020-08-31T10:28:12Z,2020-08-31T10:28:12Z,1,6,0,"…gins
fix #661",2,0
677,2020-08-04T14:11:16Z,2020-10-20T04:08:09Z,2020-10-20T04:08:09Z,2,25,2,"close #674, close #676, close #652",13,19
679,2020-08-05T23:34:48Z,2020-08-28T02:44:30Z,2020-08-28T02:44:30Z,1,1,0,,3,0
681,2020-08-06T02:20:11Z,2020-08-30T10:01:26Z,2020-08-30T10:01:27Z,1,3,7,"By stripping ^public\/ in the defaultFileToRequest function, the serverPluginModuleRewrite plugin no longer rewrites /a.png to /public/a.png unintentionally.",2,0
682,2020-08-06T07:18:26Z,2020-09-19T10:42:33Z,2020-09-19T10:42:34Z,1,5,3,close #662,2,0
689,2020-08-06T21:50:20Z,,2020-11-09T13:24:05Z,7,303,283,Closes #673,1,1
694,2020-08-09T10:17:44Z,2020-08-28T04:13:44Z,2020-08-28T04:13:45Z,2,11,8,"fix #693
Also ensures that stopService will always wait for the service to actually have been created.
Otherwise, I think there might be edge cases where stopService is called before the service has actually been started, preventing proper cleanup.",4,1
697,2020-08-10T23:01:48Z,2020-08-28T02:50:53Z,2020-08-28T02:50:53Z,1,1,0,"Without the description property, it looks like this on npm:",2,0
702,2020-08-12T09:26:00Z,,2021-01-02T18:17:19Z,1,21,2,"Following this issue : #378 and my response.
I have added an option for renaming css output filename with two way : string or callback with return text.
Currently the css filename format is hardcoded in buildPluginCss.ts.
It allow user handle and format the filename as it want.
It's my first PR for an open-source project tell if I'have done something wrong in the workflow of developing vite and contribute to the project. I tried to follow the git commit formatting rule and the contributing guide.
The only thing I not make it's a Jest test case. It's a small option but if you want I can make one.",3,0
708,2020-08-15T14:43:35Z,,2020-11-09T13:59:05Z,1,5,3,"This PR fixes error handling in esbuildService.js.
Motivation:
I'm using vite to build my React app. When I attempted to build my app on Github Actions, vite occurred some error, but an action workflow didn't stop properly. I expect actions are stopped and print an error if some errors occur, but tests seem to succeed. This is a problem. I think vite has to stop with an error. So I created this pull request.
Before:
When the transform fails, the error object is not thrown(error object is suppressed).
After
Transform function comes to be able to throw an error.",5,2
723,2020-08-19T02:40:15Z,2020-08-31T03:41:04Z,2020-08-31T03:41:04Z,4,39,34,"…` during build
fix #718",2,0
724,2020-08-19T03:26:51Z,2020-08-30T10:05:24Z,2020-08-30T10:05:24Z,2,14,3,fix #670,2,0
732,2020-08-22T12:22:58Z,2020-08-30T09:35:50Z,2020-08-30T09:35:50Z,1,1,0,"fix #696
Set NODE_ENV if it's not present for toolchains like PostCSS to detect the build env.",2,0
734,2020-08-22T14:49:59Z,2020-08-28T07:52:20Z,2020-08-28T07:52:20Z,2,7,1,close #733,3,1
736,2020-08-24T02:46:22Z,2020-08-31T01:42:50Z,2020-08-31T01:42:50Z,1,1,2,close #735,3,0
740,2020-08-24T12:03:27Z,,2020-12-01T17:35:01Z,3,13,2,close #738,4,4
744,2020-08-25T06:55:57Z,2020-08-28T04:15:22Z,2020-08-28T04:15:22Z,1,1,1,close #709,2,0
746,2020-08-26T02:41:47Z,2020-09-07T11:38:49Z,2020-09-07T11:38:50Z,1,3,3,"…ly output es module
fix #728",2,0
750,2020-08-27T07:26:58Z,2020-08-31T06:00:45Z,2020-08-31T06:00:45Z,3,7,5,"Adds the option for CSS modules codegen to output named exports instead (disabled by default)
Not sure how I would do the types so I just did the best that I could.
I'm also not sure about the tests given that playground only has one vite.config.js and changing that would break the tests for the default option
// vite.config.js
export default {
  cssModuleOptions: {
    namedExports: true
  }
}",3,3
763,2020-08-28T15:34:25Z,2020-08-31T01:43:54Z,2020-08-31T01:43:55Z,4,27,0,fix #748,2,0
765,2020-08-29T16:36:51Z,2020-08-30T02:00:40Z,2020-08-30T02:00:40Z,1,3,3,,2,0
774,2020-09-03T09:53:18Z,2020-09-03T12:46:24Z,2020-09-03T12:46:24Z,1,2,1,"since rimraf is already being used on some dependencies, using it instead of rm -rf can make build process platform-independent while not new dependency is introduced",2,0
775,2020-09-03T10:12:42Z,2020-09-03T12:45:48Z,2020-09-03T12:45:48Z,1,1,1,close #773,2,0
783,2020-09-05T21:16:56Z,2020-09-06T00:36:31Z,2020-09-06T00:36:31Z,1,2,2,"This prevents duplication of source paths in the sourcemap emitted by esbuild.
Before this change, the sources array of the final sourcemap would contain duplicate paths, one with ?t= and one without.",2,0
790,2020-09-09T10:13:36Z,2020-10-23T18:54:30Z,2020-10-23T18:54:30Z,3,153,2,"fix #789.
complete this by using vue-next's script.",2,0
791,2020-09-09T12:01:52Z,2020-09-10T10:34:29Z,2020-09-10T10:34:30Z,1,1,1,"Right now if you have a postcss.config.js file, the plugins array grows bigger and bigger over time.
related #331",3,0
793,2020-09-10T14:28:45Z,2020-10-26T19:30:43Z,2020-10-26T19:30:43Z,8,112,16,"This PR introduced a new config indexHtmlTransforms which allows plugins and vite.config.js to transform the index.html for various needs. (not sure about the naming though, feel free to leave comments)
For example, it would be useful for these plugins(probably not exist yet, just giving the context

vite-plugin-meta
vite-plugin-sitemap
vite-plugin-pwa
vite-plugin-minify
etc.

the following config replaces page's title to Vite Playground
// vite.config.js

export default {
  indexHtmlTransforms: [
    {
      flush: 'pre', // or 'post'
      transform({ code, isBuild }) {
        return code.replace(/<title>.*?<\/title>/, '<title>Vite Playground</title>')
      }
    }
  ]
}
flush also provides the ability to control when should the transforms apply (before Vite's processing or after)
Resolves #528, #739
Related #639, vuejs/vitepress#77 (comment)",3,2
800,2020-09-12T00:23:01Z,,2020-09-17T09:17:25Z,2,16,3,"This PR fixes #797, by detecting that the end-user is running within GitHub Codespaces. In this context, the server is being ""forwarded"" outside of the Codespace via a non-localhost URL, and so we want the Websocket/HMR client to connect to the port of the forwarded URL (e.g. 443), not the port of the server running inside the container (e.g. 3000).

Note: This change is generally useful for any virtualized cloud environment that supports secure port forwarding. However, to keep things simple, I simply made the check GitHub Codespaces specific for now.",2,0
803,2020-09-12T13:29:47Z,2020-09-14T02:06:43Z,2020-09-14T02:06:43Z,1,3,1,fix #795,3,0
805,2020-09-12T16:17:02Z,2020-09-14T02:08:48Z,2020-09-14T02:08:48Z,1,1,1,,2,0
807,2020-09-13T02:20:31Z,2020-09-14T01:53:06Z,2020-09-14T01:53:06Z,1,4,0,fix #799,2,0
811,2020-09-13T20:16:31Z,2020-10-23T21:34:40Z,2020-10-23T21:34:40Z,10,52,25,"Adds a new configuration option assetsInclude which overrides the default regex matching here:

  
    
      vite/src/node/utils/pathUtils.ts
    
    
        Lines 52 to 61
      in
      12c7c5d
    
  
  
    

        
          
           const imageRE = /\.(png|jpe?g|gif|svg|ico|webp)(\?.*)?$/ 
        

        
          
           const mediaRE = /\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/ 
        

        
          
           const fontsRE = /\.(woff2?|eot|ttf|otf)(\?.*)?$/i 
        

        
          
            
        

        
          
           /** 
        

        
          
            * Check if a file is a static asset that vite can process. 
        

        
          
            */ 
        

        
          
           export const isStaticAsset = (file: string) => { 
        

        
          
             return imageRE.test(file) || mediaRE.test(file) || fontsRE.test(file) 
        

        
          
           } 
        
    
  


You can use the feature like this:
// vite.config.js
export default {
  assetsInclude(file) {
    return /\.(hdr|glb|usdz|png)$/.test(file)
  }
}",3,4
812,2020-09-14T02:05:03Z,2020-10-23T21:07:13Z,2020-10-23T21:07:13Z,1,5,0,fix #804,4,1
814,2020-09-14T11:35:43Z,2020-09-19T10:42:59Z,2020-09-19T10:42:59Z,1,4,0,fix #806,3,1
823,2020-09-17T05:19:24Z,2020-09-17T08:05:47Z,2020-09-17T08:05:47Z,5,12,6,,2,0
831,2020-09-17T20:59:30Z,2020-09-18T01:38:21Z,2020-09-18T01:38:21Z,1,1,0,,2,0
834,2020-09-18T15:00:27Z,2020-09-19T14:25:42Z,2020-09-19T14:25:42Z,3,5,7,using .+ causes many backtracking in some cases,3,0
835,2020-09-19T10:05:37Z,2020-09-19T14:17:43Z,2020-09-19T14:17:43Z,1,3,0,"This stops the spinner before throwing, when handling rollup warning.
Before this change when using Vite build programatically from another module even when the error is captured the spinner would keep on spinning.",3,0
837,2020-09-20T14:29:07Z,2020-11-24T04:10:41Z,2020-11-24T04:10:41Z,12,338,13,"...so that user can do named import from them.
This is a different approach from pull/825 to fix #720
In the optimze step, it collect information about optimized deps (whether it is cjs).
When rewriting import during vite serve, if the importee is a ""optimized cjs deps"", it will get named import from the default export.
For example,
import React, { useState, createContext } from 'react'
will become
import $viteCjsImport1_react from ""/@modules/react.js"";
const React = $viteCjsImport1_react;
const useState = $viteCjsImport1_react[""useState""];
const createContext = $viteCjsImport1_react[""createContext""];
It is better than #825 because it doesn't require users to manually specific export names.",11,21
841,2020-09-21T07:48:24Z,2020-11-27T03:20:43Z,2020-11-27T03:20:43Z,2,9,2,close #610 (comment),3,1
843,2020-09-21T13:10:22Z,2020-09-21T22:09:06Z,2020-09-21T22:09:06Z,1,1,1,,2,0
865,2020-09-29T06:26:11Z,2020-09-29T07:35:58Z,2020-09-29T07:35:58Z,2,19,4,fix #864,2,0
867,2020-09-29T09:43:56Z,2020-10-23T21:57:14Z,2020-10-23T21:57:14Z,3,24,81,…ile the importer is lack of /index.js,2,0
874,2020-10-02T20:28:36Z,2020-10-26T20:19:49Z,2020-10-26T20:19:49Z,8,273,117,"This is another approach to the proposed configureBuild hook. (See #870 for the first approach)
In this PR, the configureBuild hooks are called before anything is done by the build function (except initializing the build config). When initializing the build config, it gets deep-cloned and filled with default values, so that configureBuild hooks can more easily inspect & mutate it (without checking for undefined everywhere).
Whereas #870 only exposes the Rollup input options to configureBuild, this PR exposes the entire Vite build config, which allows Vite plugins to better manipulate the build process as needed. This means more powerful Vite plugins will be possible.",2,2
901,2020-10-12T14:33:18Z,2020-10-13T01:47:04Z,2020-10-13T01:47:04Z,1,1,1,,3,0
904,2020-10-13T13:51:13Z,,2020-12-18T12:50:33Z,24,197,88,,3,3
918,2020-10-16T23:11:42Z,2020-10-20T03:32:25Z,2020-10-20T03:32:25Z,2,6,5,"This PR allow to serve the frontend by Vite through a custom host in backend.
Running backend at https://laravel.test, frontend at http://localhost:3000 and a view in backend like this:
<body>
  <div id=""app""></div>
  <!-- This will be injected only for dev mode -->
  <script type=""module"" src=""http://localhost:3000/vite/client""></script>
  <script type=""module"" src=""http://localhost:3000/src/main.js""></script>
</body>
This will allow that a different backend host, connect to Websocket correctly #460.
Context:
Instead of get the host info from browser https://laravel.test, Vite will get from your own host/port http://localhost:3000.
Limitation:
It's necessary to use this approach #341 (comment) to add CORS into Vite server.
// vite.config.js 

const cors = require('@koa/cors');

export default {
  configureServer: function ({ app }) {
    app.use(cors({ origin: '*' }));
  },
};
And the backend will need to have a symlink in public folder to serve assets/static files correctly because relative paths will have base URL from backend now, something like this:
/backend
  /public
    /assets -> ../vite-project/src/assets
    /index.php

Fixing partially #341.
Credits:

@Grafikart #341 (comment).
@andrefelipe https://github.com/andrefelipe/vite-php-setup


Update 19/01/2021
For Vite 2.0 is needed change script URL injected in backend view to http://localhost:3000/@vite/client:
<body>
  <div id=""app""></div>
  <!-- This will be injected only for dev mode -->
  <script type=""module"" src=""http://localhost:3000/@vite/client""></script>
  <script type=""module"" src=""http://localhost:3000/src/main.js""></script>
</body>
And assets symlink will be changed to:
/backend
  /public
    /src -> ../vite-project/src
    /index.php",3,1
924,2020-10-19T07:13:36Z,2020-10-23T01:44:33Z,2020-10-23T01:44:33Z,1,1,0,fix #920,2,0
935,2020-10-21T16:00:10Z,2020-10-21T17:41:16Z,2020-10-21T17:41:16Z,1,1,1,,2,0
947,2020-10-23T13:32:21Z,2020-10-23T21:18:12Z,2020-10-23T21:18:12Z,1,13,14,"Also, are we not explicitly stating types?  I've seen many forEach and for...of loops without type defs.  Another question: are we supposed to use for...of or forEach?",2,2
951,2020-10-24T13:44:06Z,2020-10-25T05:43:19Z,2020-10-25T05:43:20Z,3,8,13,"…s chunk
fix #764",2,0
953,2020-10-24T14:11:10Z,2020-10-26T03:22:04Z,2020-10-26T03:22:05Z,3,27,5,"Fix #952

new pluginsPreBuild, pluginsPostBuild and pluginsOptimizer to config rollup plugins for different needs.
revert #746 and #855 to serve plugins matches with the original behavior while mark it as deprecated to advocate users to use explicit options.",3,0
954,2020-10-25T07:10:08Z,2020-10-25T12:08:34Z,2020-10-25T12:08:34Z,1,1,1,"got added in PR #750 , but before that was merged, rollup-pluginutils had been updated to @rollup/pluginutils.
this failed svite tests for yarn2:
      Error: vite tried to access rollup-pluginutils, but it isn't declared in its dependencies; this makes the require call ambiguous and unsound.
      
      Required package: rollup-pluginutils (via ""rollup-pluginutils"")
      Required by: vite@npm:1.0.0-rc.6 (via /home/runner/work/svite/svite/test/cache/yarn2/vite-npm-1.0.0-rc.6-fbccb6c58d-ae04bb7332.zip/node_modules/vite/dist/node/server/)
      
      Require stack:
      - /home/runner/work/svite/svite/test/cache/yarn2/vite-npm-1.0.0-rc.6-fbccb6c58d-ae04bb7332.zip/node_modules/vite/dist/node/server/serverPluginCss.js
      - /home/runner/work/svite/svite/test/cache/yarn2/vite-npm-1.0.0-rc.6-fbccb6c58d-ae04bb7332.zip/node_modules/vite/dist/node/server/serverPluginVue.js
      - /home/runner/work/svite/svite/test/cache/yarn2/vite-npm-1.0.0-rc.6-fbccb6c58d-ae04bb7332.zip/node_modules/vite/dist/node/server/serverPluginHmr.js
      - /home/runner/work/svite/svite/test/cache/yarn2/vite-npm-1.0.0-rc.6-fbccb6c58d-ae04bb7332.zip/node_modules/vite/dist/node/server/serverPluginModuleRewrite.js
      - /home/runner/work/svite/svite/test/cache/yarn2/vite-npm-1.0.0-rc.6-fbccb6c58d-ae04bb7332.zip/node_modules/vite/dist/node/server/index.js
      - /home/runner/work/svite/svite/test/cache/yarn2/vite-npm-1.0.0-rc.6-fbccb6c58d-ae04bb7332.zip/node_modules/vite/dist/node/index.js
      - /home/runner/work/svite/svite/test/temp/javascript/yarn2/minimal/.yarn/$$virtual/svite-virtual-b5ee95e82d/5/cache/yarn2/svite-file-359335bd86-b0d82c44e9.zip/node_modules/svite/bin/svite.js

eg: https://github.com/dominikg/svite/runs/1302251780?check_suite_focus=true#step:7:473",2,0
957,2020-10-26T02:13:38Z,2020-10-26T17:47:07Z,2020-10-26T17:47:07Z,5,93,79,"generate asset by emitFile and format file name by rollup options.
use rollup.write instead of rollup.generate, let many rollup plugins can work with writeBundle hook.

fix #880, fix #912, fix #378",3,1
958,2020-10-26T06:38:11Z,2020-10-26T20:40:19Z,2020-10-26T20:40:19Z,1,14,4,"…inside package.json can be take first.
fix #829",2,0
966,2020-10-27T10:12:24Z,2020-10-28T13:47:12Z,2020-10-28T13:47:12Z,1,12,7,,3,1
973,2020-10-27T18:45:21Z,2020-10-30T16:22:27Z,2020-10-30T16:22:27Z,1,17,15,The dotenv.config and dotenvExpand calls already mutate process.env for us.,2,0
974,2020-10-27T19:06:32Z,2020-10-30T16:22:14Z,2020-10-30T16:22:14Z,1,9,7,"So developers can extend it with their own variables, reducing the need for type casting.
Example
In a .d.ts module of your choosing:
declare interface ImportMetaEnv {
  // Value set via ""env"" option in Vite config
  MY_VAR: boolean

  // Value set via "".env"" file (must start with ""VITE_"")
  VITE_CUSTOM_VAR: string
}
Then in another module:
// Before
fetch(import.meta.env.VITE_CUSTOM_VAR as string)

// After
fetch(import.meta.env.VITE_CUSTOM_VAR)

// Typically no need for type casting with booleans, 
// but now you get auto-completion.
if (import.meta.env.MY_VAR) {
  console.log('sup')
}",2,0
976,2020-10-28T08:03:37Z,,2021-01-02T18:17:20Z,1,14,0,fix #964,2,0
977,2020-10-28T15:16:44Z,2020-11-02T17:25:36Z,2020-11-02T17:25:36Z,12,236,128,"Run post-build hooks before the writeBundle phase
Allow post-build hooks to write assets by mutating the build.assets array
Empty the outDir after the build succeeds (right before the writeBundle phase)
Write the index.html in the writeBundle phase
Copy the public dir in the writeBundle phase
Respect emitAssets: true even if write is false
Respect emitIndex: true even if write is false



Fixes vite-plugin-legacy, which was broken by #957 (comment)
Reverts 5e7c309, which I tacked onto another PR without understanding the emitIndex option's purpose, which is to prevent index.html rendering entirely, not just to prevent writing. (emit !== write)",2,6
979,2020-10-29T02:06:09Z,2020-10-30T00:29:50Z,2020-10-30T00:29:50Z,1,0,1,fix #978,3,0
980,2020-10-29T03:23:38Z,2020-11-02T16:23:16Z,2020-11-02T16:23:17Z,2,13,9,"Github/VS Codespaces don't forward WebSocket requests so the HMR hostname must be manually configured in vite config like so:
hmr: {
  port: 443,
  hostname: '{uuid}-{port}.apps.codespaces.githubusercontent.com'
}
New codespaces get a different UUID so need to be reconfigured each time. This PR infers hostname on the client rather than server by default so codespace users only need to specify the WS port (443) in vite config.
This is the same behaviour as prior to bec6b3c. Use cases such as #918 can now be addressed by defining a hostname in the config as above (introduced subsequently with b753478); these users are less inconvenienced as their backend URL is unlikely to change.",2,0
984,2020-10-30T01:14:56Z,2020-10-30T10:18:13Z,2020-10-30T10:18:13Z,1,0,1,,3,0
987,2020-10-30T02:45:43Z,,2020-10-31T19:02:59Z,1,33,12,Fixes #985,3,3
1001,2020-11-02T08:45:33Z,2020-11-02T16:28:01Z,2020-11-02T16:28:01Z,1,3,1,fix #998,2,0
1010,2020-11-03T05:47:27Z,2020-11-03T08:12:04Z,2020-11-03T08:12:04Z,1,1,1,,2,0
1025,2020-11-05T16:52:54Z,2020-11-05T17:56:07Z,2020-11-05T17:56:07Z,1,3,3,,2,0
1028,2020-11-06T12:09:26Z,2020-11-26T07:54:56Z,2020-11-26T07:54:57Z,3,15,0,fix #1020,3,0
1032,2020-11-07T16:28:41Z,2020-11-08T15:50:18Z,2020-11-08T15:50:19Z,2,2,2,"Fix #1030
@aleclarson  I made the multi build test skip because it is completely broken:

it is using es imports with vite.config.js, you should use vite.config.ts instead to use them
the configureBuild function signature is wrong, i didn't touch it because i don't understand what you are trying to do",2,2
1033,2020-11-08T14:00:10Z,2020-11-08T15:51:48Z,2020-11-08T15:51:48Z,1,1,0,If you try to debug a vite application with --debug the stack traces will point to the files inside of the src directory but this folder is not included in the npm package,2,0
1034,2020-11-09T07:47:14Z,2020-11-09T13:15:30Z,2020-11-09T13:15:30Z,1,9,4,"// vite.config.js
module.exports = {
  rollupInputOptions: {
    pluginsPreBuild: [],
    pluginsPostBuild: [],
    pluginsOptimizer: []
  }
}
This config would cause a warning from rollup: Unknown input options: pluginsOptimizer",2,0
1037,2020-11-09T09:13:08Z,2020-11-09T13:20:05Z,2020-11-09T13:20:05Z,3,10,1,close #1036,4,3
1038,2020-11-09T13:58:47Z,2020-12-04T13:48:47Z,2020-12-04T13:48:47Z,4,16,5,"This ensures CI will not succeed when a module has a syntax error.
Closes #708
Reproduce

Clone https://github.com/aleclarson/repro/tree/vite-708
Run yarn and yarn build
See how the build succeeds, despite a failed transform",2,2
1053,2020-11-11T02:45:51Z,2020-11-11T07:50:50Z,2020-11-11T07:50:50Z,2,18,18,"Optimized code.
Blessing vite.",2,0
1057,2020-11-11T07:47:18Z,2020-11-24T11:23:07Z,2020-11-24T11:23:07Z,1,3,2,"… Symbol.toStringTag flag
fix #1048",2,0
1068,2020-11-12T23:42:12Z,2020-11-13T16:20:58Z,2020-11-13T16:20:58Z,1,3,3,"Before
<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""UTF-8"">
    <link rel=""icon"" href=""/favicon.ico"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Vite App</title>
  <script type=""module"" src=""/_assets/index.2cd1a001.js""></script>
<link rel=""stylesheet"" href=""/_assets/style.0637ccc5.css"">
</head>
  <body>
    <div id=""app""></div>

  </body>
</html>
After
<!DOCTYPE html>
<html lang=""en"">
  <head>
    <meta charset=""UTF-8"" />
    <link rel=""icon"" href=""/favicon.ico"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <title>Vite App</title>
    <script type=""module"" src=""/_assets/index.1647be0c.js""></script>
    <link rel=""stylesheet"" href=""/_assets/style.aa19ad30.css"">
  </head>
  <body>
    <div id=""app""></div>

  </body>
</html>",2,0
1069,2020-11-13T10:17:22Z,2020-11-15T16:09:34Z,2020-11-15T16:09:34Z,2,29,34,"For some projects, such as electron-vue-next, there is a need to load environment variables from non-standard locations and to transfer these environments to other builders (such as rollup, etc.).
This PR will allow simply import loadEnv function from vite and use its algorithm instead of duplicating this algorithm in your own code.
Use cases
Configuring the building of two bundles using a single mechanism for loading environment variables.
import { loadEnv } from 'vite';


// The location of env files can be arbitrary
const dotenvLocation = path.resolve(__dirname, '../../')


// Load all environment variables with the prefix VITE_ to build a web interface
const envForRenderer = loadEnv('production', dotenvLocation)
buildRendererProcessWithEnv(envForRenderer)


// Load all environment variables with the prefix ELECTRON_ to build a backend
const envForMain = loadEnv('production', dotenvLocation, 'ELECTRON_')
buildMainProcessWithEnv(envForMain)
Another use case:
The development environment can be configured to automatically generate *.d.ts files based on .env* and describing environment variables and their types for each mode.",2,2
1073,2020-11-13T14:28:51Z,2020-11-13T16:19:52Z,2020-11-13T16:19:52Z,1,2,1,"Sometimes the sourcemap file has property ""sourceRoot"" like:
// index.js.map
{
  ""version"": 3,
  ""file"": ""index.js"",
  ""sourceRoot"": ""../src/"",
  ""sources"": [
    ""index.ts""
  ],
  ""names"": [],
  ""mappings"": ""AAAA,IAAI,CAAC,GAAG,CAAC,CAAA;AACT,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA""
}",2,0
1074,2020-11-13T20:08:25Z,2020-11-26T07:54:26Z,2020-11-26T07:54:26Z,2,62,43,"If you merge this, please rebase it, as I merged #1003 into this.
Closes #1071",2,2
1081,2020-11-16T01:32:44Z,2020-11-24T11:29:25Z,2020-11-24T11:29:25Z,1,1,1,,2,0
1091,2020-11-17T09:32:01Z,2020-11-17T18:19:19Z,2020-11-17T18:19:19Z,1,1,1,"Master does not compile because of this ts error
src/node/build/index.ts:408:5 - error TS2345: Argument of type 'Partial<BuildConfig>' is not assignable to parameter of type 'UserConfig'.
  Types of property 'env' are incompatible.
    Type 'DotenvParseOutput | undefined' is not assignable to type 'DotenvParseOutput'.
      Type 'undefined' is not assignable to type 'DotenvParseOutput'.

408     options
        ~~~~~~~˙",2,0
1092,2020-11-17T09:37:53Z,2020-11-17T18:26:13Z,2020-11-17T18:26:13Z,1,2,4,Cac converts argv keys to camel case,2,0
1097,2020-11-17T19:30:31Z,2020-11-17T23:12:30Z,2020-11-17T23:12:30Z,1,18,19,"I made the env key in UserConfig optional
I also lowered the typescript target to correctly transpile the optional chaining operator ?.",2,0
1110,2020-11-18T15:57:47Z,2020-11-24T04:10:04Z,2020-11-24T04:10:04Z,1,1,1,I made the typescript target ES2018 to support node 10 and correctly transpile the ?. operator,2,0
1113,2020-11-19T05:23:30Z,2020-11-19T10:14:55Z,2020-11-19T10:14:55Z,2,8,1,,3,0
1116,2020-11-19T11:17:19Z,2020-11-20T11:15:02Z,2020-11-20T11:15:02Z,1,1,0,,2,0
1117,2020-11-19T13:08:34Z,2020-11-24T02:20:59Z,2020-11-24T02:20:59Z,1,4,4,I'm not sure if this was intended but right now it can only build for CommonJS. It would be useful to support ES output (format: 'es').,3,0
1121,2020-11-20T19:39:39Z,2020-11-25T16:56:41Z,2020-11-25T16:56:41Z,6,100,83,"namely new <script setup> and v-bind() css injection.
Note this relies on unpublished typings from @vue/compiler-sfc for the build to pass, but the runtime behavior should be backwards compatible.",2,0
1125,2020-11-22T05:38:19Z,2020-11-25T13:14:52Z,2020-11-25T13:14:52Z,1,0,4,"I doubt whether should we listen to process exit as said because the esbuild process is spawn-ed from main process without detachment, so if the main process exit then the esbuild should be automatically stopped by os.
If we are going to add something just before exit, this gist may be helpful.
Fix #1098",3,6
1129,2020-11-23T15:02:50Z,2020-11-24T02:09:42Z,2020-11-24T02:09:42Z,3,1098,1200,fix #1093,2,0
1130,2020-11-23T17:15:05Z,,2021-01-02T18:17:24Z,8,446,23,"I have implemented some snapshot tests for server's hmr messages, this is useful to track bugs in the server's hmr implementation without having to launch puppeteer
I wrote them in typescript, to do that i installed ts-jest and modified the jest config
To emulate the browser and trigger the initial server logic i used the package es-module-traversal, this package reads the files from the server following its imports until it fetches all files
Fix #1103",4,2
1134,2020-11-24T02:17:44Z,2020-11-24T03:36:20Z,2020-11-24T03:36:20Z,1,1,1,,2,0
1138,2020-11-24T09:49:11Z,2020-11-24T11:29:05Z,2020-11-24T11:29:05Z,3,81,1,,3,0
1144,2020-11-24T21:14:58Z,,2021-01-02T17:38:47Z,8,108,54,"Modifies the web assembly server and build plugins to use the same helper. WebAssembly.instantiateStreaming will be used if available and Content-Type allows, otherwise the helper will fall back to WebAssembly.instantiate.",3,2
1147,2020-11-26T01:47:46Z,2020-11-26T15:04:12Z,2020-11-26T15:04:12Z,1,7,11,"The original function was very oddly written IMHO, I had to long stare at this code trying make sense of it, until I figured what it was supposed to do. So I tried to make it very straightforward and make the intent more clear.",2,1
1152,2020-11-26T14:46:45Z,2020-12-01T09:13:49Z,2020-12-01T09:13:49Z,3,18,7,"Use relative paths as keys of _analysis.json object, this enables to distinguish different files with same import path
I am using unix relative paths as keys of _analysis.json object, this means it will work on windows too
Fix #1151",2,1
1159,2020-11-27T14:54:25Z,2020-11-27T16:54:50Z,2020-11-27T16:54:50Z,1,16,2,"Fix #1031
In case a source file from a sourcemap is missing, the other sources will be processed normally, allowing you to debug the rest of the file",2,0
1165,2020-11-28T11:22:34Z,2020-11-30T15:05:51Z,2020-11-30T15:05:51Z,1,2,2,"When configPath parameter is provided to resolveConfig, isTS is always false even if the provided path is a TypeScript file.",2,0
1175,2020-11-30T13:44:29Z,,2021-01-02T18:17:26Z,1,5,1,Now the transform api must transform file into js mimetype. this feature can allow custom the mime type for dev mode.,3,0
1178,2020-11-30T18:09:36Z,,2021-01-02T17:35:39Z,11,270,306,"Provide a plugin hook to access and alter vite config. It imitates rollup's options hook.
Usage:
import { Plugin } from 'vite'

export const changeConfigPlugin1: Plugin = {
  changeConfig: (prev) => {
    prev.define['__changeConfigPlugin1__'] = 'success'
    prev.plugins.push(changeConfigPlugin2)
    return prev
  }
}

const changeConfigPlugin2: Plugin = {
  changeConfig: (prev) => {
    prev.define['__changeConfigPlugin2__'] = 'success'
    return prev
  }
}
fix: #1162",2,5
1179,2020-12-01T05:22:28Z,2020-12-01T09:08:55Z,2020-12-01T09:08:55Z,1,2,0,"Adding an additional line to the getting started section aimed at novices.
I am just starting out with front end development and came here via the Vue 3.0 docs and struggled with the following error until I installed the latest version of node.
It is my hope that this small contribution can help others starting out with front end development avoid the same issue.
❯ yarn dev                                                                                                                                                                           ─╯
[vite] failed to load config from /home/user/Code/app/pack-manager-client/vite.config.js:
/home/user/Code/app/pack-manager-client/vite.config.js:1
export default {
^^^^^^
SyntaxError: Unexpected token export
    at Module._compile (internal/modules/cjs/loader.js:723:23)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)
    at Module.load (internal/modules/cjs/loader.js:653:32)
    at Function.external_module_.Module._load (/home/user/Code/app/pack-manager-client/.pnp.js:13018:14)
    at Module.require (internal/modules/cjs/loader.js:692:17)
    at require (internal/modules/cjs/helpers.js:25:18)
    at Object.resolveConfig (/home/user/Code/app/pack-manager-client/.yarn/cache/vite-npm-1.0.0-rc.13-37cb3ce7d3-dac6e03086.zip/node_modules/vite/dist/node/config.js:47:30)
    at resolveOptions (/home/user/Code/app/pack-manager-client/.yarn/cache/vite-npm-1.0.0-rc.13-37cb3ce7d3-dac6e03086.zip/node_modules/vite/dist/node/cli.js:98:39)/
    at CAC.cli.command.alias.option.option.option.option.action (/home/user/Code/app/pack-manager-client/.yarn/cache/vite-npm-1.0.0-rc.13-37cb3ce7d3-dac6e03086.zip/node_modules/vite/dist/node/cli.js:43:27)
    at CAC.runMatchedCommand (/home/user/Code/app/pack-manager-client/.yarn/cache/cac-npm-6.6.1-73563e34d3-130be63807.zip/node_modules/cac/dist/index.js:597:34)",2,0
1181,2020-12-01T17:02:28Z,2020-12-02T02:41:23Z,2020-12-02T02:41:23Z,1,7,0,Fixes #1180,2,0
1183,2020-12-02T02:36:01Z,,2021-01-02T18:17:26Z,1,44,9,fix #1176,3,0
1186,2020-12-02T07:50:53Z,2020-12-06T14:51:08Z,2020-12-06T14:51:09Z,1,4,1,fix #1171,3,1
1192,2020-12-03T01:24:51Z,2020-12-04T07:10:58Z,2020-12-04T07:10:58Z,1,4,2,,2,0
1195,2020-12-03T03:51:14Z,2020-12-04T02:19:40Z,2020-12-04T02:19:40Z,4,16,7,"close #1185
Each update shows the update time.",2,0
1200,2020-12-04T08:14:01Z,2020-12-09T16:44:03Z,2020-12-09T16:44:03Z,1,19,12,fix #1190,3,2
1211,2020-12-07T09:32:59Z,2020-12-07T17:36:16Z,2020-12-07T17:36:16Z,1,1,1,change the result.html in the custom BuildPlugin has no effect before. because the change for result is ignored.,2,0
1216,2020-12-09T02:34:09Z,,2021-01-02T08:31:20Z,1,3,11,"fix #795, fix #1141",2,1
1222,2020-12-11T02:36:13Z,,2021-01-02T08:32:44Z,1,9,7,,2,1
1237,2020-12-15T13:33:22Z,2020-12-16T03:31:39Z,2020-12-16T03:31:40Z,1,1,1,,2,0
1250,2020-12-22T13:35:53Z,2020-12-26T11:52:36Z,2020-12-26T11:52:36Z,1,1,1,"I saw there are some people who are confused about how to access .env in vite like me. So I update the docs for the environment. hopefully, it's more understandable ✌️",2,0
1259,2020-12-25T11:25:22Z,2021-01-01T17:27:48Z,2021-01-01T17:27:48Z,1,2,2,"Some tweaks for the 2.0 branch:

--filter <filter> to denote a required argument
--open [browser] to denote an optional argument",3,1
1277,2021-01-01T03:56:37Z,2021-01-02T06:01:34Z,2021-01-02T06:01:34Z,2,5,5,,3,1
1282,2021-01-02T07:18:54Z,2021-01-02T08:29:35Z,2021-01-02T08:29:35Z,1,2,2,,2,0
1283,2021-01-02T08:46:51Z,2021-01-02T09:53:39Z,2021-01-02T09:53:39Z,9,19,19,"Corrected a few typos while reading the new docs.
PS: Really amazing work on Vite 2 and the new documentation ❤️",3,0
1289,2021-01-02T14:11:11Z,2021-01-02T15:13:21Z,2021-01-02T15:13:22Z,1,1,1,,2,0
1292,2021-01-02T15:14:08Z,2021-01-02T16:18:31Z,2021-01-02T16:18:31Z,1,36,10,fix #1287,2,2
1303,2021-01-02T20:32:53Z,2021-01-03T00:09:23Z,2021-01-03T00:09:23Z,1,2,0,"I hope that @vitejs/plugin-vue export Vue SFC query parser API.
As the use-case, i18n custom block that have lang, locale, and global attribute.
e.g. locale attribute:

locale attribute: https://vue-i18n-next.intlify.dev/advanced/sfc.html#define-locale-messages-each-locales

We can have the same parse on the plugin (vite-plugin-vue-i18n) side, since parse is not that hard, but I would like to use the exported Vue SFC query parser to comply official  spec.",2,0
1304,2021-01-02T22:52:27Z,2021-01-03T00:15:02Z,2021-01-03T00:15:02Z,1,3,2,,2,0
1307,2021-01-03T01:41:56Z,2021-01-03T03:39:18Z,2021-01-03T03:39:18Z,2,4,2,"These functions can be useful to plugins.

resolvePackageData provides cache reuse
resolvePackageEntry is complicated enough to be burdensome to reimplement for a plugin to achieve the same behavior",2,1
1310,2021-01-03T04:54:10Z,2021-01-03T08:30:44Z,2021-01-03T08:30:44Z,1,1,1,"When i update file, the logger print undefined [vite] hmr update /src/App.vue
const date = new Date();
console.log(date.toLocaleString('en-US')); // 03/01/2021, 12:46:07 PM
console.log(date.toLocaleString('zh-CN')); // 2021/1/3 下午12:46:07",2,0
1319,2021-01-03T12:58:59Z,2021-01-03T21:26:03Z,2021-01-03T21:26:03Z,1,1,1,"Fixes starter name collision reported by jest (both vanilla and vue were named vite-starter)
Changed it to vite-vue-starter following the convention of other starters.",2,0
1327,2021-01-03T16:39:04Z,2021-01-03T21:37:28Z,2021-01-03T21:37:28Z,2,11,1,..and feed it into the transform hook.,2,0
1334,2021-01-04T04:18:04Z,,2021-01-04T06:06:30Z,1,5,0,"I'm not sure if this is correct, but it did solve my problem.
close #1333",3,1
1347,2021-01-04T09:15:43Z,2021-01-04T14:26:16Z,2021-01-04T14:26:16Z,1,2,1,,2,0
1350,2021-01-04T16:40:08Z,,2021-02-08T05:51:39Z,18,2592,10,"中文翻译版本起稿：

该版翻译中针对 bundle 根据场景、语境采用了两种译法：“构建” 和 ”打包“，对 build 统一采用了 “构建”。
中文 /zh/ 目录下的所有对本站文档的链接均指向了 /zh/xx 而不会跳到 / 引发错乱。
其他更多问题请 @yyx990803 过目审阅。

翻译工作较为仓促，虽然极力求格式规整、意思信达雅，但我本人水平有限，还请协作者中的中文使用者多多建议、修改。🙏
此外在翻译过程中提了一个 vitepress 的 issue，内含一些亟待解决的 bug 👉详情见此，
对其中的 HomeHero 文字修改语言环境无变化的问题：详见 此 PR
望早日 resolve ！",7,25
1354,2021-01-04T21:55:39Z,2021-01-05T01:33:28Z,2021-01-05T01:33:28Z,1,1,1,,2,0
1355,2021-01-04T22:10:12Z,2021-01-05T01:34:21Z,2021-01-05T01:34:21Z,1,1,1,,2,0
1375,2021-01-05T15:36:09Z,2021-01-05T16:43:46Z,2021-01-05T16:43:46Z,1,11,2,"see: #1353
Suppose we have a monorepo such as:
|_ Vite App  (require A)
|_ Dep A (require B)
|_ Dep B

We need to resolve link dep recursively by resolving the dep from the importer root as opposed to config.root.",2,0
1378,2021-01-05T20:48:39Z,,2021-01-07T15:03:33Z,1,2,2,,2,5
1379,2021-01-05T20:57:50Z,,2021-03-27T17:05:51Z,1,3,0,helps suppress Vetur warning,5,11
1382,2021-01-05T23:34:14Z,2021-01-06T02:16:04Z,2021-01-06T02:16:04Z,1,1,1,"Hi and happy new year!
Just a small typo in the doc.
Thanks so much for all the amazing work :)",2,0
1387,2021-01-06T06:11:32Z,2021-01-06T07:34:45Z,2021-01-06T07:34:45Z,2,2,2,Thanks for Vite! 😍,2,0
1394,2021-01-06T12:32:57Z,2021-01-06T13:42:08Z,2021-01-06T13:42:08Z,1,10,8,The example proxy configuration here: https://vitejs.dev/config/#server-proxy doesn't work because it needs to be in a containing server {} block,2,0
1400,2021-01-06T16:09:31Z,2021-01-07T15:00:44Z,2021-01-07T15:00:44Z,1,1,5,,2,2
1403,2021-01-06T16:41:01Z,2021-01-07T01:34:37Z,2021-01-07T01:34:37Z,1,2,2,For advanced usage like https://github.com/antfu/vite-ssg to have better controls over user configs,2,3
1407,2021-01-07T03:34:29Z,2021-01-07T11:34:32Z,2021-01-07T11:34:32Z,1,3,0,add websocket proxy rewrite path feature,2,0
1412,2021-01-07T11:22:13Z,2021-01-07T15:10:06Z,2021-01-07T15:10:06Z,4,10,5,fix #1409,2,0
1432,2021-01-08T11:49:30Z,2021-01-08T15:06:06Z,2021-01-08T15:06:06Z,1,5,2,fix #1426,2,0
1435,2021-01-08T17:30:58Z,2021-01-09T20:56:59Z,2021-01-09T20:56:59Z,4,53,8,"Add injectTo: 'body-prepend' option to HtmlTagDescriptor to allow tag injection after body open
so this
{
  tag: 'noscript',
  injectTo: 'body-prepend',
  children: '<!-- no script content -->'
}
renders:
<body>
  <noscript><!-- no script content --></noscript>
  ....
</body>",2,3
1449,2021-01-09T12:43:02Z,2021-04-05T16:43:48Z,2021-04-05T16:43:48Z,4,139,38,"Add build watch mode (through rollup)
See #1434
Enable watch mode
cli
vite build --watch
vite.config.ts
import { defineConfig } from 'vite'
import { WatcherOptions } from 'rollup'

const watcherOptions: WatcherOptions = {}
export default defineConfig({
  build: {
    watch: watcherOptions, // null to disable (default)
  },
})
Todo

 vite.config.ts reload
 Tests
 Update documentation",8,8
1451,2021-01-09T13:12:06Z,2021-01-09T14:21:27Z,2021-01-09T14:21:27Z,2,5,4,,2,0
1453,2021-01-09T13:23:54Z,2021-01-11T20:15:54Z,2021-01-11T20:15:55Z,3,18,2,"Add server strict port option
See #1425
Enable strict port
exit with code 1 if port is already in use
cli
$ vite --strict-port

error when starting dev server:
Error: Port 3000 is already in use
vite.config.ts
import { defineConfig } from 'vite'

export default defineConfig({
  server: {
    port: 3000,
    strictPort: true,
  },,
})
Todo

 Tests
 Update documentation",3,5
1457,2021-01-09T14:41:45Z,2021-01-09T16:02:00Z,2021-01-09T16:02:00Z,1,2,1,"Hi,
The currently published version of plugin-legacy does not include the index.d.ts file.",2,0
1459,2021-01-09T14:46:17Z,2021-01-10T05:02:52Z,2021-01-10T05:02:53Z,4,101,1,fix: #1458,2,2
1489,2021-01-11T12:46:22Z,2021-01-11T23:03:12Z,2021-01-11T23:03:12Z,1,2,2,"b9d1c2a closes single quote:
- `import { debounce } from 'lodash-es`
+ `import { debounce } from 'lodash-es'`
a56e2bc changes wording:
- causing the page the load quite a bit slower.
+ causing the page to load noticeably slower.
7be0188 fixes case:
- The most common types are those that imports Node.js
+ The most common types are those that import Node.js",2,1
1495,2021-01-12T06:48:01Z,2021-01-12T11:39:30Z,2021-01-12T11:39:30Z,2,16,25,"Fix #1486.
Remove the compare logic so that add components will reload.
Also remove code that generate hash.",3,0
1510,2021-01-13T09:17:09Z,2021-01-13T16:15:21Z,2021-01-13T16:15:21Z,2,13,2,"Implements #1416
Requiring ^ as the beginning of the string is desirable IMO to avoid unnecessary RegEx parsing of all literals",3,3
1540,2021-01-15T02:34:58Z,2021-01-15T14:37:33Z,2021-01-15T14:37:33Z,2,2,2,fix typo,3,0
1544,2021-01-15T07:54:00Z,2021-01-15T14:39:19Z,2021-01-15T14:39:19Z,3,41,22,fix #1542,2,0
1550,2021-01-15T11:13:20Z,2021-01-15T14:28:46Z,2021-01-15T14:28:46Z,1,11,0,"I often come to this repository from the main page of the github. And for me it is a little inconvenient to go to subdirectories for a long time if I want to look at the actual version or changelog of some package.
Other users may feel the same.
How about add a simple table with a list of all packages, theirs current versions and direct links to sources and changelogs?",3,0
1556,2021-01-16T01:41:52Z,2021-01-22T22:45:51Z,2021-01-22T22:45:52Z,25,384,153,"This adds the base option as root level config.base. It propagates down to config.build.base to prevent any plugins from breaking that are referencing config.build.base
Issue: #833",4,3
1572,2021-01-17T13:45:02Z,,2021-01-18T01:32:29Z,9,107,96,,2,1
1575,2021-01-17T23:09:25Z,,2021-06-11T13:57:52Z,1,16,7,"When true, all variables in .env files are exposed to the client. Also, variables in process.env that are prefixed with VITE_ are exposed to the client without the VITE_ prefix.
This is nice when you know your .env files are only used for client-side variables.",2,2
1586,2021-01-19T04:36:07Z,2021-03-15T14:31:50Z,2021-03-15T14:31:50Z,1,4,1,"Description 📖
This pull request mentions awesome-vite in the Backend Integration section, so that users looking to integrate Vite in Laravel and Rails projects can do so more easily.",3,1
1609,2021-01-20T15:43:29Z,2021-01-20T17:41:50Z,2021-01-20T17:41:50Z,1,5,3,"I'm using vite with Vue 3 TS and lazy loading routes.
Previously (with vite 1) I was able to generate preload meta tags using shouldPreload() function, but now I'm trying to migrate this functionality to a custom plugin using the manifest.json file.
Currently the manifest plugin generates the following output:
{
  ""index.js"": {
    ""file"": ""assets/index.47f0281f.js"",
    ""imports"": []
  }
}
With this little PR the manifest.json will contain all the dynamic imports in the following way, allowing a much wider area of use:
{
  ""index.js"": {
    ""file"": ""assets/index.47f0281f.js"",
    ""imports"": [],
    ""dynamicImports"": [
      ""assets/About.e27cd12c.js""
    ]
  },
  ""About.js"": {
    ""file"": ""assets/About.e27cd12c.js"",
    ""imports"": [
       ""assets/index.47f0281f.js"",
     ],
    ""dynamicImports"": []
  }
}",2,0
1611,2021-01-20T16:35:21Z,2021-01-20T17:40:39Z,2021-01-20T17:40:39Z,2,8,2,"As suggested in #1549 (comment), this PR adds a link to https://vite-rollup-plugins.patak.dev in the rollup plugin compat section.
Also fixed a typo and added a section in Plugins/index that links to Rollup Plugin Compatibility Section.",2,0
1649,2021-01-22T18:13:42Z,2021-03-24T06:07:41Z,2021-03-24T06:07:41Z,1,5,3,,4,1
1675,2021-01-23T18:03:11Z,,2023-04-01T09:24:05Z,2,48,5,"For rewriting the public URLs of static assets.
Used by vite-plugin-rehost and vite-plugin-public.",6,5
1693,2021-01-24T21:54:49Z,2021-01-25T02:40:45Z,2021-01-25T02:40:45Z,2,10,6,"Context
This PR aligns Vite server resolved ids in Windows with the way paths are handled in Rollup. I tried to assess the impact of this change as best as I could, further review and testing may be needed.
In Rollup, if the resolveId hook defaults the resolution of absolute paths to a fully resolved path that includes the volume.
@rollup/plugin-alias internally normalizes paths by removing the volume, but this id is fed to the resolveId hook manually, and ends up being resolved so the volume is part of the final id.
The rest of the official rollup plugins, uses the createFilter(include,exclude) pattern internally that normalizes paths by switching all slashes to posix, but leaves the volume untouched.
Vite server is currently removing the volume as part of its path normalization, so the filters for rollup plugins are not compatible. The createFilter pattern is common practice in official rollup plugins, so I think it is important to try to fix this compatibility issue.
Changes
These changes only affect windows

normalizePath only changes slashes to posix, aligned with rollup
fsPathFromId keeps the volume in windows
tryResolveFile in vite:resolve plugin uses path.resolve in windows to ensure the volume is present

Tests

In windows, all tests were green after these changes (Windows 10 Home, 10.0.18363 N/A Build 18363, Node version: v15.5.0, yarn v1.22.10)
@rollup/plugin-replace include/exclude filters now works. Fixes #1522
@rollup/plugin-strip default include config now works. Fixes #1522 (comment)
Other rollup plugins that are using the createFilter(include,exclude) pattern should also work now.

Observations

I also tested wmr, and it looks like it is also removing the volume so they should be experiencing the same compatibility issues
normalizePath from @rolluputils could be used instead of the current version. This may help avoid compatibility issues in the future.
In Rollup, ids are only normalized inside filters, but slashes are not normalized to posix in windows as part of the default id resolution. There remains a compat issue because of this difference with vite in @rollup/plugin-legacy (#1521). Aligning the usage of slashes is more involved though, and I do not know how important it is. I think rollup plugins should normalize paths, and @rollup/plugin-legacy could be patched to do so.",2,1
1716,2021-01-25T22:05:13Z,,2021-04-19T23:50:52Z,1,6,4,"Base64 is unnecessary for SVG files: #1197 (comment)
Also using Buffer.byteLength instead of character length when comparing with the assetsInlineLimit option.
Closes #1204",5,4
1750,2021-01-27T15:42:31Z,,2021-01-27T23:33:21Z,2,2,2,"Description 📖
This pull request is an attempt to fix #1749.
Background 📜
The urls for files imported from outside the root are prefixed with /@fs/.
If the file path was absolute, the result is a /@fs//... url, with two slashes.
Have in mind that path.join and path.posix.join will return a joined path with any double slashes removed.
The Bug 🐞
Modules with an @fs url are duplicated in the module graph, because they are:

Added first in ensureEntryFromUrl with a url that has a double slash
Updated in updateModuleInfo with a url without a double slash

The reason it doesn't have a double slash when updates, is that path.posix.join removes the double slash from /@fs//... and turns it into /@fs/....
join is called after calling ensureEntryFromUrl, and before calling updateModuleInfo.
Summary
HMR works again with this fix, and the patch added in #1323 ensures the double slash is added again.",2,3
1774,2021-01-28T15:16:31Z,,2021-01-28T22:42:00Z,1,16,0,"Description 📖
This pull request is an attempt to fix #1765, by modifying the manifest output for asset entrypoints.
The manifest output now ignores empty chunks, and replaces their file with an actual asset path (if one exists).
As a result, the regression is fixed, and obtaining the resource URL for generic entries (JS/CSS/images) becomes simpler since file is always the source of truth for the resource path, regardless of the entry type.
Before
  ""logo.svg"": {
    ""file"": ""assets/logo.f1745d22.js"",
    ""src"": ""logo.svg"",
    ""isEntry"": true
  }
But the fingerprinted file is actually assets/logo.41cff365.svg, which is not in the manifest, but is in the output dir.
After
  ""logo.svg"": {
    ""file"": ""assets/logo.41cff365.svg"",
    ""src"": ""logo.svg"",
    ""isEntry"": true
  }
Background 📜
When adding a non-JS and non-CSS entrypoint, such as an .svg, in the manifest entry:

A fingerprinted version of the file is added correctly to the output dir, but
file points to an empty JS chunk, and it can't be used to resolve the file

Prior to beta 51 file had the resolved path to the fingerprinted file.

Manifest in Beta 51/52
{
  ""application.js"": {
    ""file"": ""assets/application.d9514acc.js"",
    ""src"": ""application.js"",
    ""isEntry"": true,
    ""imports"": [
      ""_vendor.880705da.js"",
      ""example_import.js""
    ],
    ""css"": ""assets/application.f510c1e9.css""
  },
  ""example_import.js"": {
    ""file"": ""assets/example_import.8e1fddc0.js"",
    ""src"": ""example_import.js"",
    ""isEntry"": true
  },
  ""logo.svg"": {
    ""file"": ""assets/logo.f1745d22.js"",
    ""src"": ""logo.svg"",
    ""isEntry"": true
  },
  ""styles.css"": {
    ""file"": ""assets/styles.81b3e972.js"",
    ""src"": ""styles.css"",
    ""isEntry"": true,
    ""css"": ""assets/styles.0e53e684.css""
  },
  ""_vendor.880705da.js"": {
    ""file"": ""assets/vendor.880705da.js""
  }
}


Entire Manifest after changes in this PR
{
  ""application.js"": {
    ""file"": ""assets/application.d9514acc.js"",
    ""src"": ""application.js"",
    ""isEntry"": true,
    ""imports"": [
      ""_vendor.880705da.js"",
      ""example_import.js""
    ],
    ""css"": ""assets/application.f510c1e9.css""
  },
  ""example_import.js"": {
    ""file"": ""assets/example_import.8e1fddc0.js"",
    ""src"": ""example_import.js"",
    ""isEntry"": true
  },
  ""logo.svg"": {
    ""file"": ""assets/logo.41cff365.svg"",
    ""src"": ""logo.svg"",
    ""isEntry"": true
  },
  ""styles.css"": {
    ""file"": ""assets/styles.0e53e684.css"",
    ""src"": ""styles.css"",
    ""isEntry"": true
  },
  ""_vendor.880705da.js"": {
    ""file"": ""assets/vendor.880705da.js""
  }
}
Have in mind that it doesn't affect the format for non-entrypoint CSS in the manifest.",2,2
1777,2021-01-28T16:25:57Z,,2021-01-28T21:22:46Z,1,22,0,"Fixes #1748
Since esbuild is not providing any way to customize out destination, the workaround is to alias entrypoints using plugin callbacks",2,1
1842,2021-02-02T03:21:42Z,2021-02-02T08:26:28Z,2021-02-02T08:26:28Z,1,1,1,,2,0
1862,2021-02-03T18:05:21Z,,2021-02-03T19:31:50Z,1,5,0,"Without this shim, IDE Typescript support has trouble dealing with imports from .vue files.",3,5
1879,2021-02-05T00:52:09Z,2021-02-05T15:33:23Z,2021-02-05T15:33:24Z,1,3,1,"Since Vite has built-in support for importing json, I think it's reasonable to have this enabled so the json be imported out-of-the-box.",3,0
1884,2021-02-05T03:22:18Z,,2021-05-11T10:37:46Z,1,16,5,"If the user js sources have jsx syntaxes, but the file extension ends with js, he may want to force esbuild to use ""jsx/tsx"" loaders in the vite.config.js.
However, during the dep scan phase, the esbuildScanPlugin will fail because esbuild will complain that js contains jsx tags.
This fix will force the esbuild to use user-provided loader configs during dep scan phase to mitage this issue.",4,3
1892,2021-02-05T08:44:52Z,2021-02-05T14:57:07Z,2021-02-05T14:57:07Z,1,1,1,Fix Pre-bundling link from https://vitejs.dev/guide/features.html#npm-dependency-resolving-and-pre-bundling to redirect to https://vitejs.dev/guide/dep-pre-bundling.html instead of https://vitejs.dev/guide/dep-rep-bundling.html,2,0
1905,2021-02-06T06:48:16Z,2021-02-06T12:30:29Z,2021-02-06T12:30:29Z,1,1,1,,2,0
1922,2021-02-07T05:39:39Z,2021-02-12T16:46:53Z,2021-02-12T16:46:53Z,2,56,0,"Background
利用 GitHub Actions 帮助你处理 issues。根据该仓库以往处理 issues 的记录加了一些功能，不对或欠缺地方可以提出来。
Changelog

给 Issue 加 Label

contribution welcome 或 help wanted

github actions bot 自动评论
自动移除 bug: pending triage need reproduction label，如果有的话


enhancement 或 bug: upstream 或 bug: hmr 或 bug

自动移除 bug: pending triage label


need reproduction

自动评论，评论内容若有需要改动地方，可提出
自动移除 bug: pending triage label




每天定时触发

检测标记有 need reproduction 的 issues，若 3 天未活跃，则自动关闭 issue",2,4
1926,2021-02-07T07:59:23Z,,2021-04-09T07:41:40Z,17,217,44,"close #1925
Modify client websocket port from __HMR_PORT__ to location.port .
Websocket client will connect to frontend port instead of backend port when there is a reverse proxy.",10,5
1933,2021-02-07T16:50:10Z,2021-02-08T15:23:49Z,2021-02-08T15:23:49Z,4,56,2,"This PR is derived from the work at https://github.com/threepointone/vite-plugin-react-jsx. It has 2 specific changes:

It adds enforce: 'pre' to the plugin, so that it gets called before it gets passed through esbuild (i.e. before it loses jsx tags). It modifies the parserOpts passed to babel to account for this.
It adds 2 babel plugins (transform-react-jsx-self,  transform-react-jsx-source) which adds metadata on to jsx tags, allowing tools like React Devtools to show filename and line number information for an element.

There's a separate conversation to have about providing support for React's new jsx transform, and potentially renaming this plugin (if at all), but we can talk about that later. There's value in just landing this separately right now imo.",4,8
1992,2021-02-12T14:13:36Z,2021-05-10T05:10:21Z,2021-05-10T05:10:21Z,4,69,20,"If you are running vite over https, HMR works great in the standalone mode, but when in middleware mode, the middleware might be served over https and the websocket server wouldn't listen on https. This updates the websocket server to respect the config.server.https option when in middleware mode too.

Moves the https config into a top level key of the resolved config, so its only resolved once (and only one set of certs is generated) and can be shared between different consumers
Boots a secure websocket server when in middleware mode if the config.server https option is on",9,24
2019,2021-02-14T07:28:56Z,2021-04-17T23:45:27Z,2021-04-17T23:45:27Z,3,21,6,So it can be resued by community plugins to have the uniformed log outputs.,3,2
2023,2021-02-14T12:57:15Z,2021-04-10T07:31:31Z,2021-04-10T07:31:31Z,9,82,0,According to the other templates it might be a helpful addition to have a vanilla typescript template aswell.,8,7
2042,2021-02-15T20:46:42Z,2021-08-14T01:36:58Z,2021-08-14T01:36:58Z,1,16,0,"…ional dependencies
As Vite can require sass, stylus or less at runtime, we should add these packages as optional dependencies to ensure Vite plays nice with Yarn 2's PnP mode.
As the peer dependencies are optional, package managers won't complain if these dependencies are not provided.
I'm a little unsure of the versions I specified: I just specified the latest stable version. If specifying lower dependency version ranges would make more sense, let me know",6,3
2055,2021-02-17T14:32:14Z,2021-02-17T16:23:37Z,2021-02-17T16:23:37Z,4,9,3,"Currently if you config
define: {
  'process.env.XXX': 'myVar'
}

for
console.log(process.env.XXX)

the output will be console.log({}.xxx).
It is caused by the order of the generated replacement regexp.
The builtin process.env. to ({}).'s replacement took place firstly.",2,0
2069,2021-02-18T03:04:22Z,,2021-02-18T14:58:42Z,1,5,1,"I have worried about new Function. It may cause some problems.
Maybe there are other ways, such as converting module graph to cjs?",3,1
2097,2021-02-19T12:36:46Z,2021-02-22T15:57:37Z,2021-02-22T15:57:37Z,1,4,1,Fix #2096,3,0
2101,2021-02-19T14:52:51Z,,2021-02-19T20:18:11Z,1,4,2,fix #2094,3,1
2103,2021-02-19T16:18:28Z,2021-02-19T20:03:24Z,2021-02-19T20:03:24Z,1,9,6,"Follow up of #2072

  
    
      vite/packages/create-app/index.js
    
    
         Line 84
      in
      c391ea3
    
  
  
    

        
          
           : `${template} isn't a valid template. Please choose from below: ` 
        
    
  



Boolean value for --template.

create-app app -t


Not supplying a template.

create-app app

Patch",3,0
2104,2021-02-19T16:36:49Z,2021-02-19T20:19:28Z,2021-02-19T20:19:28Z,1,2,2,fix doc,3,1
2105,2021-02-19T17:50:58Z,,2021-02-19T20:01:35Z,17,176,1,Add ef.js template to Vite,3,1
2111,2021-02-19T23:25:21Z,,2021-02-22T16:04:30Z,1,35,17,Fix for issue: vue/ts template broken,3,3
2119,2021-02-20T04:47:00Z,2021-02-21T02:44:49Z,2021-02-21T02:44:49Z,1,1,1,,2,0
2123,2021-02-20T06:51:30Z,,2021-05-13T14:28:16Z,7,31,4,Close #2113,4,5
2127,2021-02-20T08:16:37Z,2021-02-21T02:32:29Z,2021-02-21T02:32:29Z,1,1,1,fixed: missing-semicolon-after-character-reference,3,0
2131,2021-02-20T11:30:54Z,2021-02-22T16:09:59Z,2021-02-22T16:09:59Z,1,4,2,"I'm not entirely sure that this is the best version of the solution, but it solves an issue where the short flags for --debug and --filter get ignored.
I'm not sure if --profile needs the same treatment? I took a look around but didn't see where it was used, let alone if it should have a functional short flag.",4,0
2142,2021-02-21T05:02:05Z,2021-02-24T15:04:51Z,2021-02-24T15:04:51Z,4,25,6,"Fix #2128
Note: this PR only fix user empty the template but doesn't fix user unlink the .vue file, i think that one needs more consideration.",2,0
2149,2021-02-21T10:54:32Z,2021-02-21T14:14:34Z,2021-02-21T14:14:34Z,3,6,6,,3,0
2157,2021-02-21T19:57:00Z,,2022-05-29T13:09:26Z,6,81,5,"Summary
Closes #2152
When ""type"": ""module"" is set for a package, vite build --ssr will not build to CJS, but ESM
I'm not sure if it's worth adding a test for this? It would basically just be a test checking the the ability to read the package file and Rollup's ability to output ES. Let me know if I should though, I certainly can.",6,8
2160,2021-02-22T02:44:57Z,2021-02-26T23:02:58Z,2021-02-26T23:02:58Z,1,8,3,"Which will cause minifying css warning.
reproduce
// node_modules/some-package-for-test/index.js
require('./index.css');
// the entry js file
import 'some-package-for-test'
// run build
vite build
// output
warnings when minifying css:
Invalid character(s) 'getAugmentedNamespace from ""commonjsHelpers.js""; export default getAugmentedNamespace(test);' at 1:149. Ignoring.
Invalid selector 'import * as test from ""/path/project/node_modules/test/index.css""; import' at 1:20. Ignoring.",3,1
2167,2021-02-22T09:15:30Z,,2021-02-22T14:18:01Z,1,1,1,"- By default, the dev server (`serve` command) runs in `development` mode, and the `build` command runs in `production` mode.
+ By default, the dev server (`dev` command) runs in `development` mode, and the `build` command runs in `production` mode.
When using the serve command, it is actually in production mode, here should be the dev command.",2,1
2175,2021-02-22T12:52:26Z,2021-02-22T14:30:49Z,2021-02-22T14:30:49Z,2,5,5,7.4.1 and 7.4.2 include fixes for WSL support,2,0
2176,2021-02-22T12:54:37Z,2021-02-22T14:23:15Z,2021-02-22T14:23:15Z,2,4,2,Use constant FS_PREFIX to maintain consistency,2,0
2193,2021-02-23T12:45:26Z,2021-05-09T15:36:24Z,2021-05-09T15:36:24Z,1,4,0,"I added a small note that attachments always inline in library mode, ignoring assetsInlineLimit option.",5,2
2227,2021-02-25T05:06:28Z,2021-03-29T18:03:44Z,2021-03-29T18:03:44Z,4,55,22,"Not use stylus type  in DefinitelyTyped, because there has a error https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/stylus/index.d.ts#L661 that filename is optional.",3,3
2299,2021-02-27T19:57:37Z,2021-03-02T16:25:22Z,2021-03-02T16:25:22Z,1,8,2,"When calling vite.build rapidly, there is a race condition situation where directory is already removed already by previous build (nuxt-vite issue)",4,1
2309,2021-02-28T15:06:45Z,2021-03-02T19:23:15Z,2021-03-02T19:23:15Z,1,2,0,This fixes a critical error when loading static files from the root of the file system. This problem is observed on Windows. Not sure if it is relevant for other systems.,5,3
2313,2021-02-28T18:09:45Z,2021-03-02T16:21:10Z,2021-03-02T16:21:10Z,1,1,1,"Should await bundle.close() in build,
because some async rollup hooks will emit when bundle.close() called.",3,0
2323,2021-03-01T17:37:59Z,2021-03-24T06:01:44Z,2021-03-24T06:01:45Z,4,46,5,"After testing in playground, I found that when using background url which contains alias in sass/less, there will be link error scenarios.(fix #2316)",4,1
2338,2021-03-02T15:46:37Z,2021-03-15T14:12:22Z,2021-03-15T14:12:22Z,2,8,5,"In middleware mode Vite starts a separate websoket server but some cloud IDEs (like repl.it) only expose port 80/443 so a separate server is not an option, this PR adds config.server.hmr.server to allow a custom user-provided websocket server.",5,3
2339,2021-03-02T15:48:27Z,2021-03-15T08:52:01Z,2021-03-15T08:52:01Z,4,273,1,"This PR adds a deploying guide for static sites to the docs, based on the guide from VitePress docs (that was ported from the VuePress docs).
There have been a lot of questions in Vite Land about doing simple static deploys. This guide should help to guide these users.
I haven't tested each service, I am assuming that the guide in VitePress is correct. If there are issues with some steps, this guide can be a base to get PRs from others (I'll check if that happens to also update the VitePress docs).",3,0
2340,2021-03-02T17:05:41Z,2021-03-29T20:25:03Z,2021-03-29T20:25:03Z,1,14,10,"Network without the patch:

With the patch:",4,0
2353,2021-03-03T07:53:31Z,2021-03-05T13:04:28Z,2021-03-05T13:04:28Z,1,8,3,Fix #2347,2,0
2358,2021-03-03T14:53:22Z,2021-03-15T14:01:34Z,2021-03-15T14:01:34Z,4,25,0,"Description 📖
This pull request adds a test to prevent regressions in static file serving as in #2201, which has a high impact downstream.
The added scenario ensures the 404 check fails in 2.0.4, and passes in the current version.
Background 📜

After #2201, released in 2.0.4, files outside the root folder would 404.
After #2309, released in 2.0.5, files outside the root folder are served as expected.
Nothing prevents it from breaking again since this flow is not being tested.",3,0
2362,2021-03-03T20:38:10Z,2021-03-06T08:51:21Z,2021-03-06T08:51:21Z,1,1,4,"Description 📖
This pull request changes the way @fs paths are processed by prettifyUrl.
Before
Prior to these changes, @fs URLs were incorrectly printed if they were absolute paths:
vite:load 0ms   [fs] ../../../Projects/pingcrm-vite/app/javascript/Shared/SelectInput.vue +10ms
vite:transform 6ms   ../../../Projects/pingcrm-vite/app/javascript/Shared/SelectInput.vue +11ms
vite:time 9ms   ../../../Projects/pingcrm-vite/app/javascript/Shared/SelectInput.vue +11ms

After
Now @fs paths are printed relative to the root:
vite:load 0ms   [fs] ../Shared/SelectInput.vue +14s
vite:transform 14ms  ../Shared/SelectInput.vue +14s
vite:time 16ms  ../Shared/SelectInput.vue +14s",2,0
2368,2021-03-04T04:03:14Z,2021-03-05T13:17:11Z,2021-03-05T13:17:11Z,1,1,1,Fix #2367,3,0
2376,2021-03-04T13:17:32Z,2021-03-06T06:57:53Z,2021-03-06T06:57:53Z,1,1,0,Closes #2374,5,5
2379,2021-03-05T04:30:46Z,,2021-09-22T09:16:28Z,3,19,0,"It is a quite common scenario for users to use node environment variables in both script files and  HTML files, for example, in my real project, I use process.env.COMMIT_HASH in js
function Version(){
  return <div>{process.env.COMMIT_HASH}</div>
}
and also in an inlined script in HTML template:
<script src=""path/to/error-tracker.js""></script>
<script>
ErrorTracker.init({
  version: process.env.COMMIT_HASH
})
</script>
With the current version of vite, I can easily config define to accomplish that in js files, but I have to write another plugin with transformIndexHtml hook to replace the same node envs in HTML files.
This PR adds a boolean property defineHtml  to simplify and unify that replacement. And they both shared the same define config, so I can config once, use in both HTML and js files.
// vite.config.js
export default defineConfig({
  define: {
    'process.env.COMMIT_HASH': JSON.stringify(process.env.COMMIT_HASH),
  },
  defineHtml: true,
  // ...other configs
})",4,4
2385,2021-03-05T07:15:59Z,,2021-03-15T13:54:16Z,3,24,1,Project name should not contain special characters like space. So we can exit when no suitable name provided.,4,2
2406,2021-03-06T17:00:24Z,2021-03-15T08:21:59Z,2021-03-15T08:21:59Z,1,3,3,,3,1
2408,2021-03-06T18:41:30Z,2021-03-07T07:01:04Z,2021-03-07T07:01:04Z,1,1,1,,2,0
2414,2021-03-07T10:06:29Z,2021-03-07T12:57:28Z,2021-03-07T12:57:28Z,1,1,1,Inlined sourcemap is undocumented feature.,2,0
2420,2021-03-07T15:03:26Z,2021-03-08T06:53:57Z,2021-03-08T06:53:57Z,2,5,5,,2,0
2421,2021-03-07T15:58:23Z,,2021-03-31T14:12:03Z,7,181,10,"run yarn build-vite to rebuild vite first.
run npx jest proxy and get the result:

PS C:\Users\cisen\Desktop\develop\pr\vite\2\vite> npx jest proxy
  console.log
    http://localhos:8081/

      at Server.<anonymous> (temp/proxy/server.js:9:15)

  console.log
    http://localhos:8080/

      at Server.<anonymous> (temp/proxy/server.js:17:15)

 PASS  packages/playground/proxy/__tests__/proxy.spec.ts
  √ /router (69 ms)

Test Suites: 1 passed, 1 total
Tests:       1 passed, 1 total
Snapshots:   0 total
Time:        2.059 s
Ran all test suites matching /proxy/i.",3,4
2423,2021-03-07T22:11:04Z,2021-03-08T06:53:27Z,2021-03-08T06:53:27Z,1,1,1,fix simple spelling error (i off by 1 issue 😅 ),2,0
2425,2021-03-08T01:40:11Z,2021-03-15T13:55:01Z,2021-03-15T13:55:02Z,1,4,1,"The config was defined too early in resolveConfig. config.logLevel and config.clearScreen both aren't defined yet, so these options do not work.",5,3
2432,2021-03-08T10:23:02Z,,2021-10-27T11:54:32Z,1,32,14,"before, vite did not check filePah that includes '#' is adirectory; when code includes
const contains = require('es5-ext/string/#/contains')
throw error",16,23
2435,2021-03-08T17:29:24Z,2021-03-15T14:16:16Z,2021-03-15T14:16:16Z,1,9,2,"Fixes #2422.
This PR updates injectQuery to handle Windows paths in a saner manner.

As url.parse has been deprecated in Node, relative paths are now resolved using new URL(url, 'relative:///').
When a Windows drive letter is erroneously used as a protocol (e.g. c:), it instead resolves it using url.pathToFileURL and removes the first character (a forward slash) so that the following code in importAnalysis can properly handle it as an in-root URL:


  
    
      vite/packages/vite/src/node/plugins/importAnalysis.ts
    
    
        Lines 182 to 192
      in
      76f3535
    
  
  
    

        
          
           // normalize all imports into resolved URLs 
        

        
          
           // e.g. `import 'foo'` -> `import '/@fs/.../node_modules/foo/index.js` 
        

        
          
           if (resolved.id.startsWith(root + '/')) { 
        

        
          
             // in root: infer short absolute path from root 
        

        
          
             url = resolved.id.slice(root.length) 
        

        
          
           } else if (fs.existsSync(cleanUrl(resolved.id))) { 
        

        
          
             // exists but out of root: rewrite to absolute /@fs/ paths 
        

        
          
             url = path.posix.join(FS_PREFIX + resolved.id) 
        

        
          
           } else { 
        

        
          
             url = resolved.id 
        

        
          
           }",5,3
2436,2021-03-08T22:18:15Z,,2021-12-07T16:23:03Z,8,66,28,"Hi, this PR adds support for handling https://github.com/postcss/sugarss in css plugin, it's Indent-based CSS syntax for PostCSS.
Biggest change here is how the postcss config is resolve.
For handling .sss we need tell postcss to use the sugarss parser but not for css files. This can be achieved via passing a id that will be passed  ctx: { file: string } to config. Similar as https://github.com/webpack-contrib/postcss-loader does it.
Current implementation was caching resolved config, this is not true now as we resolved it per id. Changed it to keep cache for each id, but wondering now if that will give any significant performance improvement, or just increase memory 🤔
Added cachedPostcssConfigPath that will keep path to resolved config this can impact performance.",6,4
2438,2021-03-09T06:43:29Z,2021-03-09T08:16:10Z,2021-03-09T08:16:10Z,1,2,2,,2,0
2441,2021-03-09T14:30:20Z,2021-03-15T14:19:44Z,2021-03-15T14:19:44Z,8,305,56,"Closes #2391

Swaps out the unmaintained merge-source-maps dependency with @ampproject/remapping for better future-proofing.
In the case of empty sourcemaps, skip the merging process.",8,3
2450,2021-03-10T05:01:01Z,2021-03-13T10:45:04Z,2021-03-13T10:45:05Z,1,4,1,"An alternative would be to use importer instead of path.relative(process.cwd(), importer), though personally I find the latter easier to read when I encounter it",2,0
2474,2021-03-11T14:08:37Z,,2022-05-12T21:50:07Z,2,33,2,"Vite exposes the option of disabling HMR completely. I'd welcome a contrary opinion, but there seems to be no reason to start a WS server in this case, and there are reasons why users might want to have it disabled.
In this instance we might also consider not attempting a connection in packages/vite/src/client/client.ts either, or disabling the client completely.",10,13
2475,2021-03-11T15:43:12Z,2021-04-14T19:23:13Z,2021-04-14T19:23:13Z,3,10,4,"This feature is primarily for frameworks that use Vite under the hood:

Frameworks might need to load .env before starting Vite dev server, so they use the loadEnv function provided by Vite.
Vite loads .env again when it's unnecessary
Vite restarts when .env changes but this should be left to user in this case",4,2
2477,2021-03-12T03:09:35Z,2021-03-13T10:46:05Z,2021-03-13T10:46:05Z,1,1,1,,2,0
2488,2021-03-12T19:20:14Z,2021-03-16T14:14:25Z,2021-03-16T14:14:25Z,4,10,20,"We've just released a preset for vite so that it's even easier for Preact users to get started with vite. With this we want it to make easier for us to keep the templates up to date and make it less painful for users to upgrade when we add new features to our preset.
Before:
import { defineConfig } from 'vite'
import preactRefresh from '@prefresh/vite'

// https://vitejs.dev/config/
export default defineConfig({
  esbuild: {
    jsxFactory: 'h',
    jsxFragment: 'Fragment',
    jsxInject: `import { h, Fragment } from 'preact'`
  },
  plugins: [preactRefresh()]
})
After:
import { defineConfig } from 'vite'
import preact from '@preact/preset-vite'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [preact()]
})
See: https://github.com/preactjs/preset-vite
EDIT: Updated for the new preset version which returns an array of plugins now.",5,4
2494,2021-03-13T06:36:09Z,2021-06-27T21:14:11Z,2021-06-27T21:14:12Z,4,47,22,Fixes #2493,5,2
2495,2021-03-13T07:28:20Z,,2022-05-08T09:17:49Z,12,214,41,"Motivation
Sometimes we need to ignore some files or directories when using import.meta.glob, such as ignoring components or utils directories, files beginning with _ or ., etc.
A typical application scenario is:
In a file-based routing system, all files starting with lowercase letters and numbers in the pages directory will be automatically imported as routers by src/pages/**/[a-z0-9]*.tsx, and the following files or directory will be ignored:

Directories or files beginning with a capital letter (this will be regarded as a component)
components or utils directory
Files or directories beginning with . or _
Type definition files ending in d.ts
Test files ending with test.ts, spec.ts, e2e.ts

That will be difficult to achieve if only one pattern can be specified (make duplicated multiple level path rule in glob pattern is very difficult, See mrmlnc/fast-glob#306), but that can be easy if the ignore option of fast-glob can be specified.
Document
You can also pass the second argument to ignore some files:
const modules = import.meta.glob('./dir/*.js', '**/b*.*')
That will ignore all files whose name starts with b, the file ./dir/bar.js will be ignored, the above will be transformed into the following:
// code produced by vite
const modules = {
  './dir/foo.js': () => import('./dir/foo.js')
}",6,5
2505,2021-03-14T05:43:03Z,2021-05-29T03:09:39Z,2021-05-29T03:09:39Z,7,84,9,"Resolve #2093
Uses test.concurrent to test shared worker operation. It's still an experimental API. May there's a better way to do this test (or maybe add test for the compiled worker file instead of E2E test). 🤔
Update 1
use test.concurrent.each, this API is stable.",4,8
2506,2021-03-14T11:47:17Z,2021-03-15T13:59:53Z,2021-03-15T13:59:53Z,7,20,56,"startService stopService are removed (no longer needed)
metafile is directly returned by esbuild",4,1
2510,2021-03-15T02:42:06Z,2021-03-15T13:57:50Z,2021-03-15T13:57:50Z,1,14,2,Close #2496,3,0
2519,2021-03-15T15:29:44Z,2021-04-11T10:01:29Z,2021-04-11T10:01:29Z,2,5,2,"Fixes #2390
The condition source.includes('import.meta.glob') won't catch source code like import.meta['glob'] or new lines between meta and glob, but the subsequent transform() code won't either anyways.
        const { s: start, e: end, ss: expStart, d: dynamicIndex } = imports[
          index
        ]

        // This as well doesn't catch `import.meta['glob']` 
        const isGlob =
          source.slice(start, end) === 'import.meta' &&
          source.slice(end, end + 5) === '.glob'
The advantage of source.includes('import.meta.glob') is that we skip es-module-lexer parsing.",5,11
2521,2021-03-15T17:45:32Z,2021-08-02T09:52:16Z,2021-08-02T09:52:16Z,2,11,2,"This PR implements a way to use your own logger.
You just need to make a class that implements the already exported class Logger and inject it in the config.
A really quick and ugly example:
import { defineConfig, Logger, LogOptions, LogType } from 'vite'
import vue from '@vitejs/plugin-vue'
import chalk from 'chalk';

// From Vite:
//
// export declare interface Logger {
//   info(msg: string, options?: LogOptions): void;
//   warn(msg: string, options?: LogOptions): void;
//   error(msg: string, options?: LogOptions): void;
//   clearScreen(type: LogType): void;
//   hasWarned: boolean;
// }

class MyLogger implements Logger {
  clearScreen(type: LogType): void {
    console.clear()
  }
  
  hasWarned: false;

  info(msg: string, options?: LogOptions): void {
    if (options?.timestamp) {
      console.log(`${chalk.red.bold('info')}: ${msg}`)
    } else {
      console.log(msg)
    }
  }
  error() { }
  warn() { }
}

export default defineConfig({
  plugins: [vue()],
  logger: new MyLogger()
})
will result in:",4,2
2532,2021-03-16T08:48:54Z,2021-03-16T14:36:25Z,2021-03-16T14:36:25Z,1,21,10,"Fix #2347
This issue was not fixed to full. The problem has remained but manifested elsewhere",3,1
2537,2021-03-16T12:49:20Z,2021-03-16T14:15:38Z,2021-03-16T14:15:38Z,31,459,1,"Adds svelte and svelte-ts templates.
Why Svelte?
I believe there is interest in having Svelte as a first-class create-app template, based from previously opened issues (#2209) and prior communication with Vite maintainers in the official Discord server.
Why not SvelteKit?

It's currently still pre-alpha.
It currently does not support the pure-SPA use case.
It brings its own routing solution which might not be preferable for some users.
It is first and foremost a framework that just happens to use Vite under the hood, not a Vite app.
vite dev and vite build wouldn't work in a SvelteKit environment, for example.

The templates in this PR contain as little as possible to get started with Vite + Svelte, while taking into account the developer experience with regards to HMR and intellisense. It demonstrates capabilities on par with the other create-app templates and is a good starting point for beginners dipping their toes into a Vite + Svelte project.
Should they later need the extended capabilities and extensibility provided by SvelteKit, the template has been structured similarly to SvelteKit so that it is easy to migrate.
Technical considerations
Why globals.d.ts instead of compilerOptions.types inside jsconfig.json or tsconfig.json?
Setting compilerOptions.types shuts out all other types not explicitly listed in the configuration. Using triple-slash references keeps the default TypeScript setting of accepting type information from the entire workspace, while also adding svelte and vite/client type information.
Why include .vscode/extensions.json?
Other templates indirectly recommend extensions via the README, but this file allows VS Code to prompt the user to install the recommended extension upon opening the project.
Why enable checkJs in the JS template?
I believe most cases of changing the types of variables in runtime are likely to be accidental, rather than deliberate. This provides advanced typechecking out of the box. Should the user like to take advantage of the dynamically-typed nature of JavaScript, it is trivial to change the configuration.
Why enable allowJs in the TS template?
While allowJs: false would indeed prevent the use of .js files in the project, it does not prevent the use of JavaScript syntax in .svelte files. In addition, it would force checkJs: false, bringing the user the worst of both worlds: not being able to guarantee their entire codebase is TypeScript, and also having worse typechecking for the existing JavaScript. In addition, I believe there are valid use cases in which a mixed codebase may be relevant.
Why include an HMR store, instead of just using local state?
This allows us to take full advantage of HMR. While vite-plugin-svelte does support an option to enable local state saving, it is not recommended, as it is an inherently difficult problem to solve without external stores. Changes to the local state definition can make it unclear what the intended HMR behavior is. Admittedly, the code is a bit more advanced and takes advantage of some frameworky features of Vite, but I believe this is a better out-of-the-box experience and does not add unnecessary complexity.",3,1
2540,2021-03-16T15:15:52Z,2021-03-17T01:36:37Z,2021-03-17T01:36:37Z,1,2,0,There are new presets for svelte and svelte-ts.,3,0
2541,2021-03-16T16:56:59Z,2021-04-04T05:33:48Z,2021-04-04T05:33:48Z,1,3,0,"In my special case, I have 1500 entry points which will result in every file being analyzed multiple times by the 'vite:import-analysis' plugin. I am still not 100% convinced, that there is no endless loop but I was not able to find it or reproduce it with a smaller example.
You might ask: Why do you have 1500 entry points? That is, because I need to be able to still reference the source files in run-time, as I work on a platform with multiple plugins, that are only present during run-time. Therefore, we do not know, which files might be used by other plugins and therefore we provide any file as an entry point.
You can find an excerpt of our config below:
export default defineConfig({
  root: './src',
  build: {
    minify: 'esbuild',
    target: 'esnext',
    outDir: '../dist',
    emptyOutDir: true,
    polyfillDynamicImport: false,
    rollupOptions: {
      external: [
        '../../../oxguard/auth'
      ],
      input: { ... all files under src/ },
      output: {
        entryFileNames: '[name].js'
      }
    }
  },
  ...
})

We collect all the entry points with our own plugin.
Some interesting side-notes: The problem is, that if (and only if) we set the minify option to either 'esbuild' or 'terser', it seems like the build process gets stuck after the ""generateChunks"" messages. We had it run for like 15 Minutes and then aborted it. I tried to debug, whether there is some kind of endless loop, but I was not able to find it. If we switch off minification, the build runs just fine. If we add this fix, minification works as well.
I am not sure, whether this fix is applicable, but I would appreciate any help, that points me in the right direction.",4,2
2548,2021-03-16T20:29:22Z,2021-03-24T06:04:15Z,2021-03-24T06:04:15Z,5,43,10,"To avoid returning an erroring file to import in the browser, I choose to wait 5 seconds before returning.
It gives the browser the time it needs to refresh, instead of responding so that request with an invalid empty MIME response.
If the page fails to reload, after 5s the empty invalid response is still sent.
closes #2525",6,1
2549,2021-03-16T21:10:39Z,2021-03-17T01:34:25Z,2021-03-17T01:34:25Z,1,2,2,"I believe this was a typo so I fixed it
Sever is actually server",2,0
2566,2021-03-17T17:05:33Z,2021-03-17T18:53:54Z,2021-03-17T18:53:54Z,3,9,7,"Fixes #2564, Fixes #2562, Fixes #2560
Related to changes in esbuild 0.9.3 evanw/esbuild@29b7c3f",6,3
2576,2021-03-18T07:36:38Z,,2021-03-23T09:49:36Z,1,6,2,,4,4
2578,2021-03-18T10:36:30Z,,2021-04-21T08:45:46Z,3,54,6,This PR offers a solution to #2550.,3,5
2603,2021-03-19T18:06:32Z,,2021-06-03T13:03:52Z,3,154,1,"I added eslint-plugin-spellcheck and configured it (a bit)
Then I fixed some typos f7d69f4
Also I renamed some wordings 1675b3c
If preferred I can revert the renames
It's also arguable if you want eslint-plugin-spellcheck in the project and have such a ""huge"" config of words
I may contact @aotaduy so they can adept some common words. That could also help other projects out there 🙂",4,6
2608,2021-03-20T10:57:07Z,2021-03-20T16:38:05Z,2021-03-20T16:38:05Z,1,26,0,"Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description

This PR template guides contributors while creating new PRs.
The contributor needs to tick some checkboxes and commits this way that they have read it.
Also they are introduced more to provide a more helpful description text that will help reviewers to understand the PR better and therefore stabilize the project.
In addition to that, core members can faster identify if the PR will introduce breaking changes or just add/improve e.g. some documentation
Addition Context
Reviewer focus:

Inclusive wording
Spell checking
Improvements for sentences",4,1
2611,2021-03-20T15:05:57Z,2021-03-24T05:36:25Z,2021-03-24T05:36:25Z,16,102,79,"Move from @svitejs/vite-plugin-svelte to @sveltejs/vite-plugin-svelte
Going forward, this will be the maintained version.
Adds technical considerations from #2537 to README files, slightly rewritten for the user.
Remove unnecessary complexity from store.
Move globals.d.ts to src/global.d.ts to match SvelteKit (and iirc global.d.ts is the more common name).
Get rid of the import.meta.hot usage, turns out normal external stores work fine across HMR updates.
Change the cursor when its over the button.",7,3
2613,2021-03-20T15:37:43Z,,2021-04-20T17:15:47Z,21,96,51,"Description

This PR enables recommended settings so the project gets stabilized over time and all the contributors working on vite are guided to a more common style and write better code
Additional context

I guided myself on https://github.com/mysticatea/eslint-plugin-node#readme and https://github.com/typescript-eslint/typescript-eslint/blob/master/docs/getting-started/linting/README.md to configure the recommended extensions

Tracking some related PRs

 #2715 - fix some typos
 #2730 - no-case-declarations
 #2731 - no-irregular-whitespace
 #2732 - no-extra-boolean-cast
 #2733 - prefer-const
 #2735 - @typescript-eslint/explicit-module-boundary-types
 #2768 - format with prettier


Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other",1,4
2614,2021-03-20T16:32:20Z,2021-03-25T05:50:51Z,2021-03-25T05:50:51Z,2,46,1,"Fixes regression introduced by #2435.
Details

Unlike the original code which uses url.parse, both new URL() and pathToFileURL will percent-encode path names.
new URL() will not percent-encode the % character, whereas pathToFileURL will percent-encode the % character.
In order to keep their behavior consistent, we manually replace % with %25 before passing it to new URL(), but we pass the raw path to pathToFileURL.
String.prototype.replaceAll is a relatively new API and only added to Node 15.0.0, so we're forced to use String.prototype.replace with a global regex modifier instead.
To prevent future regressions, tests were added for a number of edge cases, including part of the original issue solved by #2435.

I'm super unhappy about the manual replace but I can't think of a better way to keep the behavior between new URL() and pathToFileURL consistent.",4,0
2619,2021-03-20T22:48:46Z,2021-03-23T09:13:07Z,2021-03-23T09:13:07Z,1,9,1,"Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description
See #2616
Signal event handlers are not removed during server.close(), causing a memory leak
This happens because the server is restarted (closed and recreated) any time there is a change in the config file.
Additional context
This PR also removes the listener from process.stdin 'end', which could also cause a memory leak but was not reported in the original issue.",3,2
2620,2021-03-21T01:44:57Z,2021-04-04T08:15:47Z,2021-04-04T08:15:47Z,6,6,6,"What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description

Change index.html templates' favicon.svg href to absolute URL href=""/src/favicon.svg"".
When directly accessing the address of the non-root URL, the favicon cannot be found. (Microsoft Edge Version 89.0.774.57(Official build) (64-bit), but latest Chrome and Firefox are OK)",4,0
2621,2021-03-21T13:09:19Z,2021-04-04T18:27:15Z,2021-04-04T18:27:16Z,9,70,2,"fix #2575

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description

Additional context",5,1
2622,2021-03-21T14:30:48Z,2021-04-10T12:34:36Z,2021-04-10T12:34:36Z,1,71,0,"Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description
#2604
This adds a CI script to the repo so GitHub Actions are used
This will provide warnings from eslint inside reviews in the GUI of GitHub
Also it may replace CircleCI in the long run
Additional context
I have added also some outcommented steps that are arguable if we should use them
In my smaller repos these are quite okay, but for such a big sized repo as Vite it's really questionable",4,9
2626,2021-03-21T15:33:13Z,2021-03-23T14:14:39Z,2021-03-23T14:14:39Z,1,45,0,"Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description
As discussed with @yyx990803, this PR adds a Code of Conduct to the Vite monorepo following https://v3.vuejs.org/coc/
Additional context
I pointed people to report incidents by sending a DM to a team member in Vite Land, since we do not currently have an email address like community@vuejs.org. @yyx990803 if an email address is created for Vite, I can later modify the CoC to point there.",4,0
2627,2021-03-21T15:53:59Z,,2021-05-24T10:49:40Z,1,40,1,"fix #2476
Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description

Additional context",3,3
2631,2021-03-21T20:22:48Z,2021-03-29T20:20:21Z,2021-03-29T20:20:22Z,2,7,2,"Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description
Check #2625, looks like in windows the line end in foo.js was \r\n, and in the tests the line end was \n. This test then failed only in Windows.
I initially thought of removing the line ends since they are not needed to test the ?url feature, but the that is not possible because of prettier. This PR fixes the test in windows by matching with a startsWidth regex instead. I think it is enough for testing this feature.",3,5
2634,2021-03-22T02:32:05Z,,2023-08-24T11:04:21Z,2,18,0,"fix #2628 fix #2415
Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description

This issue is actually the same as bripkens/connect-history-api-fallback#25. connect-history-api-fallback is configured by disabledotrule to solve this problem.
I'm not sure if it is necessary to add an option to solve this problem, or it should be told not to use the request path with .(Dot) character
Additional context",11,13
2636,2021-03-22T04:49:33Z,2021-04-17T23:03:09Z,2021-04-17T23:03:09Z,1,24,10,"Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description
Fix #2635
Additional context",5,4
2641,2021-03-22T08:44:50Z,2021-05-21T13:13:05Z,2021-05-21T13:13:05Z,3,47,8,"fix #2356
Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description

Additional context",6,3
2643,2021-03-22T15:22:38Z,,2021-03-22T21:17:19Z,1,1,0,"Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description
This PR updates the cli options output to add the --no-open option that will prevent the browser from opening on startup.",3,3
2645,2021-03-22T17:55:24Z,2021-03-23T14:15:32Z,2021-03-23T14:15:32Z,3,75,46,"Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description

This improves the issue templates to improve readability while triaging issues as a reviewer
Also users get provided with a bit more better hints and boilerplate texts are hidden by default in comments so they are not visible when the contributor posts the issue.
Additional context
Reviewer focus:

Inclusive wording
Spell checking
Improvements for sentences

Reviewers can also have a look into the rendered markdown here:
https://github.com/Shinigami92/vite/blob/issue-templates/.github/ISSUE_TEMPLATE/bug_report.md
https://github.com/Shinigami92/vite/blob/issue-templates/.github/ISSUE_TEMPLATE/feature_request.md
https://discord.com/channels/804011606160703521/823110545266835456/823551400596209735",5,2
2651,2021-03-23T12:36:39Z,2021-03-24T05:35:21Z,2021-03-24T05:35:21Z,1,1,1,"Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other


Description
To match the CSP abbreviation and the accompanying .d.ts types.
cpsHashes => cspHashes
Additional context",4,0
2664,2021-03-24T05:01:39Z,,2021-03-28T17:24:04Z,1,2,1,"Description

I'm using vite as a development build tool for lib projects. In vite, you can use lib to develop the file entry and the variable name or build type,but there is no fileName specified.
I read the source code and found that the field is a direct way to get the name field of package.json.I think a new fileName field should be added to specify the name of the output file after packaging,and the default value can be the name of package.json
Additional context
Otherwise I would need to manually change the names of the different types of files after each build is completed. Because the nane of my package.json is not necessarily the name I need.I added a field for the lib configuration.


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

After improvement, it is configured like this
export default defineConfig({
  plugins: [reactRefresh()],
  build: {
    lib: {
      entry: path.resolve(__dirname, 'src/index.ts'),
      name: 'variablName,
      fileName:'MyFileName', // new add
      formats:['es','umd','cjs']
    }
  }
});",3,2
2666,2021-03-24T05:43:13Z,,2021-03-25T07:33:10Z,2,38,2,"Description
native ESM dynamic import support is required For development, but not For production. This feels weird, and it’s hard to debug on browsers that don’t support ESM dynamic import (such as Edge 18).So this PR provide a polyfill for browsers that don’t support ESM dynamic import.
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,4
2675,2021-03-24T12:44:17Z,2021-03-29T17:18:26Z,2021-03-29T17:18:26Z,1,3,2,"Description
Feature flags like __VUE_OPTIONS_API__ can't be overwritten, It seems to have been deleted in  this commit a93ab23#diff-2b066c2eb45a74f1191f8796c6c76a93a7bc81417b11b8852e965aec86be2cc4 , this PR adds it back.

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2686,2021-03-25T13:59:46Z,,2022-05-12T21:51:10Z,3,42,20,"Description

Env:
vite@v2.1.3
node@v12.18.3
macOS@10.15.7
Reproduce steps:


Use yarn create @vitejs/app to create two vanilla (no matter whatever this is) project and install it.


Set server.host in ONE of the project above.


import { defineConfig } from 'vite'

export default defineConfig({
  server: {
    host: 'localhost',
  },
})

Run yarn dev on both.

Expect: there should be two server be created: http://localhost:3000/ and http://localhost:3001/
Actual: both are http://localhost:3000/
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,9
2687,2021-03-25T15:40:36Z,2021-03-29T20:21:26Z,2021-03-29T20:21:26Z,6,12,6,"Description
According to the recommendations of the npm:

If the package.json for your package is not in the root directory (for example if it is part of a monorepo), you can specify the directory in which it lives:
{
  ""repository"": {
    ""type"": ""git"",
    ""url"": ""https://github.com/facebook/react.git"",
    ""directory"": ""packages/react-dom""
  }
}

This should help various tools like dependabot or renovate to get more information about the package: package url, changelog etc.
What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2688,2021-03-25T17:09:29Z,2021-03-31T21:20:10Z,2021-03-31T21:20:10Z,3,11,2,"Description
This provides type-safety, auto-suggestions, JSDoc support and potentially in the future deprecation warnings if e.g. a rule changed
Additional context
I'm the author of the package 🙂

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2689,2021-03-25T19:19:57Z,,2021-06-25T18:40:06Z,9,219,44,"Description
By default, Vite targets all browsers with ES module support. That criteria includes browsers that support modules but not module workers, notably Firefox & Safari.
This feature adds an alternate worker bundle output that can be used as a fallback if {type:'module'} workers aren't available. The bundle is equivalent to what would be outputted for inline scripts, but is a separate chunk so the data doesn't need to be loaded unless necessary. This double bundling is done only on build, not on serve.
Additional context
Feature detection for module workers is based on this WHATWG issue.
This is a bug described in #2029, which was closed as I didn't have a reproduction. The new test case shows an example where imports can end up in the final worker build.
Would love support on reducing code duplication. It would be nice to extract the feature detection. Some of the plugin code is copied from fileToBuiltUrl.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.


Fixes #2029, fixes #2504",6,19
2701,2021-03-26T07:28:18Z,2021-03-29T15:11:51Z,2021-03-29T15:11:51Z,8,53,7,"Description
Fixes #2598.
Browser filed spec is unmaintained, this issue of esbuild has made a detailed explaination. I think Vite can use the same strategy as esbuild to handle browser field. This PR also refers to test case of esbuild.

Additional context

Didn't mapping all test case from esbuild. I think its test case is a bit redundant.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",6,6
2702,2021-03-26T07:53:55Z,,2021-07-02T10:39:15Z,1,8,8,"Description
close  #2612

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,3
2703,2021-03-26T08:06:05Z,2021-03-29T14:43:46Z,2021-03-29T14:43:46Z,4,41,1,"Description
Make it not inject queries for data URLs.
Fixes #2658
Additional context
Appending queries to data URLs (those URLs that start with data: or blob:) will break the data because data is encoded as string. This PR adds a detection for data URLs, and it will return those URLs as-is.
Is this direction right?

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",5,7
2708,2021-03-26T10:34:05Z,2021-03-26T12:42:17Z,2021-03-26T12:42:18Z,1,2,2,"Description
I update vue-tsc dependency in vue-ts template.  Version below 0.0.13 does not work on Windows.
What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,4
2709,2021-03-26T10:34:05Z,,2023-03-20T14:55:49Z,1,6,2,"Description

The current behavior of prebundle (optimizer) will pack all deps in node_modules into chunks, whereas when it hit some js ending with assets ending, like abc.scss.js or xyz.svg.js, vite will treat the js file as external so it won't be correctly bundled.
For example, in office-ui-fabric-react:
// this is from node_modules/office-ui-fabric-react/lib/components/Dropdown/Dropdown.js

var stylesImport = require(""./Dropdown.scss"");
The stylesImport will be resolved to './Dropdown.scss.js' with external marked, so it's generated like
var stylesImport = require(/* a full path of Dropdown.scss.js */);
We expect that it should be something like
var stylesImport = require_Dropdown_scss(); // this require_Dropdown_scss is the bundled module from ./Dropdown.scss.js
This PR fix this issue.
A similar issue described in #2492
Additional context

I'm not familiar with the testing infra here, and I'm still working with the test.... hopefully I can add a test for this soon.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",5,3
2715,2021-03-26T16:57:01Z,2021-03-27T06:31:18Z,2021-03-27T06:31:18Z,18,66,64,"Description
This is like #2603 but without the eslint plugin
Additional context
This only includes typo fixes

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2717,2021-03-26T18:01:45Z,2021-05-04T06:30:00Z,2021-05-04T06:30:00Z,2,20,2,"fix #2716
The root cause of #2716 seems to be that resolveSSRExternal() assumes its argument knownImports to be npm package names while doBuild() sets knowImports to Object.keys(require('node_modules/.vite/_metadata.json').optimized) which contains vite-plugin-ssr/client/router.",4,0
2718,2021-03-26T20:18:57Z,2021-03-29T14:45:05Z,2021-03-29T14:45:05Z,7,31,2,"(fix #2695)

Description
Fixing resolver trying to postfix every file extension to path before trying to resolve to non-posfixed direct match.
Removed the ability to resolve to directory path while not in package.json and index resolution step.
Added 2 tests that previous implementation would fail.
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,1
2731,2021-03-27T09:25:30Z,2021-03-28T06:19:37Z,2021-03-28T06:19:37Z,1,1,1,"Description
This fixes an irregular whitespace in the cli help section
Additional context
https://eslint.org/docs/rules/no-irregular-whitespace

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",2,0
2732,2021-03-27T09:26:40Z,2021-03-28T06:21:01Z,2021-03-28T06:21:01Z,1,1,1,"Description
This is just a small improvement cause the string can directly be checked
Additional context
https://eslint.org/docs/rules/no-extra-boolean-cast

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",2,0
2733,2021-03-27T10:01:21Z,2021-03-31T19:45:32Z,2021-03-31T19:45:32Z,9,16,9,"Description
This turns the recommended prefer-const rule on but also set it to warning
Also we need to manipulate/configure it to our needs cause we have some usages of let destructuring calls
Example:

  
    
      vite/packages/vite/src/node/utils.ts
    
    
         Line 133
      in
      2358dfc
    
  
  
    

        
          
           let { protocol, pathname, search, hash } = resolvedUrl 
        
    
  


Additional context
https://eslint.org/docs/rules/prefer-const

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2735,2021-03-27T11:19:17Z,2021-04-14T18:49:26Z,2021-04-14T18:49:26Z,23,119,67,"Description
This fixes warnings of the @typescript-eslint/explicit-module-boundary-types rule that would be automatically enabled by using plugin:@typescript-eslint/recommended
Additional context
The first commit can easily be reviewed by someone from the team
It only explicitly set module boundary types for returning functions
The other three commits should get a look from @yyx990803! I explicitly split this PR into several commits, so a review can made a bit more easily
Maybe he has some ideas to improve these types
Why defining explicit-module-boundary-types and why it is recommended?

Explicit types for function return values and arguments makes it clear to any calling code what is the module boundary's input and output.

Or in my words: if there is e.g. an update in a typed dependency, you can easily find that there is a breaking change and fix it at compile time
Also for such a huge repo like vite, this is very recommended, cause contributors might change and e.g. return null somewhere in a function without checking upper functions that uses the function
https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/explicit-module-boundary-types.md

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,2
2740,2021-03-27T17:50:12Z,,2022-01-23T10:11:10Z,17,422,0,"Tests #2390 #1875 amongst others.
The plan here is to have a test suite that stabilizes the foundation on which Vite SSR frameworks are build on.
One possible downside of this PR is that it can be seen as redundant to playgroud/ssr-vue / playground-ssr-react. But, IMO, the many subtle differences between directly using the Vite API and using a SSR framework which uses the Vite API justifies this PR.
Letting know folks who build Vite SSR frameworks @egoist @frandiox @galvez @dominikg @GrygrFlzr @Rich-Harris
The tests fail because #2390 is not merged yet. They will go green once 2390 is merged.",3,7
2742,2021-03-28T02:03:26Z,2021-03-29T20:24:14Z,2021-03-29T20:24:14Z,2,16,1,"Description
Fixes the undesired behavior detailed in this comment on #2376 by reverting to the original approach of using an option instead of forcing keepNames to true.
Additional Context
This PR is practically identical to #2376 except that I added a default value to the docs as suggested by @patak-js here.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2743,2021-03-28T10:45:27Z,2021-03-30T21:38:57Z,2021-03-30T21:38:58Z,5,137,7,"Description
After the Features guide, this PR adds a Using Plugins guide from the user POV
Right now we have:
a Plugins section on the top where official plugins and links to community plugins in awesome-vite are listed
a Plugin API guide that is intended for plugin authors: conventions, hooks, links to rollup docs, etc
This Guide complements those two pages including only the information needed as a user, and links to them from the main Vite docs guides.
There are also small modifications to the other two plugin pages.
Rendered output

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,2
2750,2021-03-28T16:15:33Z,2021-04-10T02:05:39Z,2021-04-10T02:05:39Z,2,4,3,"This pr is a summary of #2664 and #2745, thank you",5,0
2758,2021-03-29T08:48:13Z,2021-03-31T19:39:25Z,2021-03-31T19:39:25Z,2,18,4,"Description

feat: add async support for vite config file
for example:
If the config needs to call async function, it can export a async function instead:
export default async ({ command, mode }) => {
  const data = await asyncFunction();
  return {
    // build specific config
  } 
}
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,12
2761,2021-03-29T12:44:19Z,2021-03-29T17:13:31Z,2021-03-29T17:13:31Z,1,1,1,"Description
Remove assumptions made about the future of WMR. Feels a bit odd to add assumptions about other projects future in the docs here.

Additional context

WMR is meant as a generic bundler and there are no mentions of it being Preact specific anywhere. It's used at Google for non-Preact projects.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",6,1
2764,2021-03-29T14:23:23Z,2021-03-31T21:21:30Z,2021-03-31T21:21:30Z,1,1,1,"fix #2759
Description

Ensure that the two code behaves the same

  
    
      vite/packages/vite/src/node/config.ts
    
    
         Line 281
      in
      352cd39
    
  
  
    

        
          
           const isProduction = (process.env.VITE_USER_NODE_ENV || mode) === 'production' 
        
    
  



  
    
      vite/packages/vite/src/node/plugins/define.ts
    
    
         Line 34
      in
      352cd39
    
  
  
    

        
          
           'process.env.NODE_ENV': JSON.stringify(config.mode), 
        
    
  


Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",5,4
2765,2021-03-29T14:45:37Z,2021-03-29T17:12:12Z,2021-03-29T17:12:12Z,1,1,1,"Description
Just fixes a minor typo esbuid -> esbuild

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,0
2766,2021-03-29T14:48:50Z,2021-03-31T00:49:43Z,2021-03-31T00:49:43Z,3,7,0,"fix #2722

Description

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",8,2
2768,2021-03-29T17:59:43Z,2021-03-31T20:06:16Z,2021-03-31T20:06:16Z,66,229,211,"Description
Format the whole repo with yarn prettier --write .
Additional context

.github/commit-convention.md want's to have a leading semicolon in line 11
I just ignored this one
In docs/guide/static-deploy.md I fixed/improved some indentations that will inline content into bullet-points
Most files just got an eol, if this is not wanted, we should configure it properly
Some files are ignored via .prettierignore


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,3
2769,2021-03-29T21:12:28Z,2021-03-31T19:17:13Z,2021-03-31T19:17:13Z,1,16,2,"This fixes #2642. (Well, I believe it fixes it)
Thanks a lot to @lukeed, maintainer of Sirv, for the suggestion!
lukeed/sirv#103 (comment)
To be honest, I had a hard time finding a good way to test this fix - npm link didn't work for me, and I couldn't find any integration tests or documentation on how to develop locally using a forked version of Vite. Could somebody please point me in the right direction?",4,2
2772,2021-03-30T01:12:41Z,2021-03-30T20:37:29Z,2021-03-30T20:37:29Z,1,33,12,"Description
This PR fixes some cases where current validation of package name in package.json introduced in 1dbf246 fails. Examples: names containing & , $ and @ not as part of scoped package name.
Silent package name substitution replaced with additional prompt that only appears if project name is cannot be used as legal package name. As such in most cases users won't be bothered with additional prompt but in edge cases they will be made immediately aware of possible issues with their choice of project name and given control over substitution, while maintaining the ease of using automated character substitution.

Additional context
Currently implied validation creates possibility of creating malformed package.json that would fail to initialize with yarn command with
error package.json: Name contains illegal characters


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,5
2773,2021-03-30T02:42:15Z,2021-03-30T07:17:04Z,2021-03-30T07:17:04Z,1,13,0,"Description
Added a note about better TypeScript IntelliSense for import.meta.env.
Additional context
Nothing.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2780,2021-03-30T10:06:36Z,2021-03-30T21:00:22Z,2021-03-30T21:00:22Z,1,10,4,"Description

Fix #2728
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2797,2021-03-31T06:28:18Z,2021-03-31T11:53:13Z,2021-03-31T11:53:14Z,2,12,2,"Description
Fixes #2790
Additional context
N/A

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2800,2021-03-31T07:37:11Z,2021-04-09T20:15:14Z,2021-04-09T20:15:14Z,2,7,4,"Description
resolve #2798

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,2
2801,2021-03-31T08:08:00Z,2021-03-31T19:57:48Z,2021-03-31T19:57:48Z,1,2,0,"Description
This is an additional PR for #2766
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,3
2803,2021-03-31T09:52:30Z,2021-03-31T13:24:34Z,2021-03-31T13:24:34Z,1,13,0,"Description
See vitejs/docs-cn#54

Additional context
We are going to need better support from VitePress in the future, but I think we should merge this first step so people can already discover the Chinese translation of the docs.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,4
2810,2021-03-31T19:26:25Z,2021-04-09T20:35:49Z,2021-04-09T20:35:49Z,7,24,1,"Description
When I import something like import type { Config } from 'windicss/types/interfaces' I will got this error:
node_modules/.pnpm/vite@2.1.5/node_modules/vite/dist/node/chunks/dep-66eb515d.js:31609:7: error: [vite:dep-scan] Missing ""./types/interfaces"" export in ""windicss"" package
in vite build.
Then I found out in this line it generated a code to avoid unused import dropped in the esbuild build output, which will result to import 'windicss/types/interfaces',  it's a type definition file, so I think we should simply ignore any type only import.
Additional context
https://github.com/windicss/docs/actions/runs/705958534


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",5,5
2814,2021-04-01T07:11:18Z,,2021-04-04T08:19:54Z,6,59,0,"Description
It is the TS version of template-vanilla.

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,1
2837,2021-04-03T11:23:26Z,2021-04-03T15:38:45Z,2021-04-03T15:38:45Z,1,5,1,"Description
Avoid issues like #2700
Additional context

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,2
2843,2021-04-03T14:15:05Z,2021-04-04T06:58:54Z,2021-04-04T06:58:54Z,3,8,5,"Description
Current build doesn't have any souremaps, add sourcemaps for better debug experience.
What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other",3,0
2847,2021-04-03T20:31:35Z,2021-04-14T19:30:32Z,2021-04-14T19:30:33Z,2,114,8,"Description
👋 small bug fix - there's some logic in mergeConfig to handle merging particular field types:

  
    
      vite/packages/vite/src/node/config.ts
    
    
        Lines 520 to 539
      in
      fa85749
    
  
  
    

        
          
           const existing = merged[key] 
        

        
          
           if (Array.isArray(existing) && Array.isArray(value)) { 
        

        
          
             merged[key] = [...existing, ...value] 
        

        
          
             continue 
        

        
          
           } 
        

        
          
           if (isObject(existing) && isObject(value)) { 
        

        
          
             merged[key] = mergeConfig(existing, value, false) 
        

        
          
             continue 
        

        
          
           } 
        

        
          
            
        

        
          
           // root fields that require special handling 
        

        
          
           if (existing != null && isRoot) { 
        

        
          
             if (key === 'alias') { 
        

        
          
               merged[key] = mergeAlias(existing, value) 
        

        
          
               continue 
        

        
          
             } else if (key === 'assetsInclude') { 
        

        
          
               merged[key] = [].concat(existing, value) 
        

        
          
               continue 
        

        
          
             } 
        

        
          
           } 
        
    
  


Note the custom handling of alias at the bottom. In some cases this isn't necessary (i.e. if existing and value are both objects / arrays) though it is if the configs use different alias schemas.
It looks like mergeAlias is never being run since alias is (afaik) never a root key. I tweaked the logic to only perform this check when checking a non-root key.
I added a failing test for this case as well as an additional test for the assetsInclude (already passes on main).

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,1
2848,2021-04-03T21:10:46Z,2021-05-04T10:26:00Z,2021-05-04T10:26:01Z,1,20,0,"…

Description
Fix for #2503, the issue is explained in detail there.
Direct link to the reproduction https://github.com/meteorlxy/repro-vite-2503
Additional context
It is not that easy to add this to the tests. I think it would be great if something similar is added later to the repro (maybe also using cpx2)
@meteorlxy suggested that a possible solution is to inject version hash according to the node_modules path prefix, instead of only injecting for bare imports.
Given the current structure of the Resolve plugin, and that hashes are not the only special logic (we also have dedupe, we need to deal with pre-bundled deps). This PR normalizes direct node_modules imports to bare imports, so the same logic is applied in both cases. There may be a better way to do this, but I think it would involve a big refactoring. This PR not only fixes #2503, but probably other issues with direct node_modules import, for example its interaction with dedupe

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,0
2849,2021-04-03T23:06:59Z,,2021-04-04T08:22:39Z,10,80,0,"Description
Adds a 'vanilla-ts' template to @vitejs/create-app.
Additional context
After experimenting with this template locally, I discovered a duplicate PR, #2814. I began reviewing it (and subsequently finished reviewing it), but decided it would be slightly more straightforward to open this PR.
I copied main.js from the vanilla template and renamed it main.ts. I had to make a small change to satisfy Typescript, as the original version:
document.querySelector('#app').innerHTML = `
... Throws an Object is possibly 'null' error.
I looked at all of the existing packages/create-app/template-*/tsconfig.json files, and came up with a tsconfig.json for this template which (hopefully) represents a reasonable starting point. I opted to not specify lib, and instead allow it to be set by target (which is also the case in the template-svelte-ts tsconfig.json).

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate. (See note above)
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,3
2850,2021-04-04T06:14:22Z,2021-05-07T10:36:03Z,2021-05-07T10:36:03Z,12,168,3,"Description

fix #2820

 new options serve.fsServeRoot to prevent serving entire fs
 auto detect workspace root as fsServeRoot
 add tests
 test on Windows
 update docs

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",7,8
2853,2021-04-04T12:22:49Z,2021-04-10T02:48:23Z,2021-04-10T02:48:23Z,1,4,4,"Description

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,2
2860,2021-04-04T16:46:40Z,2021-04-14T12:50:27Z,2021-04-14T12:50:27Z,12,169,12,"Description
Fixes #2857
What is the purpose of this pull request?

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,18
2865,2021-04-05T22:28:47Z,,2021-04-13T21:36:49Z,5,51,10,"See also #2820 which makes this problem critically worse.
Up until now, Vite has been listening on all public IP addresses
by default, which could be a potential security vulnerability.
This fixes the default behavior, so Vite only listens on 127.0.0.1.
You can get the old behavior back (listen to all IPs) by running
with the --listen-public CLI flag, or setting
export default defineConfig({
  server: {
    listenPublic: true
  }
  // ... more config here
})

in the Vite config file.
This is how the two alternatives look like in the terminal: You can see that it writes ""(disabled)"" next to the public IP.",7,12
2869,2021-04-06T03:47:21Z,,2021-04-17T23:00:34Z,1,2,1,"Description
css.preprocessorOptions.stylus doesn't support additionalData, which is different form less and sass.
Additional context
It took me a long time to read vite and stylus source code. And then I found the following solution, which is unfriendly. The additionalData should support all preprocessor. Excuse me for any omission or negligence if there is. I'll correct timely.
export default {
    css: {
        preprocessorOptions: {
            stylus: {
                use: [ 
                   style => {
                        style.import(path.join(__dirname, ""src/css/var.styl""))
                    },
                ],
            },
        },
    },
}

What is the purpose of this pull request?

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,2
2871,2021-04-06T07:01:49Z,2021-05-23T17:05:40Z,2021-05-23T17:05:40Z,5,50,8,"Description
I want to integrate vite (as a koa middleware) to my koa app for just development.
When middlewareMode enabled, vite will not handle the html request. I should serve them like this: Setting Up the Dev Server
I am not working on SSR, and I do not like to serve the html content by myself. Instead, the internal html middleware is enough for me.
It should be able to use indexHtmlMiddleware and spa fallback even when middlewareMode enabled.
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,1
2885,2021-04-06T14:15:14Z,2021-04-10T02:49:38Z,2021-04-10T02:49:38Z,1,8,8,"Description

Additional context


format api-javascript.md
What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2888,2021-04-06T17:40:34Z,2021-04-16T15:32:42Z,2021-04-16T15:32:42Z,2,11,8,"Fixes #2863.
Description

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,5
2897,2021-04-07T06:38:20Z,2021-04-22T16:43:32Z,2021-04-22T16:43:33Z,1,2,2,"Description
Fixes #2640
The plugin-vue added a line:
import { useSSRContext } from 'vue'
which may duplicate with user's code
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2899,2021-04-07T12:18:17Z,2021-04-17T22:57:31Z,2021-04-17T22:57:31Z,9,63,21,"Description
close #2927

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,8
2901,2021-04-07T19:17:11Z,2021-04-08T17:29:20Z,2021-04-08T17:29:20Z,2,3,2,"Description
Exports manifest types for people using the manifest file.
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).",3,0
2903,2021-04-07T22:11:39Z,2021-04-17T12:12:05Z,2021-04-17T12:12:05Z,1,20,9,"Description
The problem:
export const MyComponent = () => {...}

// This should prevent this module from being a Refresh boundary, but it doesn't.
export function useThing() {...}

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2904,2021-04-07T23:21:25Z,2021-07-21T06:03:10Z,2021-07-21T06:03:11Z,2,48,14,"Description
This is important for virtual modules and malformed source maps, both of which can throw ENOENT errors when injecting sourcesContent into source maps.
Solution
Expect sourcemaps for virtual modules to either contain a pre-populated sourcesContent array or have a sources array of absolute paths only. Otherwise, a warning will be printed (at most one time).
Expect sourcemaps for normal modules to either contain a pre-populated sourcesContent array or have a sources array that never points to non-existent files. Relative source paths are allowed, and they're resolved with sourceRoot (if defined) or the parent directory of the module. When a non-existent source is found, a warning will printed (at most once per sourcemap for the lifetime of the Vite server).

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",7,12
2909,2021-04-08T06:19:14Z,,2023-10-19T07:36:31Z,6,54,8,"This is an updated version of #1716 by @aleclarson with the inclusion of SVG URL-escaping. Below is the original PR description:
Base64 is unnecessary for SVG files:
#1197 (comment)
Also using Buffer.byteLength instead of character length when comparing with the assetsInlineLimit option.
Closes #1204",14,27
2921,2021-04-09T08:44:37Z,,2021-05-28T14:15:10Z,2,6,1,"refer: #1926
close #1925, close #3093",4,3
2929,2021-04-10T06:30:08Z,2021-04-17T23:04:41Z,2021-04-17T23:04:41Z,1,2,1,"fix #2893

Description

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
[] Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2933,2021-04-10T08:36:36Z,2021-04-10T11:43:31Z,2021-04-10T11:43:31Z,1,1,1,"Description
fix #2787
This issue is caused by 2900a9a.
var str =  `import { Vue, Options } from ""vue-class-component"";

export default class ClassComponent extends Vue {
  counter = 0
}`;
After replace, it will become：
import { Vue, Options } from ""vue-class-component""class ClassComponent extends Vue {
  counter = 0
}
At first I plan to optimize  exportDefaultClassRE  expression:
-const exportDefaultClassRE = /(?:(?:^|\n|;)\s*)export\s+default\s+class\s+([\w$]+)/
+const exportDefaultClassRE = /(^|\n|;)\s*export\s+default\s+class\s+([\w$]+)/ 

-script.content.replace(exportDefaultClassRE, `class $1`)
+script.content.replace(exportDefaultClassRE, `$1 class $2`)
the above solution could solve both #2787 and #2277, but I am worried that there are other cases that have not been considered, so I think it is better to add \n before class:
scriptCode = script.content.replace(exportDefaultClassRE, `\nclass $1`)
What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2934,2021-04-10T12:19:15Z,2021-04-25T11:17:25Z,2021-04-25T11:17:25Z,1,13,7,"…2672)

Description
Fixes #2672.
Vite put module which is in node_modules and not imported by any dynamic import recursively to the vendor chunk. But in #2672, node_modules/prismjs/components/prism-json.js is used in the initial chunk and also imported by dynamic import. So a runtime error threw when it used in the initial chunk.

Maybe we should put modules which in node_modules and statically imported by any entry module recursively to the vendor chunk.
The diff of modules moved to chunk vendor (✅ - moved, ❌ - not moved)
before:
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/index.html
❌ vite/dynamic-import-polyfill
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/main.ts
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/prismjs/prism.js
✅ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/prismjs/components/prism-json.js
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/prismjs/themes/prism.css
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vue/dist/vue.runtime.esm.js
✅ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vue-router/dist/vue-router.esm.js
✅ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vuetify/dist/vuetify.js
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vuetify/dist/vuetify.min.css
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/App.vue
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/MyView.vue
❌ vite/preload-helper
❌ commonjsHelpers.js
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/MyView.vue?vue&type=script&lang.ts
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/MyView.vue?vue&type=template&lang.js
❌ /vite/vueComponentNormalizer
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/App.vue?vue&type=script&lang.ts
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/App.vue?vue&type=template&lang.js
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/App.vue?vue&type=style&index=0&lang.css
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vue-prism-component/dist/vue-prism-component.common.js
✅ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vue/dist/vue.runtime.esm.js?commonjs-proxy
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/prismjs/prism.js?commonjs-proxy
after:
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/index.html
❌ vite/dynamic-import-polyfill
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/main.ts
✅ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/prismjs/prism.js
✅ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/prismjs/components/prism-json.js
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/prismjs/themes/prism.css
✅ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vue/dist/vue.runtime.esm.js
✅ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vue-router/dist/vue-router.esm.js
✅ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vuetify/dist/vuetify.js
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vuetify/dist/vuetify.min.css
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/App.vue
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/MyView.vue
❌ vite/preload-helper
❌ commonjsHelpers.js
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/App.vue?vue&type=script&lang.ts
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/App.vue?vue&type=template&lang.js
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/App.vue?vue&type=style&index=0&lang.css
❌ /vite/vueComponentNormalizer
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/MyView.vue?vue&type=script&lang.ts
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/src/MyView.vue?vue&type=template&lang.js
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vue-prism-component/dist/vue-prism-component.common.js
❌ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/prismjs/prism.js?commonjs-proxy
✅ /Users/fi3ework/Downloads/vite-repro-prism-is-not-defined-master/node_modules/vue/dist/vue.runtime.esm.js?commonjs-proxy
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,4
2935,2021-04-10T12:39:33Z,2021-04-13T19:53:28Z,2021-04-13T19:53:28Z,7,65,3,"Description
If you have one static import of a module (e.g. import foo from './foo') and another dynamic import of the same module (e.g. const v = 'foo; import('./${v}.js')), the first import is used as is, but the second will have a ?import appended. Therefore, the browser interprets them as two different modules.
This PR introduces a fix where the dynamic import is analyzed and only appends the ""import"" suffix if necessary.
Additional context
This only affected the vite-dev-server, production build worked fine.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2936,2021-04-10T14:02:17Z,2021-04-10T18:50:37Z,2021-04-10T18:50:37Z,1,22,0,"Description

Additional context

Add a caching step in GitHub Actions using actions/cache@v2 as per official docs
Cache keys are taken from circleci config with OS names
Follow up of #2622


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,0
2939,2021-04-10T15:06:44Z,2021-04-11T09:11:22Z,2021-04-11T09:11:22Z,1,2,0,"Description
Documentation change in the 'Building For Production' page, 'Multi-Page App' section:
When using the root option, it may not be clear to beginners that the root directory needs to be included within the resolve() function. Otherwise, running the build process will error out due to the HTML files not being found.
What is the purpose of this pull request?

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,1
2940,2021-04-10T16:01:23Z,2021-04-14T12:47:53Z,2021-04-14T12:47:54Z,1,12,7,"Description
Fix #2906 Maximum call stack size exceeded because import duplicate chunks.

Additional context
I have build vite in my local npm through verdaccio,
and install it to in Reproduction repo https://github.com/g4rcez/vite-testing;
I run yarn build successfully.


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,7
2941,2021-04-10T22:02:39Z,2021-04-14T19:28:01Z,2021-04-14T19:28:01Z,1,146,24,"Description

As we are growing rapidly, we are now having 12 templates for users to choose from. As half of them are TypeScript variants and we might have more in the future. This PR introduces two-level prompts to make it simpler and future-proofing - one for frameworks, and one for variants.
From

To:


Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,3
2946,2021-04-11T12:44:44Z,2021-04-14T17:40:20Z,2021-04-14T17:40:20Z,1,33,1,"Description
Adds an example of a test in a new Extending the Test Suite in contributing.md

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2947,2021-04-11T13:57:48Z,2021-04-12T11:21:18Z,2021-04-12T11:21:18Z,2,2,2,"Description

In the svelte template, it seems to need to be mounted on the app id node element. instead of the body node element.
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,0
2951,2021-04-11T15:53:06Z,2021-04-13T22:42:54Z,2021-04-13T22:42:54Z,3,4,8,"Description
see #2949
Additional context
Should docs contain an example?
What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,0
2954,2021-04-11T18:46:22Z,2021-04-12T17:19:23Z,2021-04-12T17:19:23Z,5,20,53,"Description
Additional waits and watcher config for ssr tests so they fail less often
Additional context
removed autoRetry helper as it duplicated functionality from untilUpdated
cc @brillout

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,3
2957,2021-04-12T04:34:55Z,,2021-09-22T12:47:58Z,1,22,1,"fixes #2944
Description

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,2
2960,2021-04-12T07:55:40Z,2021-04-12T10:17:37Z,2021-04-12T10:17:37Z,1,1,1,"Description
#2932

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
[X ] Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,1
2961,2021-04-12T09:07:06Z,2021-04-27T10:10:40Z,2021-04-27T10:10:41Z,2,79,4,"fixes #2942
Description

Will match to the <script-xxx/>  component or comment in 
e.g
<template>
    <script-develop-pane/>
</template>

  
    
      vite/packages/vite/src/node/optimizer/scan.ts
    
    
         Line 137
      in
      44bfb96
    
  
  
    

        
          
           const scriptRE = /(<script\b[^>]*>)(.*?)<\/script>/gims 
        
    
  


Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,4
2966,2021-04-13T03:27:50Z,2021-04-13T10:13:15Z,2021-04-13T10:13:16Z,2,18,2,"Description
#2667
vite ssrtransform can't work good with error catch
import {error} from ''./actionTypes.js''

try {
// something
} cache(error) {
}
after transform
const __vite_ssr_import_6__ = __vite_ssr_import__(""/node_modules/xstate/es/actions.js"")
try {
// something
} cache(__vite_ssr_import_6__.error) { //  SyntaxError: Unexpected token '.'

}
imp

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,2
2971,2021-04-13T13:28:07Z,2021-04-13T21:14:11Z,2021-04-13T21:14:11Z,1,1,1,"See https://github.com/jakubpawlowicz/clean-css/blob/f813323d32e51087adda564a6745276269fc347c/docs/index.html#L106-L109 and https://github.com/jakubpawlowicz/clean-css/blob/22b2b2e59045a1072dc3e1be53ca0b55a7330875/test/integration-test.js#L512-L537 for the available values

Description

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
2972,2021-04-13T13:44:04Z,,2021-06-13T10:46:39Z,1,1,1,"Description
template literals in our legacy chunks got randomly overwritten (gql mixed with emotion) in legacy build
the problem was that at the top of the file there were var lit1, lit2, lit3 declarations and those were evaluated in global scope. this resolves the issue
Additional context
I was surprised that systemjs does not wrap files in IIFE itself

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,3
2976,2021-04-13T21:01:48Z,2021-05-05T14:05:51Z,2021-05-05T14:05:51Z,15,50,217,"Description

Upgrade esbuild to the latest version, so vite stays in sync with the experience users get when they install esbuild standalone (e.g. npm install esbuild).
Additional context

There are some interesting bug fixes for JavaScript transpilation (for example evanw/esbuild#1131, evanw/esbuild#977, evanw/esbuild#959, evanw/esbuild#1066), but the upgrade should be relatively safe as most esbuild changes only affect chunking and code splitting (while vite uses rollup for that).

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",7,27
2977,2021-04-13T21:36:10Z,2021-05-05T03:30:44Z,2021-05-05T03:30:44Z,5,80,44,"This pull request supersedes #2865, after discussion that one should rely on the --host parameter to determine public/private network interface setup.",7,26
2988,2021-04-14T11:10:37Z,2021-05-05T03:34:14Z,2021-05-05T03:34:14Z,5,8,5,"Description
fixes #2986
Additional context
The CI runs build-vite and this triggers the prebuild of the vite package
This is currently done because it safes one script step for the release process
Todos:

 Lint CI run lint step and report errors
 release script perform linting
 pre-commit-hocks perform linting


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,9
2991,2021-04-14T13:29:41Z,2021-05-03T16:51:44Z,2021-05-03T16:51:45Z,11,167,14,"Description
This adds the ability to customise the esbuild options during the optimiser phase, including plugins.
There are some libraries that esbuild throws an error on, and I'd really like to have this functionality – we're stuck on a Vite conversion because of one or two packages – with plain esbuild, we're able to use plugins to work around small errors.

Additional context
See #3124
This is inspired by the conversation here: #2886 (comment)
The discussion is about where the build options should live. I feel like since optimizeDeps is an entirely different build phase than the esbuild transform options, the settings should go into config.optimizeDeps.
Questions

Other than define and entryPoints, should any other options be disallowed? For example, perhaps overriding bundle, format, or outdir shouldn't be allowed.
Should the old fields be deprecated, or just left as additional options?



What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.


Closes #2886",5,6
2996,2021-04-15T03:35:55Z,2021-04-15T07:09:12Z,2021-04-15T07:09:13Z,1,4,1,"Description
The browser field should not be resolved for SSR
Additional context
Closes #2995
What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,3
2997,2021-04-15T04:03:51Z,2021-04-25T09:02:16Z,2021-04-25T09:02:16Z,1,1,1,"Description

bundle.close() is return Promise so we need to make sure it will be execute in the right timing.
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,2
3003,2021-04-15T11:15:00Z,2021-04-17T23:18:35Z,2021-04-17T23:18:35Z,1,7,5,"Description
for the issue
when the same module for example path-to-regexp has different version in repo, prebundle will be error.
$ npm ls path-to-regexp
vite-react-tailwind-starter@0.0.0 /Users/zhangyuang/Desktop/vite-react-tailwind-starter
├── path-to-regexp@6.2.0
└─┬ react-router@5.2.0
  └── path-to-regexp@1.8.0
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other",4,3
3005,2021-04-15T14:19:16Z,2021-05-23T17:07:12Z,2021-05-23T17:07:12Z,1,2,0,"Description
in #2734 , while source file(app.js) use import.glob.meta to scan /src/data/*.json，while we add a json file such as x.json，the module will hit cache in urlToModuleMap because the source file(app.js) did not change.
fix #2734
Additional context",7,6
3014,2021-04-16T12:09:18Z,2021-04-16T13:55:19Z,2021-04-16T13:55:19Z,1,1,0,"Description
At least for Windows 10, a 404 was generated in the assets test because of the default request for favicon.ico. This PR adds a dummy inline favicon so no request is generated. This was the only test where we are explicitly checking for no 404 in the browser logs. We could choose to add the dummy icon to other tests in a subsequent PR.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",2,0
3015,2021-04-16T12:22:19Z,2021-04-16T14:44:15Z,2021-04-16T14:44:15Z,4,0,25,"Description
@ElMassimo This reverts commit ee7eb82. At least in my machine this test is failing probably because of timing issues related to when the css folder is copied to temp, so the outer asset is not there when it is trying to import it. It would also fail if the assets test is run in isolation.
Let's create a new PR later with a different strategy for testing this. I also think that this test may end up interfering with security PRs that may remove the ability to get a file out of root (except for monorepos, so that has to be taken into account).

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,3
3019,2021-04-16T15:42:37Z,2021-04-28T08:32:18Z,2021-04-28T08:32:18Z,1,1,0,"Description
This just adds a build script that performs both build scrips for vite and plugin-vue
the same as the test script
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
3020,2021-04-16T15:52:18Z,2021-04-16T19:52:50Z,2021-04-16T19:52:50Z,2,42,42,"Description
Just update all lint related dependencies
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",2,0
3023,2021-04-16T19:22:23Z,2021-05-10T05:33:04Z,2021-05-10T05:33:04Z,1,6,10,"Makes sure all polyfill ES imports are trimmed from legacy bundle by moving recording and removal from Program:exit to post in plugin. This seems to ensure that @babel/preset-env has found and added all polyfills from all nodes in chunk before recordAndRemovePolyfillBabelPlugin processes.
Fixes #2786 and #2781.
Additional context
I have not been able to create a test case for this. It's probably an api triggering usage polyfill import in a certain AST structure that causes the bug, but figuring out which seems hard. Instead the solution is tested by users experiencing the bug.
What is the purpose of this pull request?

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",7,14
3030,2021-04-17T15:18:47Z,,2021-04-18T14:54:12Z,1,1,0,"Description
Some time we need get bundle asset name when create a plugin, this PR set asset name, to fix  (#3028)
What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",2,1
3031,2021-04-17T15:56:35Z,2021-04-17T22:55:44Z,2021-04-17T22:55:44Z,2,29,10,"Description

Previously imported files in config file are not watched, cause the config file is bundled, this PR gets a list of imported files from esbuild metadata and restart the dev server when they're changed.
Fixed #2832
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,0
3034,2021-04-18T01:33:24Z,,2022-05-13T16:16:37Z,1,19,0,"Description
Optimized deps that contain ?raw imports will have those imports properly stringified.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,2
3039,2021-04-18T15:23:45Z,2021-04-21T05:03:25Z,2021-04-21T05:03:25Z,2,77,27,"fix: #3036

Description

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",7,10
3043,2021-04-19T00:55:37Z,2021-04-26T20:07:56Z,2021-04-26T20:07:56Z,2,38,32,"Description
If .git exists in the root of outDir, assume the user doesn't want it removed. The rationale is that Vite never generates .git for the user, so it should leave it alone.
This PR also contains a fix related to emptyOutDir when the --watch flag is used in build mode. Previously, the outDir would not be emptied before Rollup rebuilds if emptyOutDir was null. Now it is emptied.


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",2,1
3044,2021-04-19T01:03:39Z,2021-05-31T23:49:51Z,2021-05-31T23:49:51Z,3,112,121,"Description
This pull request fixes the duplicate selection issue, and replaces enquirer with prompts as CLI tool.
Additional context
The first thing I tried was to fix the selection issue:

But after a long look in the code of the create-app without being capable to fix the bug, I decided to refactor with a (in my opinion) better CLI tool which is prompts.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",6,27
3047,2021-04-19T08:28:29Z,2021-06-29T01:25:05Z,2021-06-29T01:25:05Z,4,35,4,"Description
With this PR, you can now pass options (especially exclude options in my case) to the @rollup/plugin-dynamic-import-vars.

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,0
3050,2021-04-19T13:28:13Z,2021-08-09T07:26:59Z,2021-08-09T07:27:00Z,1,3,0,"Description
Add name property for asset type bundle. The PR can solve the problem for  #3028.

Additional context
It can solve the #3026 and other similar problem too. With the asset name, everyone can generate custom manifest format for need. eg the old manifest format
export default {
  root: './src',
  build: {
    manifest: false,
    rollupOptions: {
      input: './src/entry/main.js'
    }
  },
  plugins: [
    {
      async generateBundle(options, bundle) {
        let manifest = {}
        for (const file in bundle) {
          const chunk = bundle[file]
          if (chunk.type === 'chunk') {
            if (chunk.isEntry) {
              manifest[chunk.name + '.js'] = {
                file: chunk.fileName,
                imports: chunk.imports
              }
            }
          } else if (chunk.name) {
            manifest[chunk.name] = { file: chunk.fileName }
          }
        }
        this.emitFile({
          fileName: 'manifest.json',
          type: 'asset',
          source: JSON.stringify(manifest, null, 2)
        })
      }
    }
  ]
}
The manifest.json should looks like
{
  ""images/favicon.svg"": {
    ""file"": ""assets/favicon.17e50649.svg""
  },
  ""images/demo.png"": {
    ""file"": ""assets/demo.098465ec.png""
  },
  ""font/font.ttf"": {
    ""file"": ""assets/font.a0d06a46.ttf""
  },
  ""main.js"": {
    ""file"": ""assets/main.c58b35ad.js"",
    ""imports"": []
  },
  ""main.css"": {
    ""file"": ""assets/main.babcb300.css""
  }
}
Then can get the assets/demo.098465ec.png  by  images/demo.png for backend.
src
├── entry
│   └── main.js
├── font
│   └── font.ttf
├── images
│   ├── demo.png
│   └── favicon.svg
└── style
    └── style.css



What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",5,4
3061,2021-04-20T09:08:36Z,,2022-06-14T12:54:41Z,8,69,2,"Description
If a module is imported dynamically, vite detects modules for preloading and replaces the code with the preload helper. This only affects production builds though.
For example:
await import('./test.js')

is replaced with
await __vitePreload(() => import(""./test.js""), true ? [""/path/to/other.js""] : void 0)

Modules are preloaded by injecting a link with rel=""modulepreload"" in the index.html.
As the /path/to/other.js is absolute, this will only work, if the deployed application runs under ""/"". If the deployed application is under a different path, the preloading will not work.
This fix just adds a dot in front of the preload url such that it will be load relative to the index.html. I don't see, why that should break anything, but I am not 100% sure.
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",5,8
3072,2021-04-20T17:15:35Z,2021-04-25T11:34:26Z,2021-04-25T11:34:26Z,8,72,10,"Description
This supersedes #2613
Additional context

Added @typescript-eslint/eslint-plugin to also lint typescript related code
Disabled some lines for now
Disabled some recommended rules for now so no warnings or errors are thrown with the current code


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
3073,2021-04-20T17:41:29Z,2021-04-20T19:03:35Z,2021-04-20T19:03:35Z,2,2,1,"Description
A Marko vite plugin is in the works however it is blocked by a couple hard coded file extension checks.
This PR adds support for the .marko file extension which makes creating a plugin possible.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.

On the test front it is a bit tricky. I could create an example in the playground repo, but it's a bit of a chicken and egg situation with the @marko/vite plugin not yet being published.",3,3
3074,2021-04-20T21:01:13Z,2021-04-24T19:14:17Z,2021-04-24T19:14:17Z,1,1,1,"UPDATE: issue was produced by @nuxtjs/composition-api-plugin incorrectly producing a sourcemap. Will address in there but it might be worth still handling an empty source.

Description
This PR updates the sourcemap support in vite to handle empty strings.
The issue I'm facing is the following error:
[vite] Internal server error: EISDIR: illegal operation on a directory, read

It is produced by attempting to read a directory path: sourceRoot + an empty sourcePath (= '').
Alternative solutions
We could just filter sources first for non-empty strings.
What is the purpose of this pull request? 

 Bug fix

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,3
3075,2021-04-21T01:07:50Z,2021-05-08T12:18:36Z,2021-05-08T12:18:36Z,1,4,4,"For people like me that are not familiar with defineComponent, I ran into an issue using this plugin and HMR not working. It would have been great if the docs were something I could copy and paste and still work.
#3002 (comment)

 Documentation update",3,0
3080,2021-04-21T18:37:15Z,2021-04-28T14:41:40Z,2021-04-28T14:41:40Z,1,1,0,"Description
The buildStart hook is not called when server.middlewareMode is true. I see no reason why it shouldn't be called.
Fixes aleclarson/vite-tsconfig-paths#21

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
3081,2021-04-21T22:29:42Z,2021-04-29T14:57:54Z,2021-04-29T14:57:54Z,8,190,0,"Description 📖
This pull request adds a few tests to ensure there is coverage around root, base, build.outDir, build.rollupOptions.input, and base, which are configured differently when used through a backend integration such as Vite Ruby or Laravel Vite.
Also, it prevents regressions (such as #2201) when serving files outside of Vite's root, which is also relevant for backend integrations.
Background 📜
This was originally merged in #2358 and later reverted in #3015 because the approach used in the test was causing problems.
After a discussion with @patak-js, we decided that it was worth adding a separate playground, and that we could leverage the opportunity to test root and other options that are relied upon in backend integrations.
Screenshots 📷
The new playground, in the future it could be used to cover other configuration that is relevant for backend integrations.",3,2
3113,2021-04-23T14:36:09Z,2021-04-27T10:13:46Z,2021-04-27T10:13:46Z,1,2,2,"Description
A simple patch that allows you to overwrite TerserOptions.safari10 from UserConfig.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,0
3115,2021-04-23T14:58:10Z,,2021-05-28T14:15:08Z,3,24,13,"Description
fix #3093
add an option named runtimePort in config.server.hmr . The value of runtimePort will replace __HMR_PORT__  literal.
Additional context
Is this a good option design ? Is a test case needed?

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",6,6
3117,2021-04-23T16:37:26Z,2021-04-24T09:17:05Z,2021-04-24T09:17:05Z,1,5,2,"Description
The user is greeted with the following message if he/she attempts to create a project in the current directory that is non-empty:-
Target directory . is not empty.
This PR aims at improving the message.
Additional context
N/A
What is the purpose of this pull request? 

 Bug fix
 New Feature (Enhancement)
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,1
3121,2021-04-24T07:11:22Z,,2021-04-24T14:04:48Z,1,49,39,"Description
#2996 and #3039 reworked the package resolution to ignore the browser field if the plugin is running in ssr mode.
See @frandiox comment, if the target is webworker (ie cloudflare workers) then the browser field should be respected even in ssr mode.
This PR adds a targetBrowser param to the resolve methods instead of the previous ssr one. I think that targetBrowser is better here than targetNode to avoid the need to negate it when using it.
const targetBrowser = !(isNode && ssr)
isNode is using the same function from https://github.com/iliakan/detect-node, included in the code to avoid an extra dependency. I don't know if this the most robust way to detect that we are in node and not in a webworker. @frandiox could you check that vite-edge works correctly after this PR (using a dependency that has the browser field, like websocket #2995 or cross-fetch #3036)
This is a regression because #2996 was already included in v2.2.0, #3039 has not yet been released.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,8
3123,2021-04-24T13:03:40Z,2021-04-24T15:22:41Z,2021-04-24T15:22:41Z,1,1,1,"Description
Updated the bullet point order
What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
3128,2021-04-24T19:05:47Z,2021-04-24T20:53:07Z,2021-04-24T20:53:08Z,1,1,1,"Description
vite already contains code to handle svelte extension in several places similar to .vue, but .svelte is missing from the list of js src files, leading to ?import being appended to all .svelte imports. This PR adds .svelte so it works the same as .vue or .marko.
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
3130,2021-04-24T22:17:29Z,2021-04-25T07:50:29Z,2021-04-25T07:50:29Z,4,8,2,".pcss is recommended extension for PostCSS based sources:
https://twitter.com/postcss/status/661645290622083073",3,0
3132,2021-04-25T02:56:24Z,2021-04-25T09:16:40Z,2021-04-25T09:16:41Z,1,13,3,"fix #2918

Description
resolve module path parser in dynamicImportPolyfillPlugin

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,0
3145,2021-04-25T21:58:29Z,,2021-06-06T21:14:04Z,1,98,64,"Description
Using rollup.watch comes with some leaks: we can not watch for configuration changes neither control what is built.
This is an alternative approach that replace the use of rollup.watch with a custom chokidar that trigger internal build (so we can not have different behaviour while using the watch option)
Caveat:
This comes with a breaking change in the watcher configuration from RollupWatcher (rollup) to WatchOptions  (chokidar)
Fix #3108
Fix #3068
What is the purpose of this pull request?

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",6,6
3151,2021-04-26T07:22:32Z,2021-05-07T06:18:11Z,2021-05-07T06:18:11Z,5,71,41,"Description
Reworked #3121 as a feat.
#2996 and #3039 reworked the package resolution to ignore the browser field if the plugin is running in ssr mode.
See @frandiox comment, if the target is webworker (ie cloudflare workers) then the browser field should be respected even in ssr mode.
There is a new config option ssr.target:

The default target for the SSR build is a node environment, but you can also run the server in a Web Worker. Packages entry resolution is different for each platform. You can configure the target to be Web Worker using the ssr.target set to 'webworker'.

We already have a build.target but if we reuse it, the users will be forced to modify this option depending on building for the web or using build --ssr. I think it makes sense to be able to define both in the config file.
A targetWeb param to the resolve methods instead of the previous ssr one (I think that targetWeb is better here than targetNode to avoid the need to negate it when using it). In the resolve plugin:
const targetWeb = !ssr || ssrTarget === 'webworker'
#2996 #3039 didn't introduce a regression for Web Workers, because the target was implicitly Node until this point. So they are both fixes for the Node ssr server.
This PR allows ecosystem solutions like vitedge to resolve the browser field as before. There may be other differences that we need to take into account when ssr.target is webworker, but for @frandiox Vite was working without issues before these changes. I think there is the need for extra configuration that may now be included as default when targeting webworkers. For example the resolve.mainFields default. I think these could be added in future PRs. As the SSR feature is still labeled experimental, ssr.target should also be considered experimental.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other",4,2
3152,2021-04-26T07:57:35Z,2021-05-07T03:34:32Z,2021-05-07T03:34:32Z,4,18,5,"Description
#3141  feature
I do not recommend setting publicDir to false or null directly.Because this feature only takes effect during build,
if publicDir is set to false,we need special processing when starting vite dev,eg. change publicDir from false to public.
So I think adding a separate build.ignorePublicDir option is clearer and the changes are smaller.
Support set publicDir to false to disable copied static assets to build dist dir.
This PR modified post-processing：
publicDir:false -- do not process static files
publicDir:true -- set default 'public'
publicDir:'' -- set default 'public'
publicDir:'' -- do not process static files
not set value -- set default 'public'
What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,6
3154,2021-04-26T08:47:36Z,2021-04-27T09:54:29Z,2021-04-27T09:54:29Z,36,899,0,"Description

This is a follow up of #2541 and the revert due to the issues #3084 #3101
I did a bit more research, and i got a ""minimal"" working example, where you can see our issue. I generated 25 files with many references. Additionally, I added all of those files as entrypoints and added preserveEntrySignatures: 'strict' which also requires polyfillDynamicImport: false. ( This is the config we use in our production environment, as we have several plugins in other projects which need to reference modules at runtime, not build time ). Anyways, in this configuration, the vite:import-analysis plugins seems to run forever, as the number of files to analyze grows exponentially with the total number of files. (As mentioned before, we have about 1500 modules in our project and there are two files, which will run into this issue). You can test this out by running yarn build in the ""infinite-deps"" playground without my fix.
With this fix, I more or less reintroduced the fix of #2541 but I limited the duplication check to every import of a module. I also added a test-case based on the issues #3084 and #3101
Additional context

I know that this is quite an edge case for most users, but for us it is really important, as it prevents us from building for production.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,2
3165,2021-04-27T00:13:08Z,,2022-05-13T16:08:14Z,1,10,2,"Description
For example, if /a/b/main.js imports ../foo and /a/b is a symlinked directory pointing to /g/b, we want the import to resolve to /g/foo instead of /a/foo because the latter might not be equivalent.
realpath(""/a/b/main.js"")  => ""/g/b/main.js""
resolve(""/a/b"", ""../foo"") => ""/a/foo""
realpath(""/a/foo"")        => ENOENT
resolve(""/g/b"", ""../foo"") => ""/g/foo""
realpath(""/g/foo"")        => ""/g/foo""

I detailed my use case in this comment.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,9
3171,2021-04-27T06:48:39Z,2021-05-01T14:15:35Z,2021-05-01T14:15:35Z,4,18,0,"Description
fix #3162
recommit this PR #814
vite build has no such problem, so only  importAnalysis.ts needs to be modified.

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,2
3177,2021-04-27T16:08:03Z,2021-05-05T07:56:59Z,2021-05-05T07:57:00Z,2,9,2,"fix: #3087

Description

Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,5
3182,2021-04-28T02:43:31Z,,2021-12-08T21:25:51Z,4,95,3,"Description

make devServer restartable , convenient to debug
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",9,30
3185,2021-04-28T07:45:16Z,2021-04-28T16:50:44Z,2021-04-28T16:50:44Z,4,12,6,"Description
Setup for the screenshots: I forced a runtime build error, by using configResolved to get the config in an internal plugin. This is ok according to the public API of vite, but internal plugins don't get this hook called (and you should directly get the config through params).
In the current test output for ssr-react, the build failed but the tests continued to run and trying to use await page.click caused a timeout that is reported and hides the real issue


This PR closes the page if there is an exception during the test setup, resolving the await and timeout issue. The real error gets properly reported but it is duplicated, as logLevel: 'error' is used to do the builds for the test suite so it is reported both by Vite and by Jest.


To avoid this, the logLevel is set as 'silent' so the only reported exception is logged by Jest


Note: I included both changes in the same PR because in the current test setup we don't have the duplicated log error.
Additional context
The Jest log is a lot better than the one generated internally by Vite, it would be good to see if we could get the same output when the user uses the cli.

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other",3,0
3188,2021-04-28T12:13:33Z,,2021-05-29T08:50:49Z,2,22,6,"Description

generate outputs concurrently，I guess the outputs is isolate from each other
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,7
3214,2021-04-29T15:17:03Z,2021-05-22T14:16:31Z,2021-05-22T14:16:31Z,13,13,7,"Description
Definition of tsconfig.types on the TS documentation writes

If types is specified, only packages listed will be included in the global scope. For instance:

So if use Vite to create a *-ts project and TS will not recognize global definition such as Jest unless add Jest to tsconfig.types.
Additional context


What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,7
3219,2021-04-29T20:09:22Z,,2021-06-16T12:48:58Z,4,118,40,"Description
Introduce a config option to allow plugins/users to contribute to the logic of vites isJSRequest util
see discussion here #2829
As this option is primarily aimed at plugin authors i didn't add documentation to the user docs. Can be done if needed/wanted
This PR is also a first step in a series that would have to be taken to allow current and future SFC style plugins to configure vite without relying on the help of vite internals. The discussion linked above highlights other areas that are also in need of configurability
Additional context
The current implementation of isJSRequest returns true for foo.txt?bar=.js  because it ended with .js and cleanUrl was called after the regex check. If that semantic was on purpose it could be added back by constructing a similar regex out of the Set

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",3,1
3226,2021-04-30T14:55:57Z,2021-05-04T04:15:33Z,2021-05-04T04:15:33Z,3,2,73,"Description
Remove:

AppVeyor CI
Circle CI

they are replaced by GitHub Actions
Also change badges in README.md
Additional context
At least Circle CI was already shut down by Evan on meeting 2021-04-30

What is the purpose of this pull request? 

 Bug fix
 New Feature
 Documentation update
 Other

Before submitting the PR, please make sure you do the following

 Read the Contributing Guidelines.
 Read the Pull Request Guidelines and follow the Commit Convention.
 Check that there isn't already a PR that solves the problem the same way to avoid creating a duplicate.
 Provide a description in this PR that addresses what the PR is solving, or reference the issue that it solves (e.g. fixes #123).
 Ideally, include relevant tests that fail without this PR but pass with it.",4,0
