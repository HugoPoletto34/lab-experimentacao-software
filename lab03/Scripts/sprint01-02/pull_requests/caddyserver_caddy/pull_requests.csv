number,created_at,merged_at,closed_at,files,additions,deletions,body_text,participants,comments
228,2015-08-30T18:10:13Z,2015-09-05T20:56:23Z,2015-09-05T20:56:23Z,4,178,23,"If the password arg starts with htpasswd=, then the rest is treated as
the file name of the htpasswd file, and used for md5 and sha1 hashes.",3,5
664,2016-03-08T14:39:44Z,2016-03-14T21:25:44Z,2016-03-14T21:25:44Z,5,141,45,"As per my comment #613 (comment), checking along with the other per-server checks makes for fewer code added, but with somewhat confusing method name.
The alternative is adding a Full() method on the host, with CheckFull() function on the upstream, and do do the Full() check in basically all the same places are where the Down() check is done.",5,8
1112,2016-09-17T01:47:27Z,2016-09-25T03:02:19Z,2016-09-25T03:02:19Z,2,72,26,"This PR contains two parts:

Fix a subtle bug in TestDownstreamHeadersUpdate and TestUpstreamHeadersUpdate: wrong logic when checking Merge-Me header. Also do a minor refactor.
Don't append a predefined header: Some plugins may already set response headers(e.g. MIME plugin). I think the proxy shouldn't append them which may lead to misleading or duplication.",4,8
1115,2016-09-18T02:20:53Z,2016-09-19T22:28:55Z,2016-09-19T22:28:55Z,2,100,1,"fix issue #1026
Signed-off-by: Tw tw19881113@gmail.com",3,1
1120,2016-09-20T09:35:07Z,2016-09-20T15:06:28Z,2016-09-20T15:06:28Z,1,4,3,"This adds the multipass plugin to the Caddy's directives.
Relates to: https://github.com/caddyserver/caddyserver.com/pull/67",3,1
1125,2016-09-22T20:50:07Z,2016-09-25T03:11:30Z,2016-09-25T03:11:30Z,1,1,0,See https://github.com/caddyserver/caddyserver.com/pull/78,4,6
1127,2016-09-22T21:23:07Z,2016-09-23T22:50:39Z,2016-09-23T22:50:39Z,2,104,65,"This PR makes a number of improvements to the Linux systemd service file and instructions.

Make the caddy service file compatible with older versions of systemd so it works for more people. Accomplish this by commenting out optional directives that only work with newer versions of systemd.
Simplify the structure of the instructions.
Add much more complete step by step instructions for setting up the caddy service.

I tested this thoroughly on RedHat 7 on AWS, running systemd v219.",5,2
1129,2016-09-23T17:01:00Z,2016-09-24T05:29:23Z,2016-09-24T05:29:23Z,5,105,70,"This builds on #1087 and fixes #1123. Reconnects if required and allows a configurable number of connection to reuse in the pool.
This instructs fastcgi to attempt to persist and reuse up to 5 connections.
fastcgi / 127.0.0.1:900 php {
    pool 5
}

It is disabled by default unless the configuration is added and pool > 0.
pool 1 works fine from all my tests.
Benchmark on linux container using hey.
Persistent Connection
Caddyfile
0.0.0.0
root /src
fastcgi / fpm:9000 php {
     pool 1
}

Result
❯ hey -n 1000 -c 20 http://localhost:2015
Summary:
  Total:    8.8103 secs
  Slowest:  0.3320 secs
  Fastest:  0.0379 secs
  Average:  0.1743 secs
  Requests/sec: 113.5040

Status code distribution:
  [200] 1000 responses

Response time histogram:
  0.038 [1] |
  0.067 [4] |∎
  0.097 [20]    |∎∎∎
  0.126 [69]    |∎∎∎∎∎∎∎∎∎
  0.156 [237]   |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎
  0.185 [293]   |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎
  0.214 [224]   |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎
  0.244 [99]    |∎∎∎∎∎∎∎∎∎∎∎∎∎∎
  0.273 [36]    |∎∎∎∎∎
  0.303 [14]    |∎∎
  0.332 [3] |

Latency distribution:
  10% in 0.1281 secs
  25% in 0.1482 secs
  50% in 0.1717 secs
  75% in 0.1989 secs
  90% in 0.2263 secs
  95% in 0.2460 secs
  99% in 0.2856 secs

Non-Persistent Connection
Caddyfile
0.0.0.0
root /src
fastcgi / fpm:9000 php

Result
❯ hey -n 1000 -c 20 http://localhost:2016
Summary:
  Total:    10.2372 secs
  Slowest:  0.4034 secs
  Fastest:  0.0261 secs
  Average:  0.2017 secs
  Requests/sec: 97.6830

Status code distribution:
  [200] 1000 responses

Response time histogram:
  0.026 [1] |
  0.064 [4] |∎
  0.102 [25]    |∎∎∎
  0.139 [71]    |∎∎∎∎∎∎∎∎∎
  0.177 [227]   |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎
  0.215 [303]   |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎
  0.252 [210]   |∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎∎
  0.290 [97]    |∎∎∎∎∎∎∎∎∎∎∎∎∎
  0.328 [48]    |∎∎∎∎∎∎
  0.366 [8] |∎
  0.403 [6] |∎

Latency distribution:
  10% in 0.1388 secs
  25% in 0.1677 secs
  50% in 0.1988 secs
  75% in 0.2340 secs
  90% in 0.2727 secs
  95% in 0.2970 secs
  99% in 0.3450 secs

Not much difference in the benchmark results and persistent connection is a bit faster.",3,3
1134,2016-09-24T22:19:39Z,2016-09-28T00:12:22Z,2016-09-28T00:12:22Z,5,184,8,"I have written test for @abiosoft s new pool directive (nicely passing) and the actual pooling -> persistent fastcgi functionality itself. The latter reveal some problems (pool > 0 does not lead to less tcp connections.)
TestPersistent tests for various pool sizes and runs some serial as well as parallel requests to stress the server. Run test -v to see the number of connections used.",5,14
1135,2016-09-24T22:39:06Z,2016-09-27T23:53:44Z,2016-09-27T23:53:44Z,3,102,43,"This PR should fix #1069 and resolve a few other outstanding irritants in proxy behavior for backends that are less-than-robust. In summary:

Proxy no longer retries by default when a request fails, because tryDuration (now a configurable value on the Upstream itself) defaults to 0. This means that, by default, the downstream client must retry their request when a host initially goes down or no hosts are available.
New configuration subdirectives: try_duration and try_interval. try_duration specifies how long to try selecting hosts (used to be 60s) until one succeeds. The introduction of try_interval (with a default of 1s) is there to prevent tight loops that spin the CPU in case all the requests fail gloriously fast; this also operates under the assumption that hosts won't likely come back up within a fraction of a second and that a client can wait 1s when an upstream host initially goes down.
fail_timeout now defaults to 0, which means that request failure counting is disabled. In other words, a failed request does not count against the upstream host's availability. Since max_fails defaults to 1 (which is sensible), a single request failure could mark the upstream host down for every client for 10 seconds. This is still the case, but now the user has to opt-in to this behavior.
max_fails can no longer be < 1. People used to set this to 0 to work around the sporadic failures or ""long-lived"" downtime (of 10 seconds) even if the actual downtime may have been a fluke or a second or two. This resulted in the CPU spinning in a loop and 10s of ""502 Bad Gateway"" even though the host came up 9 seconds earlier. Anyway, this value is now irrelevant if fail_timeout is 0. The user has to explicitly enable fail_timeout in order to count request failures.
We report the actual backend error rather than ""unreachable backend"".

I have also updated the proxy docs in an attempt to be clearer in what these parameters do.
@nemothekid: Would love to have your review/approval on this! 😄",7,21
1139,2016-09-27T04:57:35Z,,2016-09-27T23:54:26Z,2,7,3,,2,1
1140,2016-09-27T07:41:04Z,2016-09-28T01:02:28Z,2016-09-28T01:02:28Z,2,68,5,"fix issue #1131
Signed-off-by: Tw tw19881113@gmail.com",2,0
1143,2016-09-27T21:46:18Z,2016-09-28T14:07:58Z,2016-09-28T14:07:58Z,2,10,15,"This should fix #1136.
Instead of modifying the pool directly I make a copy of it and remove hosts from the copy.  I'm not sure if this is the best way to do this or not.
It's necessary to keep track of the host pool because simply decreasing the poolLen could result in traffic still being sent to the down host.",3,12
1144,2016-09-28T08:14:03Z,2016-09-28T18:23:44Z,2016-09-28T18:23:44Z,2,14,11,"Hello,
it is just the removing of the eager check in the browse middleware as stated in #1085
Caddy will start and throw a 404-error until the directory will be created.
Hopes that helps you ;)",4,5
1145,2016-09-28T09:03:05Z,2016-09-28T16:42:42Z,2016-09-28T16:42:42Z,2,17,14,"fix issue #1137
Signed-off-by: Tw tw19881113@gmail.com",2,0
1155,2016-10-01T13:29:50Z,,2016-10-01T15:24:40Z,1,4,0,"ERROR IN MY CONFIG, SORRY
Hello,
Caddyfile:
www.domain.com {
   redir https://domain.com{uri}
}
domain.com {
  ...
}

http://www.domain.com/abc/def redirects to https://domain.com//abc/def
This PR fixes this behavior => http://www.domain.com/abc/def redirects to https://domain.com/abc/def",3,3
1158,2016-10-02T10:51:27Z,2016-10-02T19:39:55Z,2016-10-02T19:39:55Z,2,83,21,"fix issue #1154
Signed-off-by: Tw tw19881113@gmail.com",2,1
1159,2016-10-03T07:21:50Z,2016-10-03T16:52:46Z,2016-10-03T16:52:46Z,3,65,0,"This PR implements the feature request #1117 😄
Caddyfile:
domain.com {
   tls {
      curves ab123, cd456, ef789
   }
}

Supported Curves (https://golang.org/pkg/crypto/tls/#CurveID):
p256 
p384 
p521",2,2
1161,2016-10-03T18:08:26Z,2016-10-03T23:15:23Z,2016-10-03T23:15:23Z,1,6,4,We need consistency/(unity) in code style!!!,2,0
1163,2016-10-03T18:29:21Z,2016-11-04T00:25:49Z,2016-11-04T00:25:50Z,9,438,2,"@mholt I'm looking for opinions on this implementation before I proceed further
Issue",6,16
1165,2016-10-04T03:41:48Z,2016-10-08T20:48:48Z,2016-10-08T20:48:49Z,2,29,0,"Fixes: #1066
This pull request changes the value of the default latency unit to use milliseconds.",4,7
1167,2016-10-04T12:31:24Z,2016-10-15T15:31:23Z,2016-10-15T15:31:23Z,1,1,0,"All required pull request to enable full support of github.com/echocat/caddy-filter plugin:

#1167
https://github.com/caddyserver/buildsrv/pull/33
https://github.com/caddyserver/caddyserver.com/pull/84",3,4
1169,2016-10-04T19:12:32Z,2016-10-05T21:38:27Z,2016-10-05T21:38:27Z,1,2,0,"Not sure if this is useful, but Caddy is (currently) an A+, seems nice to show it off 😉",3,3
1174,2016-10-10T07:37:10Z,2016-10-14T05:09:21Z,2016-10-14T05:09:21Z,6,97,9,"fix issue #1173
Signed-off-by: Tw tw19881113@gmail.com",3,0
1175,2016-10-10T08:43:28Z,2016-10-10T18:41:00Z,2016-10-10T18:41:00Z,1,2,2,"Changes after this PR.
Signed-off-by: Tw tw19881113@gmail.com",2,0
1178,2016-10-11T09:08:51Z,2016-10-11T16:26:51Z,2016-10-11T16:26:51Z,2,11,0,"fix issue #1177
Signed-off-by: Tw tw19881113@gmail.com",3,1
1184,2016-10-13T21:00:40Z,2016-10-16T18:11:52Z,2016-10-16T18:11:52Z,3,44,4,"Preventing the deletion of  Caddy-Rewrite-Original-URI from header allows php fastcgi apps to correctly log the url requested.
With my basic testing seems to fix #1153
I do not have enough knowledge to know if the other lines in the if statement are relevant or should also be removed.",3,11
1189,2016-10-17T19:59:30Z,2016-10-19T14:13:44Z,2016-10-19T14:13:44Z,3,55,1,The upstart versions of centos 6 and ubuntu 12.04 are missing features that are configured in the current upstart file. This PR adds separate files for these OSes.,3,1
1190,2016-10-18T01:21:11Z,2016-10-18T02:48:45Z,2016-10-18T02:48:45Z,2,31,51,"fix issue #1188
Signed-off-by: Tw tw19881113@gmail.com",2,0
1193,2016-10-19T21:30:40Z,2016-10-20T00:00:00Z,2016-10-20T00:00:00Z,2,3,3,Update Travis and Appveyor to Go 1.7.3,2,0
1196,2016-10-20T11:32:13Z,,2016-11-16T20:57:49Z,6,290,54,"My attempt to address #1192 😃 #hacktoberfest
This change extends fastcgi directive syntax to:
fastcgi backend1 backend2 backend3... {
    preset php
}

and is not backward compatible with previous syntax.",3,16
1197,2016-10-20T13:59:52Z,2016-10-25T15:28:53Z,2016-10-25T15:28:53Z,4,25,42,"This PR is due to changes made in Golang's tip: golang/go#17525
There's also one outstanding bug on golang's tip that I cannot track: reading from ping-pong WS proxy causes EOF
 go test ./...
--- FAIL: TestWebSocketReverseProxyFromWSClient (0.00s)
    proxy_test.go:205: EOF
FAIL
FAIL    github.com/mholt/caddy/caddyhttp/proxy  0.039s

Please note: this PR will PASS on golang 1.7.3 and fail on golang's tip.",4,9
1199,2016-10-20T19:32:20Z,2016-10-20T20:52:43Z,2016-10-20T20:52:43Z,1,5,5,See hacdias/caddy-filemanager#35.,4,0
1207,2016-10-24T03:14:49Z,2016-10-25T15:30:11Z,2016-10-25T15:30:11Z,1,5,0,"fix issue #1206
Signed-off-by: Tw tw19881113@gmail.com",4,4
1210,2016-10-24T19:05:27Z,2016-10-25T15:31:22Z,2016-10-25T15:31:22Z,1,1,0,"This is a 1 line fix for #1205.
Details of each site started will be written to Log as well as stdout.
I dont think this needs a test case.",2,1
1212,2016-10-25T03:04:57Z,2016-11-02T04:08:02Z,2016-11-02T04:08:02Z,2,13,18,"fix issue #1183
Signed-off-by: Tw tw19881113@gmail.com",4,1
1213,2016-10-25T17:22:20Z,2016-10-26T06:05:08Z,2016-10-26T06:05:08Z,13,34,99,"I've passed code through gometaliner and made some changes: aligned structs, removed dead/unused code, simplified some statements.",2,0
1214,2016-10-26T09:44:01Z,2016-11-03T18:24:26Z,2016-11-03T18:24:26Z,4,39,37,Get rid of TODO and custom Header type.,2,2
1215,2016-10-26T13:40:14Z,2017-02-17T16:25:23Z,2017-02-17T16:25:23Z,12,882,12,"Hi all,
This change introduces new push plugin (adressing #816)
This will be possible in golang 1.8 due to http.Pusher and http.PushOptions interfaces being introduced (golang/go@cf73bbf, tracking golang/go#13443)
As interface was published yesterday I could not resist and implemented new push directive 😁
This middleware operates in two modes: rules-based and link-based.
Rules-based syntax
push /index.html /index.css

push /index2.html /index.css

push / /ga.js

push /index.html /pushedResource.js /pushedCss.css {
   method GET
   header That-Was-Pushed Wow
   header Server Caddy-Push
}

Link-based mode
Middleware intercepts Link headers from the Next middleware and tries to use Pusher to push resources to the client.
For more information about Link header: https://w3c.github.io/preload/
Note for reviewers
This plugin is complete and tested but non functional as of current go's tip (actual implementation in https://go-review.googlesource.com/#/c/29439/ was not yet merged).
But... when go 1.8 will be released this plugin will actually support HTTP/2 Push in Caddy
Discussion
I'm not sure if this plugin should be integral part of the caddy's core or should I move it to it's own repo - opinions on that will be appreciated.
https://www.youtube.com/watch?v=vCadcBR95oU 🕶",13,55
1220,2016-10-27T02:29:21Z,,2016-10-27T11:45:45Z,4,12,4,,3,4
1221,2016-10-27T20:03:11Z,2016-10-29T14:44:49Z,2016-10-29T14:44:49Z,4,12,2,We need to fix Caddy  due to go-acme/lego@72914df,2,3
1226,2016-10-29T13:57:42Z,2016-11-02T04:04:53Z,2016-11-02T04:04:53Z,2,125,0,"See #1198.
Since @tristanrollet cited Readdir() as an example, the new Files template action behaves similarly to it and Readdirnames(), but doesn't take an integer as an argument.
I assumed that the directory would be within the root of the context. Let me know if that was incorrect.",3,10
1232,2016-11-01T04:51:44Z,2016-11-08T11:24:38Z,2016-11-08T11:24:38Z,4,181,0,,3,9
1238,2016-11-03T14:56:55Z,2016-11-03T18:13:39Z,2016-11-03T18:13:39Z,2,24,2,"fix issue #1234
Signed-off-by: Tw tw19881113@gmail.com",2,0
1239,2016-11-06T17:29:52Z,2016-11-17T04:41:53Z,2016-11-17T04:41:53Z,2,20,2,"Some web servers (e.g. Jetty 9.3) don’t like HTTP headers with empty values. This commit filters header replacements with zero length.
Should fixes #1225",4,6
1245,2016-11-08T21:43:10Z,,2016-11-09T13:34:41Z,1,1,1,In order to fix #1244 we need to reorder basicauth,2,1
1257,2016-11-12T00:14:57Z,2016-11-19T16:05:29Z,2016-11-19T16:05:30Z,7,140,18,"Hi,
Here's a summary of the changes for #1094 , as well as some questions/concerns.
Connect Timeout
I added a new connect_timeout property to the fastcgi directive, e.g.:
fastcgi / 127.0.0.1:9000 {
	connect_timeout 10s
}

I can test the new property using docker-compose: use iptables on the proxy
and drop packets that are outbound to the FastCGI service.
I'm having a hard time writing a test for it. I combed through the net
package to find some way to generate a i/o timeout but found nothing. Some
tests in the net package use
internal packages-those appear to be the ones with which the connection can be
impeded.
Any suggestions on how to test this while continuing to use net.Dialer?
Read Timeout
Similarly, here's the new read_timeout property:
fastcgi / 127.0.0.1:9000 {
	read_timeout 10s
}

I ended up assigning a deadline in streamReader.Read(), but had to use a
type assertion in order to assign the value. I think this is the right place,
or close, but I'm not so sure about the type assertion.
At any rate, feedback appreciated!",3,6
1264,2016-11-16T20:51:26Z,2016-11-17T04:29:43Z,2016-11-17T04:29:43Z,6,294,52,New branch for #1196,2,1
1268,2016-11-19T14:42:40Z,2016-11-19T15:47:54Z,2016-11-19T15:47:54Z,1,7,3,"This is a minor fix for an intermittent failure by TestFiles:
--- FAIL: TestFiles (0.00s)
	context_test.go:771: Test [1]: Expected files [file1 file2], got: [file2 file1]
FAIL
FAIL	github.com/mholt/caddy/caddyhttp/httpserver	0.050s

Since Files() does not guarantee the order of the files returned, the test sorts the resulting slice before comparing to the expected one.",2,0
1272,2016-11-23T12:19:29Z,2016-11-23T21:12:19Z,2016-11-23T21:12:19Z,4,4,4,"Maybe make the path also equal, i found:

/etc/ssl/caddy
/etc/caddy
/etc/caddy/ssl

And for MAC, i do not know 😅",4,4
1273,2016-11-24T15:21:01Z,2016-11-27T06:44:15Z,2016-11-27T06:44:15Z,2,43,3,"Hello @mholt ,
this PR should fix issue #1258:
2016/11/24 16:10:41 [INFO] Obtaining new certificate for 1.caddy.domain.com
2016/11/24 16:10:42 [INFO] acme: Registering account for
2016/11/24 16:10:42 [INFO][1.caddy.domain.com] acme: Obtaining bundled SAN certificate
2016/11/24 16:10:43 [INFO][1.caddy.domain.com] acme: Trying to solve TLS-SNI-01
2016/11/24 16:10:45 [INFO][1.caddy.domain.com] The server validated our request
2016/11/24 16:10:45 [INFO][1.caddy.domain.com] acme: Validations succeeded; requesting certificates
2016/11/24 16:10:46 [INFO] acme: Requesting issuer cert from https://acme-staging.api.letsencrypt.org/acme/issuer-cert
2016/11/24 16:10:46 [INFO][1.caddy.domain.com] Server responded with a certificate.
2016/11/24 16:10:46 [WARNING] Stapling OCSP: no OCSP stapling for [1.caddy.domain.com]: ocsp: error from server: unauthorized
2016/11/24 16:10:53 [INFO] Obtaining new certificate for 2.caddy.domain.com
2016/11/24 16:10:53 [INFO][2.caddy.domain.com] acme: Obtaining bundled SAN certificate
2016/11/24 16:10:53 [INFO][2.caddy.domain.com] acme: Could not find solver for: dns-01
2016/11/24 16:10:53 [INFO][2.caddy.domain.com] acme: Trying to solve HTTP-01
2016/11/24 16:10:54 [INFO][2.caddy.domain.com] Served key authentication
2016/11/24 16:10:55 [INFO][2.caddy.domain.com] The server validated our request
2016/11/24 16:10:55 [INFO][2.caddy.domain.com] acme: Validations succeeded; requesting certificates
2016/11/24 16:10:56 [INFO] acme: Requesting issuer cert from https://acme-staging.api.letsencrypt.org/acme/issuer-cert
2016/11/24 16:10:56 [INFO][2.caddy.domain.com] Server responded with a certificate.
2016/11/24 16:10:56 [WARNING] Stapling OCSP: no OCSP stapling for [2.caddy.domain.com]: ocsp: error from server: unauthorized
2016/11/24 16:11:04 [INFO] Obtaining new certificate for 3.caddy.domain.com
2016/11/24 16:11:04 [INFO][3.caddy.domain.com] acme: Obtaining bundled SAN certificate
2016/11/24 16:11:04 [INFO][3.caddy.domain.com] acme: Trying to solve TLS-SNI-01
2016/11/24 16:11:06 [INFO][3.caddy.domain.com] The server validated our request
2016/11/24 16:11:06 [INFO][3.caddy.domain.com] acme: Validations succeeded; requesting certificates
2016/11/24 16:11:07 [INFO] acme: Requesting issuer cert from https://acme-staging.api.letsencrypt.org/acme/issuer-cert
2016/11/24 16:11:07 [INFO][3.caddy.domain.com] Server responded with a certificate.
2016/11/24 16:11:07 [WARNING] Stapling OCSP: no OCSP stapling for [3.caddy.domain.com]: ocsp: error from server: unauthorized
2016/11/24 16:11:40 [INFO] Obtaining new certificate for 4.caddy.domain.com
2016/11/24 16:11:40 [INFO][4.caddy.domain.com] acme: Obtaining bundled SAN certificate
2016/11/24 16:11:40 [INFO][4.caddy.domain.com] acme: Trying to solve HTTP-01
2016/11/24 16:11:41 [INFO][4.caddy.domain.com] Served key authentication
2016/11/24 16:11:42 [INFO][4.caddy.domain.com] The server validated our request
2016/11/24 16:11:42 [INFO][4.caddy.domain.com] acme: Validations succeeded; requesting certificates
2016/11/24 16:11:42 [INFO] acme: Requesting issuer cert from https://acme-staging.api.letsencrypt.org/acme/issuer-cert
2016/11/24 16:11:42 [INFO][4.caddy.domain.com] Server responded with a certificate.",2,8
1274,2016-11-25T16:38:23Z,2016-11-30T01:13:12Z,2016-11-30T01:13:12Z,4,96,70,"By setting the read deadline in streamReader.Read(), the deadline was
extended by the read timeout on each subsequent call. To avoid this, the
deadline is set in FCGIClient.Request(), before the first read occurs.
Additionally, the read_timeout and connect_timeout properties now have a
default value of 60 seconds.
See #1094.",3,3
1275,2016-11-27T09:16:35Z,2016-11-27T12:35:54Z,2016-11-27T12:35:54Z,1,3,1,"This PR increases code coverage:
I cannot trigger (see below), as ln, err := net.Listen(""tcp"", ""[::]:0"") == ln, err := net.Listen(""tcp"", ""0.0.0.0:0"")!
if lnAddr == net.JoinHostPort(""0.0.0.0"", port) {  //covered
                return true // not covered
} //covered

Soon,
Eldin 😄
P.S.: Sorry for the separate PR, you pushed my PR a little bit too fast (I was 😴 ) -- I guess it´s not a big problem?",3,1
1278,2016-11-29T13:27:15Z,2016-12-03T06:35:33Z,2016-12-03T06:35:33Z,4,54,47,Adds support for all types of data in markdown,2,3
1280,2016-11-29T22:06:07Z,2016-11-30T04:24:12Z,2016-11-30T04:24:12Z,2,21,5,,2,0
1284,2016-12-03T22:37:08Z,2016-12-08T01:58:05Z,2016-12-08T01:58:05Z,7,220,79,"See #1094.
This update adds the send_timeout property to the fastcgi directive.
fastcgi / 127.0.0.1:9000 {
	send_timeout 10s
}

Like the connect_timeout and read_timeout properties, send_timeout has a default value of 60 seconds.
I added/refactored some tests along the way.",2,5
1285,2016-12-04T11:53:03Z,2016-12-04T14:42:55Z,2016-12-04T14:42:55Z,1,1,1,,3,2
1286,2016-12-04T17:22:55Z,2016-12-04T20:04:20Z,2016-12-04T20:04:20Z,2,4,4,,3,1
1288,2016-12-05T08:51:30Z,2016-12-08T01:59:02Z,2016-12-08T01:59:02Z,1,6,0,Just a little unit test for Issue #1283,3,1
1289,2016-12-05T11:53:35Z,2016-12-19T16:51:09Z,2016-12-19T16:51:09Z,8,166,20,"This change adds support for serving pre-compressed files (.gz for gzip encoding and .br for brotli).
How it works:
If file.x is requested and request's Accept-Encoding contains br, try to serve file.x.br instead if it exists. Vary: Content-Encoding header and Content-Encoding: br headers are then added to response.
If file.x is requested and request's Accept-Encoding contains gzip, try to serve file.x.gz instead if it exists. Vary: Content-Encoding header and Content-Encoding: gzip headers are then added to response.
This works for index files as well 😁
It also modifies gzip plugin so it no longer removes Accept-Encoding header from requests when gzip is enabled. This allows various other plugins in the chain (like fastcgi or proxy) to return compressed responses that will be omitted entirely by gzip plugin (backend can emit already compressed files).
Tip 1.: when manually testing gzip files with gzip -k filename
Tip 2.: when using git plugin on linux all files can be gzipped using then_long find ROOT -type f -exec gzip -kf {} ;",8,14
1290,2016-12-05T19:43:42Z,2016-12-17T18:30:08Z,2016-12-17T18:30:08Z,5,48,24,"Hide hidden files in browse plugin, fixes #1287",2,5
1301,2016-12-18T21:49:11Z,2017-02-08T15:02:10Z,2017-02-08T15:02:10Z,12,496,288,"This change introduces ability to log to remote syslog server.
I've made small refactoring to share code between errors and log plugins.",4,19
1304,2016-12-19T19:23:57Z,2016-12-27T22:53:17Z,2016-12-27T22:53:17Z,2,1,56,Remove code after 0.9 release,3,1
1309,2016-12-26T19:56:40Z,2017-01-01T02:51:30Z,2017-01-01T02:51:30Z,3,348,83,"@mholt We already talked in length about the contents of this PR and here it is!
I tried to split up this PR in 4 commits to clearly separate the fixes. The commit messages probably say it all. 🙂",3,20
1314,2016-12-29T17:22:29Z,2017-01-11T20:02:26Z,2017-01-11T20:02:26Z,3,129,13,"If only one upstream is defined we don't need to buffer the body.
Instead we directly stream the body to the upstream host, which reduces memory usage as well as latency.
Furthermore this enables different kinds of HTTP streaming applications like gRPC for instance.

This probably fixes #1310.
Again NOTE: This only works if your proxy directive specifies only a single upstream host.",4,26
1316,2016-12-31T11:25:40Z,,2017-04-14T22:18:53Z,1,1,1,"This defers the body close until the entire copy is complete.
I was having a problem with the websocket created by the Home Assistant (home-assistant.io) frontend getting proxied through Caddy. When I looked at the Wireshark capture the server was sending data but Caddy wasn't forwarding it. Eventually, I was able to isolate that Caddy was stopped at the Close call. Deferring this call allowed the data to pass and all work as expected.
I'm not entirely sure what the cause of the problem was (I'm not well-versed in the details of websockets). I suspect it has something to do with a comment I found in Caddy about the de-chunking which might be occurring",13,36
1317,2016-12-31T19:35:22Z,2017-01-01T03:29:14Z,2017-01-01T03:29:14Z,3,197,2,"A generic function is implemented to allow masking of certain patterns before calling the built-in path.Clean() function.
Added default mask to preserve double slashes of protocol separator (e.g., http://, https://, or ftp://).
Unit tests for the new functionality.

Note: This PR implements the functionality discussed in #1298.",3,6
1325,2017-01-04T00:41:34Z,2017-01-08T02:41:56Z,2017-01-08T02:41:56Z,2,41,32,"If a site owner protects a path with basicauth, no need
to use the Authorization header elsewhere upstream, especially since it
contains credentials.
If this breaks anyone, it means they're double-dipping. It's usually
good practice to clear out credentials as soon as they're not needed
anymore. (Note that we only clear credentials after they're used,
they stay for any other reason.)",3,16
1330,2017-01-06T21:04:21Z,2017-01-14T14:25:57Z,2017-01-14T14:25:57Z,2,34,0,"StartupHook enables the developer to create plugins that are executed in the very beginning of the Caddy process, even before it has started running. It allows, among many other things, to use flags and take advantage of the fact that Caddy hasn't started running yet to configure and enable a variety of features. I think this hook will open a whole new range of plugins.
I've already talked with @mholt about this because I was having a problem while I wanted to develop a plugin and he suggested this.",4,5
1331,2017-01-07T20:18:12Z,2017-02-28T12:54:13Z,2017-02-28T12:54:13Z,11,142,45,"Caddy may trim a request's URL path when it starts with the path that's
associated with the virtual host. This change uses the path from the request's
RequestURI when performing a redirect.
Fix issue #1327.",4,23
1334,2017-01-08T13:25:21Z,2017-01-09T02:29:39Z,2017-01-09T02:29:39Z,1,24,80,,2,2
1335,2017-01-08T15:39:08Z,2017-01-23T02:16:39Z,2017-01-23T02:16:39Z,3,64,2,"At the moment this functionality is limited to the allowed meta tags from getAllowedMeta
There are at the moment no test cases, but i'll look into them, if they are possible and useful.
Criticism and discussion is very welcome.
Should fix #1326",6,13
1337,2017-01-09T07:26:51Z,2017-01-17T17:34:18Z,2017-01-17T17:34:18Z,3,61,10,"Here is an awkward attempt at an implementation of feature request #1336. It appears to function correctly, but I'm guessing that the code quality and tests require more work, and/or I'm lacking some understanding that could lead to this breaking in some cases. Please let me know your feedback!",4,6
1340,2017-01-10T08:45:03Z,,2017-01-21T17:50:27Z,1,1,0,As per last PR of mine I would like to suggest to enable golint in CI so contributors will get feedback faster,2,2
1342,2017-01-10T21:05:38Z,2017-01-10T22:09:07Z,2017-01-10T22:09:07Z,4,4,4,,3,0
1343,2017-01-10T21:17:56Z,2017-01-11T00:46:01Z,2017-01-11T00:46:01Z,2,211,100,This can catch some of things like #1342 automatically,2,3
1344,2017-01-10T21:55:34Z,2017-01-14T06:42:01Z,2017-01-14T06:42:01Z,2,68,39,"This seems to be a straightforward implementation of #1328 .
I created a new flag -validate which will simply exit after the Caddyfile is parsed.
If Caddyfile is valid will log

[INFO] Caddyfile Valid

otherwise if Caddyfile is not valid the system will output an error as usual.
Questions?


Should a value other than 0 be returned from
os.Exit(0);


if the caddyfile is not valid?


Also validate will output even if -log is not present.   I assume this is the desired behaviour.


I couldn't see any tests for flags, so I didn't add one.",2,8
1349,2017-01-12T22:10:33Z,2017-03-10T05:31:38Z,2017-03-10T05:31:38Z,4,34,5,"This PR adds PROXY protocol v1 support to Caddy as per issue #852
From haproxy.org:

The PROXY protocol provides a convenient way to safely transport connection
information such as a client's address across multiple layers of NAT or TCP
proxies. It is designed to require little changes to existing components and
to limit the performance impact caused by the processing of the transported
information.

A PROXY header is sent as the first chunk of data sent over a socket, and looks like this (from docs.aws.amazon.com):
PROXY TCP4 198.51.100.22 203.0.113.7 35646 80\r\n
Afterwards, the connection behaves as it otherwise would -- there is no further negotiation. (HTTP, TLS, etc, operates as normal)
Support in Caddy is configured with two new flags:
-proxy-protocol-subnets -- A list of CIDR ranges to accept PROXY headers from
-proxy-protocol-timeout -- A timeout to receive said headers
When 1 or more subnets are specified, the listener is wrapped with one that returns a wrapped net.Conn, where RemoteAddr will return the address provided in the PROXY header -- if the socket RemoteAddr is within one or more of the specified subnets.

If the header is not sent (e.g. a normal GET request) the server will behave as it does without this functionally (i.e. graceful fallback).
A PROXY header with invalid content will be rejected
It has also has been tested with the realip directive -- allowing a CDN to set X-Forwarded-For while behind an AWS ELB, for example.

Relevant links (thanks @scalp42):

http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-proxy-protocol.html
http://www.haproxy.org/download/1.8/doc/proxy-protocol.txt
https://cloud.google.com/compute/docs/load-balancing/tcp-ssl/#proxy-protocol
https://godoc.org/github.com/armon/go-proxyproto",3,19
1353,2017-01-14T21:00:49Z,2017-01-14T22:54:27Z,2017-01-14T22:54:27Z,2,15,1,"ISO 8601 is the standard time format and is easy to parse.
This change assumes users desiring ISO 8016 generally prefer UTC for simplicity.
This results in {whenISO} to be significantly shorter than {when}:
{when}    = ""02/Jan/2006:15:04:05 +0000""
{whenISO} = ""2006-01-02T15:04:12Z""
Add unit test to verify both, as there was no unit test for {when}.",3,2
1356,2017-01-17T20:26:36Z,2017-01-23T16:40:48Z,2017-01-23T16:40:48Z,1,18,3,,3,6
1358,2017-01-18T03:04:06Z,2017-01-24T01:03:43Z,2017-01-24T01:03:43Z,2,52,0,"fix issue #1345
Signed-off-by: Tw tw19881113@gmail.com",2,5
1364,2017-01-18T22:06:46Z,2017-01-24T05:15:28Z,2017-01-24T05:15:28Z,3,20,2,"This is a continuation of implementation of #1185 started by  @elcore
The basic concept here is that we introduce two new replacer variables  {rewrite_path} and {rewrite_path_escaped} and change the behaviour of {path} and {path_escaped}
{rewrite_path} will always output the path that is the result of a rewrite block or the plain vanilla URI if no rewrite block exists.
{path} will always output the requested URI before any rewrite blocks are executed.  This is the same as {>Caddy-Rewrite-Original-URI} if a rewrite block exists.
Prior to this change {path} would output the rewritten path when a rewrite block was present.",3,4
1365,2017-01-21T01:55:26Z,2017-02-16T00:59:29Z,2017-02-16T00:59:29Z,3,20,18,"cfg.TLS.Enabled may be changed after plugin setup (here), but redirect plugin doesn't catch it.",2,0
1373,2017-01-25T03:10:44Z,2017-02-16T23:56:06Z,2017-02-16T23:56:06Z,3,19,140,"Go 1.8 comes with a slick Shutdown() method. I've tested this with restarts and it works like a charm. Will merge as soon as Go 1.8 is released.
(NOTE: Merge #1374 first!)",4,2
1374,2017-01-25T03:12:18Z,2017-02-16T23:51:01Z,2017-02-16T23:51:01Z,2,8,10,"Go 1.8 adds two timeout values that Caddy already supports, just have to enable them.",2,0
1376,2017-01-25T15:32:23Z,2017-02-17T00:19:58Z,2017-02-17T00:19:58Z,2,40,7,I promised to implement X25519 😄 (even though I have no time),3,6
1378,2017-01-26T04:26:32Z,2017-02-17T04:22:12Z,2017-02-17T04:22:12Z,3,62,11,"fix issue #1362
Signed-off-by: Tw tw19881113@gmail.com",3,4
1379,2017-01-26T05:13:01Z,2017-02-08T16:23:34Z,2017-02-08T16:23:34Z,6,202,151,"Issue
#1372
TODO

 rip out nested block parsing
 add new subdirectives + share between logging middleware
 set defaults to rotate logs
 update docs

work in progress!",4,11
1381,2017-01-26T06:57:50Z,2017-01-28T16:40:15Z,2017-01-28T16:40:15Z,1,19,13,"fix issue #958
Signed-off-by: Tw tw19881113@gmail.com",2,2
1389,2017-01-30T16:23:10Z,2017-02-18T22:26:24Z,2017-02-18T22:26:24Z,8,178,194,"Hi,
This PR introduced per vhost tls.Config using GetConfigForClient :)
I've tested it an now it's possible to set tls.Config using tls directive for every subdomain on it's own (i.e. customize curves, tls version, cyphers etc)
As per requested I've also added:
tls {
  http2 off
}

so HTTP/2 can be turned of completely for a subdomain.
Addresses: #1375, #189",6,11
1392,2017-02-01T06:23:51Z,2017-02-16T04:59:25Z,2017-02-16T04:59:25Z,2,14,1,"This adds the ability to query the request cookies for placeholders
using the syntax ""@cookiename"".
For example, this would allow rewriting based on a cookie:
  rewrite {
    if {:version} is 'dev'
    to /dev/index.html
  }",4,6
1399,2017-02-04T17:31:11Z,2017-02-04T22:29:30Z,2017-02-04T22:29:30Z,1,1,1,"A very simple fix for #1398 by simply adding a second '-' into the format for common log file.
In the future it may be desirable to add a placeholder for {>User} or {user} to ""represent userid of the person requesting the document as determined by HTTP authentication"" , however my personal opinion may be that in 2016 HTTP authentication even with HTTPS is not sufficiently 'common'.
This simple fix makes the caddy common file format compatible with the generally accepted 'common' file format, even if it will never provide the 'user' in the log.",2,0
1404,2017-02-06T13:40:38Z,2017-02-07T03:08:51Z,2017-02-07T03:08:51Z,1,27,6,Fixes #1363.,2,0
1409,2017-02-07T13:48:46Z,2017-02-16T01:34:02Z,2017-02-16T01:34:02Z,2,40,0,Fixes #1408,2,8
1421,2017-02-10T07:54:04Z,,2017-04-14T22:22:16Z,1,12,0,"This adds piped logs support. A useful feature I always use on Apache installations:
log ""|/usr/bin/rotatelogs -l my-site.log.de.access_log.%Y-%m-%d  86400""",3,5
1425,2017-02-11T14:45:19Z,2017-02-14T13:59:32Z,2017-02-14T13:59:32Z,1,1,0,CGI middleware for Caddy. Directive syntax has been flattened and problems raised in issues forum have been addressed.,5,2
1426,2017-02-11T17:53:14Z,2017-02-17T22:37:59Z,2017-02-17T22:37:59Z,3,28,5,The fastcgi and (pending) cgi middleware are currently unable to set the REMOTE_USER environment variable of users authenticated with the basicauth plugin. This PR sets the HTTP_AUTHORIZED key in the request header to the name of the authenticated user in order to do that. The password is not retained.,2,5
1429,2017-02-13T12:35:14Z,2017-02-16T05:02:52Z,2017-02-16T05:02:52Z,2,54,11,"Re-submitting PR (tests passing running locally!)
When the root path that is set is a symlink, caddyserver will not start and panics.
This PR is adding a check to determine if the path is a symlink first and if it is then delegate the responsibility that it is a valid path to the underlying OS, otherwise continue with the existing checks.",2,5
1430,2017-02-13T17:20:11Z,2017-02-17T21:07:58Z,2017-02-17T21:07:58Z,7,811,2,"This is a WIP branch which closes #1420. It makes it possible for Caddy to detect when it is likely that the TLS connection is being intercepted. This is possible because TLS proxies are mostly careless. It works by comparing the properties of the TLS Client Hello message to what is expected of the client indicated by the User-Agent HTTP header. If there is a mismatch, a MITM is likely.
The heuristics used here are a partial implementation of The Security Impact of HTTPS Interception by Durumeric, Halderman, and others.
I would like people to try this out -- you will need to compile this branch with Go 1.8.
This PR also adds:

{{.IsMITM}} template action that returns true or false.
{mitm} placeholder which can be used in the Caddyfile to initiate redirects or add the value to a log entry. It returns likely, unlikely, or unknown.

TODO:

 Write tests
 Flush out the Safari heuristics
 Seek clarification on the IE/Edge heuristics as they seem to overlap with Chrome
 Reading the TLS Client Hello in Accept() is currently blocking, I think. Verify if this is the case and, if it is, find a way to read the Hello without blocking other connections...
 A way to close the connection right away if a MITM is suspected (will be exposed via Caddyfile directive later if this feature is useful)

An easy way of testing this is to use Firefox to load a HTTPS page, then use the Dev Tools to ""Edit and Resend"" the HTTP request, changing the User-Agent header to replace ""Firefox"" with something like ""Chrome"" or any other browser.
I would like to encourage anyone to test this out and submit feedback, this is a highly experimental feature but one I feel could be important. Any other collaborators that would like to participate in reviewing, please do!",4,9
1431,2017-02-13T21:28:43Z,2017-02-14T10:23:46Z,2017-02-14T10:23:46Z,1,4,0,"This PR fixes #1388.
Exit from hideCaddyfile function if no Caddyfile exists",3,1
1432,2017-02-13T21:59:04Z,,2017-02-14T17:34:16Z,2,94,32,"The parsing of Accept-Encoding was inadequate, not recognising word boundaries. The returned ETag was not using strong and weak variants correctly.
This PR addresses these issues and improves the inadequacies in the related tests.",4,4
1435,2017-02-14T17:59:47Z,2017-02-18T22:52:51Z,2017-02-18T22:52:51Z,2,144,33,"The parsing of Accept-Encoding was inadequate, not recognising word boundaries. The returned ETag was  incorrectly weak variant.
The ETag calculation is now done in base-36.
This PR addresses these issues and improves the inadequacies in the related tests.
See #1432 and #1434.",4,8
1438,2017-02-15T06:58:28Z,2017-02-15T15:09:42Z,2017-02-15T15:09:43Z,5,102,21,"The Conns and Unhealthy fields are updated concurrently across all active
requests.  Because of this, they must use atomic operations for reads and
writes.
Prior to this change, Conns was incremented atomically, but read unsafely.
Unhealthly was updated & read unsafely.  The new test
TestReverseProxyMaxConnLimit exposes this race when run with -race.
Switching to atomic operations makes the race detector happy.",2,2
1441,2017-02-16T21:19:01Z,,2017-02-16T23:46:57Z,3,4,4,Finally 😄 🍰,4,5
1443,2017-02-16T22:05:52Z,2017-02-17T05:16:30Z,2017-02-17T05:16:30Z,2,18,12,"This PR adds support for ChaCha20-Poly1305 cipher suites 😄
https://github.com/elcore/caddy/ may be a follow-up",2,0
1448,2017-02-17T22:55:50Z,,2017-02-24T05:15:22Z,1,55,0,"Issue discussed in  #1430 with Chrome on iOS, which seems to use a Cipher that Chrome doesnt.
Created a new test for CRiOS (Chrome on iOS) that checks as for Chrome but with one less Cipher TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
Tested on Chrome on Windows and Chrome on iOS.
Chrome on iOS versions
Chrome verison:56.0.2924.79
iOS 10.0.2
@mholt The Client Hello is

Parsed ClientHello: {cipherSuites:[255 49196 49195 49188 49187 49162 49161 49160 49200 49199 49192 49191 49172 49171 491
70 157 156 61 60 53 47 10] extensions:[0 10 11 13 13172 16 5 18 23] compressionMethods:[0] curves:[23 24 25] points:[0]}

Full Headers : https://gist.github.com/tobya/8ec9e4b6553264b6e2022b228a58f631#file-clienthello-log",3,8
1453,2017-02-18T15:31:46Z,2017-02-18T22:50:36Z,2017-02-18T22:50:36Z,2,107,19,Addresses comments from #1215,2,0
1456,2017-02-19T10:28:13Z,2017-02-19T15:09:36Z,2017-02-19T15:09:36Z,2,25,5,Fixes #1455 (hope so),2,2
1462,2017-02-20T12:44:06Z,2017-02-20T15:20:11Z,2017-02-20T15:20:11Z,1,6,0,Fixes #1461,3,3
1466,2017-02-21T04:14:35Z,2017-02-21T16:49:23Z,2017-02-21T16:49:23Z,13,309,294,"This builds on @wendigo's recent PRs to use Go 1.8 features in the caddytls package.
I moved some logic around and simplified a few functions, as well as -- I think -- fixing some bugs or edge cases, like what to do with clients who don't use SNI: we return any tls.Config for a handshake that doesn't match any configs by the hostname. I figure any tls.Config is better than none: a TLS alert will be deferred to loading the certificate, or browsers will at least show warnings. The certificate store is process-wide, so which config is used shouldn't entirely matter when accessing it. It also means we can serve clients who don't support SNI, although I care about that less and less as time goes on. I hope this decision won't bite, but I don't think there's a perfect solution.
A couple syntax changes:

muststaple --> must_staple (not commonly used, which is probably a good thing for now, so I'm not too worried)
http2 off --> alpn http/1.1. I realized that the TLS directive should not really know about HTTP, but it can be told what protocols to send for ALPN. So disabling HTTP/2 is now done by telling the TLS config that it supports only HTTP/1.1.

I also revised how we read the ClientHello for our MITM detector. I defer all reading off the wire to the standard library's crypto/tls package Read() code, because it's highly robust and handles all the hard stuff. I tee off of that into a small buffer that is cleared after the ClientHello is collected and parsed. Load tests showed no noticeable performance degradation.",2,0
1474,2017-02-25T00:24:07Z,2017-03-07T15:55:40Z,2017-03-07T15:55:40Z,2,62,0,This PR is adding support for ServerIP context which can be used to get the local server IP. This is useful for example to print out the server IP in a template (e.g. Server IP: {{.ServerIP}}) when testing several instances of Caddy behind a load balancer.,4,31
1478,2017-02-27T14:11:37Z,2017-03-03T06:25:29Z,2017-03-03T06:25:29Z,2,11,2,"Solve #1470
*:80 {
  redir 403 {
    if {?foo} is bar
  }
}

$ curl localhost:80
404 Not Found
$ curl localhost:80?foo=bar
<a href=""/403"">Moved Permanently</a>.",3,4
1481,2017-02-27T19:42:09Z,2017-03-11T21:59:47Z,2017-03-11T21:59:47Z,8,78,48,"Fix for issue #1476 . PR #1364 introduced a bug where when a rewrite was performed  {path} logged path?query rather than just {path}.
This PR fixes it and adds a test.
Also while working on this I realised we needed a {rewrite_uri} placeholder and {uri} now correctly provides the non rewritten value.",2,2
1482,2017-02-28T10:47:55Z,2017-03-10T00:26:08Z,2017-03-10T00:26:08Z,1,11,0,"The issue is caddy will return wrong ""Content-Type"" (application/x-gzip) if ""gzip"" and ""templates"" are used at the same time.
To reproduce, run these code
cat << EOF > Caddyfile
localhost:2015 {
    gzip
    templates
}
EOF
echo test > index.html

caddy &
curl http://localhost:2015 -H 'accept-encoding: gzip' -v

and got
< HTTP/1.1 200 OK
< Content-Encoding: gzip
< Last-Modified: Tue, 28 Feb 2017 10:42:03 GMT
< Server: Caddy
< Vary: Accept-Encoding
< Date: Tue, 28 Feb 2017 10:43:11 GMT
< Content-Length: 29
< Content-Type: application/x-gzip

And the pull request fixed this.",3,6
1488,2017-03-02T12:08:31Z,2017-03-10T17:41:37Z,2017-03-10T17:41:37Z,1,5,2,"#1484. The fix is luckily very simple (it's literally only tlsClientConfig != nil &&). It can currently be tested by setting the default value of httpserver.HTTP2 to false in caddyhttp/httpserver/plugin.go and then running go test -run=TestWebSocketReverseProxyFromWSClient (which I did).
@passcod If you know how and if you have the time it'd be really cool if you could test this PR by building caddy from source. 🙂
P.S.: This PR sadly does not contain a real testcase for 4e31a26. Reason being that we currently run all of our tests with httpserver.HTTP2 set to true, which causes TLSClientConfig to be set and thus this error to never appear. Adding another testcase just for this very simple bug does not seem particularly helpful to me. Instead we should probably rather finally rewrite all the proxy tests to be more modular. Currently the entire proxy_test.go file is >1000 lines of largely redundant code. If it were more modular we could then easily run the same test e.g. twice: Once with httpserver.HTTP2 set to true and once while it's set to false. But this should probably rather happen in a seperate PR.",3,4
1491,2017-03-03T22:59:04Z,2017-03-09T20:20:15Z,2017-03-09T20:20:15Z,4,106,36,"Web browsers can be configured to save authenticated credentials for a combination of server and realm. Currently, the basicauth middleware always uses the default realm ""Restricted"". This PR supports the association of a custom realm with one or more protected resources. The benefit is that different credentials can be remembered by a browser for different groups of resources, something that applies to one of my use cases.
The changes are backward compatible. However, within a nested block, a resource to be protected can be placed after the path subdirective. This is in addition to simply naming a file or directory by itself as is supported currently. The new subdirective support seems to be more in line with most other middleware directives and looks a bit nicer when used with the proposed realm keyword.",3,3
1492,2017-03-04T00:32:04Z,2017-03-12T22:41:50Z,2017-03-12T22:41:50Z,3,78,62,"This adds a Content-Length header when the file myfile is requested, gzip encoding is accepted and myfile.gz is present and served. I also added Content-Length checks to the fileserver tests.
For details see issue #1479",4,6
1496,2017-03-05T09:33:59Z,,2017-03-10T17:42:28Z,7,16,44,"This PR replaces the use of an internal request header

Caddy-Rewrite-Original-URI

with context.  This should be merged before #1481 which will be updated to use this new code.
I'm not sure where to put a test if any.",2,3
1497,2017-03-05T14:52:56Z,2017-03-15T16:17:12Z,2017-03-15T16:17:12Z,3,96,26,"Previously the browse package invoked staticfiles.Redirect when
redirecting clients who requested a directory but with a Request-URI
that did not contain a trailing '/'. staticfiles.Redirect only used a
relative URI. This change defers the decision of how to format the
Location header value to the helper methods in the staticfiles package.",2,9
1498,2017-03-06T14:58:09Z,,2017-03-07T14:14:44Z,1,16,0,"Since some chrome releases or quic clients are not sending the Content-Length
in the request headers, caddy should re-calculate content-length by the body and fix it.
This fixes a potential issue where FastCGI POST requests body empty when QUIC is enabled. (#1370)",3,2
1499,2017-03-06T21:58:10Z,2017-03-10T00:45:07Z,2017-03-10T00:45:07Z,1,2,0,"If of interest this implements issue #1394 by logging certificate location when first written to disk.

2017/03/06 21:53:10 [INFO][sitecert3.example.com] Certificate written to disk: C:\Users\admin.caddy\acme\acme-v01.api.letsencrypt.org\sites\sitecert3.example.com\sitecert3.example.com.crt",2,0
1500,2017-03-07T01:21:59Z,2017-03-07T18:31:48Z,2017-03-07T18:31:48Z,6,84,44,"This commit removes almost all instances of hard-coded ports 80 and
443 strings, and now allows the user to define what the HTTP and HTTPS
ports are by the -http-port and -https-port flags.
(One instance of ""80"" is still hard-coded in tls.go because it cannot
import httpserver to get access to the HTTP port variable. I don't
suspect this will be a problem in practice, but one workaround would be
to define an exported variable in the caddytls package and let the
httpserver package set it as well as its own HTTPPort variable.)
The port numbers required by the ACME challenges HTTP-01 and TLS-SNI-01
are hard-coded into the spec as ports 80 and 443 for good reasons,
but the big question is whether they necessarily need to be the HTTP
and HTTPS ports. Although the answer is probably no, they chose those
ports for convenience and widest compatibility/deployability. So this
commit also assumes that the ""HTTP port"" is necessarily the same port
on which to serve the HTTP-01 challenge, and the ""HTTPS port"" is
necessarily the same one on which to serve the TLS-SNI-01 challenge. In
other words, changing the HTTP and HTTPS ports also changes the ports
the challenges will be served on.
If you change the HTTP and HTTPS ports, you are responsible for
configuring your system to forward ports 80 and 443 properly.
Closes #918 and closes #1293. Also related: #468.
/cc @dncohen @danderson @hazcod @stp-ip @FiloSottile (phew)",6,6
1501,2017-03-07T14:14:23Z,2017-03-10T02:36:04Z,2017-03-10T02:36:04Z,3,14,7,If request.ContentLength is set then it will be used instead of getting it from request.Header map since quic-go(quic-go/quic-go@bb24be8) will not store (and pass) the Content-Length header using its header map.,4,4
1505,2017-03-08T12:32:29Z,,2017-04-14T23:01:18Z,4,91,19,"This adds the root_ca parameter to the proxy module to configure upstream root CAs.
Some of the example use cases might be to use internal roots for internal usage or to trim down roots when connecting to a service.
If the idea seems right, I can add docs to document this.",4,8
1510,2017-03-12T03:46:05Z,2017-03-12T07:03:25Z,2017-03-12T07:03:25Z,1,1,1,It makes no sense to set the executable bit on a systemd unit config file. Most likely a typo.,4,1
1511,2017-03-12T07:25:16Z,2017-03-13T15:22:46Z,2017-03-13T15:22:47Z,14,39,43,"Replaced use of
caddy.CtxKey(""remote_user"")

and
caddy.CtxKey(""mitm"")

with constants",2,4
1513,2017-03-13T10:45:54Z,2017-03-14T15:57:08Z,2017-03-14T15:57:09Z,2,31,0,"Hey,
as promised an implementation of the load-balancing algorithm first.
Should be help fixing:

#1463
#1103

Greetings",3,1
1515,2017-03-13T14:47:18Z,2017-03-13T21:24:04Z,2017-03-13T21:24:04Z,1,1,1,"Ref: caddyhttp/markdown/markdown.go
Func strings.TrimRight (TrimLeft and Trim) removes cutset or a set of characters of type string, multiple times if possible:
fmt.Println(strings.TrimRight(""foo.md"", "".md"")) // ok: foo
fmt.Println(strings.TrimRight(""md.md"", "".md""))  // bad: <blank>

fmt.Println(strings.TrimSuffix(""foo.md"", "".md"")) // good: foo
fmt.Println(strings.TrimSuffix(""md.md"", "".md""))  // good: md
Also see the Go Playground.
In order to generate the correct HTML page title from the filename, function strings.TrimSuffix should be used.
Searched the code base:
https://github.com/mholt/caddy/search?p=1&q=trim&utf8=%E2%9C%93
This is the only place affected. The other place caddyhttp/header/header.go uses a single character as a cutset, which is good.",4,2
1524,2017-03-18T16:15:35Z,2017-04-02T20:58:15Z,2017-04-02T20:58:16Z,5,103,4,"Closes #1503.
This pull request adds a Stop method to the Upstream interface for safely shutting down the running goroutines.
The Stop function is registered with the Caddy controller's OnShutdown handler during setup so that the kill signal is propagated to all consumers.
I added some tests to check that healthchecks don't get sent after upstreams receive their kill signals.",3,4
1527,2017-03-19T12:30:47Z,2017-03-25T04:54:16Z,2017-03-25T04:54:16Z,4,22,3,"Following this discussion on the caddy forum this PR changes default ordering of a directory listing to show Directories first in alphabetical order then files in alphabetical order.
This is the standard ordering that people expect to see in any gui (web or desktop based) display of files and folders.  The change simply modifies the main name sort.  When sorting on modified date, I have left it the same so it sorts files and folders together as a list.
I modified the test and added a folder to the test directory to show that the sorting works.",3,2
1537,2017-03-26T20:38:57Z,2017-03-28T00:06:00Z,2017-03-28T00:06:00Z,3,46,33,The goal of this is to create plugins that can register Event Hooks and process information according to the type of event that is fired.,2,1
1540,2017-03-28T12:57:13Z,2017-03-28T14:19:29Z,2017-03-28T14:19:29Z,1,9,0,,2,2
1541,2017-03-28T21:10:02Z,2017-03-31T18:45:56Z,2017-03-31T18:45:56Z,5,8,8,See also #1272 (comment),4,2
1542,2017-03-28T21:52:54Z,,2017-10-23T12:05:56Z,4,14,2,"This PR adds in {user} placeholder.  The value is provided by basicauth.
If {user} does not exist a - is output to conform with the 'common log' format
I will submit a PR against caddyserver.com with updated docs.",5,21
1546,2017-03-29T14:48:16Z,2017-04-08T00:32:03Z,2017-04-08T00:32:03Z,1,11,2,"While reading browse I noticed this one. We've given directories a special treatment due to differences in filesystem implementations, but actually forgot to sort them further by the next dimension.
As their order has been undefined until now (their apparent size is set to -1 anyway), this does not change any expectations of legacy scripts.",3,1
1551,2017-03-30T20:56:45Z,2017-04-02T19:38:14Z,2017-04-02T19:38:15Z,4,64,25,"I have submitted this as a new PR for #1536 as @wmark  requested that the origional PR #1527 be reverted.
This PR has the revert and then the necessary changes applied.

name sort has been reverted to previous behaviour
Behaviour is now the same for urls where sort=name is included such as  https://…/…/?sort=name ×{asc,desc}
New sort created namedirfirst that sorts dir then file in alpha order
Default order when no sort defined is namedirfirst
json tests updated to include sort=name in url

Sorry to create a new PR but this seemed the most straightforward way to make a clean PR.",4,1
1558,2017-04-01T17:01:01Z,2017-04-03T21:16:32Z,2017-04-03T21:16:32Z,2,42,1,"Hey,
fixing #1556.
Unfortunately does not contain a functional test.
Ideas and tips for the test are appreciated.
Greetings",4,3
1559,2017-04-02T16:05:21Z,2017-04-08T06:47:34Z,2017-04-08T06:47:34Z,3,29,21,"This PR ensures that an index file for each markdown extension is check for. Fixes #1418
Edit: I realised I had explained this wrong.
The only index file that was getting matched for markdown was index.md even if the extension was different.
This PR adds an index file to be matched for each extension provided for markdown.  Index files are now also matched on a block basis.
As ever my newness to GO may betray me so I am open to any comments about what changes I should make to structure my code in a better way.
The default extensions (.md, .markdown and .mdown) are represented as a hash rather than array so  if an index.md, index.markdown and index.mdown exist in a directory it is random as to which gets displayed.  I decide this was unlikely to happen so ok to leave.",2,1
1567,2017-04-07T00:35:20Z,2017-04-17T17:02:45Z,2017-04-17T17:02:45Z,6,76,2,"This PR implements #1065 :
You can alternate the Index using the new index directive
localhost

index a.html b.html c.html",4,3
1577,2017-04-14T03:40:14Z,2017-04-17T15:58:48Z,2017-04-17T15:58:48Z,5,85,20,"Fixes #1574


Change NewStaticUpstreams func signature to add the host string as a parameter
Change all usages of NewStaticUpstreams to pass """" for the new parameter
Change staticUpstream.HealthCheck struct to store the host string
Change NewStaticUpstreams to set staticUpstream.HealthCheck.Host
Set req.Host if upstreamHeaders includes Host with the {host} placeholder



Still needs tests",5,12
1583,2017-04-17T08:57:26Z,2017-04-17T16:01:16Z,2017-04-17T16:01:16Z,2,9,6,"fix issue #1529
Signed-off-by: Tw tw19881113@gmail.com",2,1
1584,2017-04-17T09:10:24Z,2017-04-18T05:39:15Z,2017-04-18T05:39:15Z,2,22,5,"fix issue #1582
Signed-off-by: Tw tw19881113@gmail.com",3,3
1588,2017-04-17T20:08:46Z,2017-05-13T16:08:34Z,2017-05-13T16:08:34Z,2,137,32,"As per #1512 this PR only contains the necessary changes to fix #1502 and nothing more.
Sorry for closing the other PR and sorry for the delays - I'm having a kinda hard time in life right now and things like that are the result I guess. 😕
P.S.: I have no idea why one of the commit tests failed... Maybe a race condition? Because I haven't seen such a failure personally yet. With Rust that wouldn't have happened.",2,6
1591,2017-04-18T08:21:09Z,2017-04-18T14:14:01Z,2017-04-18T14:14:01Z,2,8,1,Signed-off-by: Tw tw19881113@gmail.com,2,1
1593,2017-04-18T12:37:58Z,,2018-02-16T20:29:54Z,6,510,13,"There's a handful of TODOs in the code, and I think it needs some serious design feedback from @mholt, and then some ""how do we CT best"" feedback from the community.
But it works! I tested it! (If I was smart, I'd have left the server running, instead of deleting the VM it was running in)",7,29
1595,2017-04-18T21:19:11Z,2017-04-19T22:20:16Z,2017-04-19T22:20:16Z,2,43,0,This adds the ability to display the remote hostname of the visitors IP with template actions.,6,8
1596,2017-04-18T22:01:53Z,2017-04-20T11:39:43Z,2017-04-20T11:39:43Z,1,5,3,Fix #1471,2,0
1598,2017-04-19T15:01:56Z,2017-04-30T14:19:03Z,2017-04-30T14:19:03Z,7,87,41,"fix issue #1589
Signed-off-by: Tw tw19881113@gmail.com",3,5
1599,2017-04-19T18:47:46Z,2017-04-20T11:38:55Z,2017-04-20T11:38:55Z,3,89,1,"My first Caddy PR :)
Fix for #1592. It doesn't handle hostnames that resolves to private IPs.",3,3
1600,2017-04-20T02:57:01Z,2017-04-26T19:44:32Z,2017-04-26T19:44:32Z,2,86,34,Will work out-of-the-box now.,2,1
1605,2017-04-21T11:40:38Z,2017-04-21T18:07:14Z,2017-04-21T18:07:14Z,2,11,1,"fix issue #1604
Signed-off-by: Tw tw19881113@gmail.com",4,1
1607,2017-04-21T15:29:42Z,2017-04-26T18:00:50Z,2017-04-26T18:00:50Z,2,6,1,"Followup to #1599 after #1592 was re-opened
If net.SplitHostPort returns an error (i.e. no port in the address), then we need to manually strip the square brackets so that it's a valid address for net.ParseIP, otherwise it returns nil.
I also added a couple tests to cover those cases.",2,0
1612,2017-04-23T10:32:11Z,2017-04-26T16:45:58Z,2017-04-26T16:45:58Z,1,1,2,Use systemctl --version instead of a distribution-specific command.,4,2
1613,2017-04-24T07:30:35Z,2017-04-30T14:09:54Z,2017-04-30T14:09:54Z,4,66,7,"During writing my blog caddy plugin, I find that there is no way to add push links in template files. I think this is very useful to indicate server push in templates when combining with push.
For example, something in index.html looks like:
...
<script src=""/public/js/jquery.js"" type=""text/javascript"" charset=""utf-8""></script>
<link rel=""stylesheet"" type=""text/css"" href=""/public/css/style.css"" />
{{.AddLink /public/js/jquery.js}}
{{.AddLink /public/css/style.css}}
...

Client will receive server push for /public/js/jquery.js /public/css/style.css",2,3
1618,2017-04-25T12:16:41Z,2017-04-26T06:23:50Z,2017-04-26T06:23:50Z,3,107,18,"benchmark           old ns/op     new ns/op     delta
BenchmarkGzip-4     2219756       2123427       -4.34%

benchmark           old allocs     new allocs     delta
BenchmarkGzip-4     25             8              -68.00%

benchmark           old bytes     new bytes     delta
BenchmarkGzip-4     959566        146507        -84.73%",4,2
1629,2017-04-27T17:26:37Z,2017-05-01T19:45:40Z,2017-05-01T19:45:40Z,2,19,5,"(Thank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.)
1. What issue(s) is this pull request related to?
Issue #1610
2. What does this change do, exactly?
The change raises a syntax error if the rewrite path being rewritten to does not begin with a /
3. What documentation changes (if any) go along with this PR?
I can submit a seperate pull request to update documentation to say that rewrite paths should start with a /
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, and functions or non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,4
1633,2017-04-29T22:55:08Z,2017-05-02T05:11:10Z,2017-05-02T05:11:10Z,23,365,573,"1. What issue(s) is this pull request related to?
I'm hoping this will address issues with #1624, #1584, #1582, #256 (by not breaking it), and others.
2. What does this change do, exactly?
The HTTP server now always creates a context value on the request which
is a copy of the request's URL struct. It should not be modified by
middlewares, but it is safe to get the value out of the request and make
changes to it locally-scoped. Thus, the value in the context always
stores the original request URL information as it was received. Any
rewrites that happen will be to the request's URL field directly.
The HTTP server no longer cleans /sanitizes the request URL. It made too
many strong assumptions and ended up making a lot of middleware more
complicated, including upstream proxying (and fastcgi). To alleviate
this complexity, we no longer change the request URL. Middlewares are
responsible to access the disk safely by using http.Dir or, if not
actually opening files, they can use httpserver.SafePath().
3. What documentation changes (if any) go along with this PR?
Nothing of note, except instructions for middleware authors:
Middlewares should NOT do this:
os.Open(filepath.Join(siteRoot, filepath.FromSlash(r.URL.Path)))

But this is safe:
jailedDisk := http.Dir(siteRoot)
jailedDisk.Open(r.URL.Path)

If not opening files, you can use SafePath():
httpserver.SafePath(siteRoot, r.URL.Path)

But SafePath() is good for when you don't need to open the file.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, and functions or non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

I'm considering having SafePath() take the entire *http.Request rather than just a string (so right now you have to pass req.URL.Path) - but it's not a big deal.
This is a big change, but the highlights are:

The only context key relevant to path rewriting is httpserver.OriginalURLCtxKey (""original_url"") which stores a copy of the original url.URL value before any middlewares even see the request.
The HTTP server no longer sanitizes paths.
http.Dir or httpserver.SafePath() should be used by middlewares that want to access the disk.
Improved the handling in the static file server as well.
Overall, this should lead to much simpler code and fewer problems. (I hope. Please test.)",4,3
1635,2017-04-30T00:44:25Z,2017-04-30T05:50:00Z,2017-04-30T05:50:00Z,6,25,23,"1. What does this change do, exactly?
Fixed most of the warning presented by running golint ./...
2. Please link to the relevant issues.
None.
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

✅  I have written tests and verified that they fail without my change
✅ I have squashed any insignificant commits
✅ This change has comments for package types, values, functions, and non-obvious lines of code
✅ I am willing to help maintain this change if there are issues with it later

5. Other Notes
There is still some remaining warning, but I'm not sure I agree with them:
caddyhttp/httpserver/mitm.go:612:2: don't use ALL_CAPS in Go names; use CamelCase
caddyhttp/httpserver/mitm.go:613:2: don't use ALL_CAPS in Go names; use CamelCase
caddyhttp/httpserver/mitm.go:614:2: don't use ALL_CAPS in Go names; use CamelCase
caddyhttp/httpserver/mitm.go:615:2: don't use ALL_CAPS in Go names; use CamelCase
caddyhttp/httpserver/mitm.go:616:2: don't use ALL_CAPS in Go names; use CamelCase
caddyhttp/httpserver/mitm.go:617:2: don't use ALL_CAPS in Go names; use CamelCase
caddyhttp/httpserver/mitm.go:618:2: don't use ALL_CAPS in Go names; use CamelCase
caddyhttp/httpserver/mitm.go:619:2: don't use ALL_CAPS in Go names; use CamelCase
caddyhttp/markdown/summary/render.go:27:19: method BlockHtml should be BlockHTML
caddyhttp/markdown/summary/render.go:118:19: method RawHtmlTag should be RawHTMLTag

The using ALL_CAPS warnings in caddyhttp/httpserver/mitm.go is for the cipher suite list, and it is done the same way that the crypto/tls package does it. Any thoughts on this?
And BlockHtml and RawHtmlTag are methods to implement the russross/blackfriday package.",4,3
1637,2017-05-01T02:20:05Z,2017-05-01T14:47:45Z,2017-05-01T14:47:45Z,2,25,1,"1. What does this change do, exactly?
Fixes the path handling on windows when storing the Caddyfile into HiddenFiles
2. Please link to the relevant issues.
Issue #1628
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
1641,2017-05-02T01:20:41Z,2017-05-05T23:36:21Z,2017-05-05T23:36:21Z,2,8,7,"I have just read the LinkHeader spec, found that we should support it more generally, like Apache and Nginx do.
(Thank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.)
1. What does this change do, exactly?
rename context's Push action to AddLink for more general use case.
2. Please link to the relevant issues.
N/A.
3. Which documentation changes (if any) need to be made because of this PR?
Add a new template action for AddLink.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,6
1642,2017-05-02T02:58:48Z,2017-05-02T05:06:45Z,2017-05-02T05:06:45Z,1,50,0,"Signed-off-by: Tw tw19881113@gmail.com
(Thank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.)
1. What does this change do, exactly?
make internalResponseWriter inherit original ResponseWriter's interfaces.
2. Please link to the relevant issues.
N/A.
3. Which documentation changes (if any) need to be made because of this PR?
No.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,3
1644,2017-05-02T08:03:04Z,2017-05-05T15:42:07Z,2017-05-05T15:42:07Z,7,98,209,"Per discussion in #1642
(Thank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.)
1. What does this change do, exactly?
Introduce responseWriterWrapper and SupportedInterfaces for code reuse.
2. Please link to the relevant issues.
N/A.
3. Which documentation changes (if any) need to be made because of this PR?
Maybe we should inform the middleware author how to use them.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,7
1648,2017-05-03T07:37:42Z,2017-05-04T11:17:53Z,2017-05-04T11:17:53Z,1,1,0,"I would like to add my login plugin as an official 3rd party plugin.
It allows the login using multiple backends and plays nicely together with the existing caddy-jwt plugin.
See the README's for more details:
https://github.com/tarent/loginsrv
https://github.com/tarent/loginsrv/tree/master/caddy",5,17
1649,2017-05-05T05:29:09Z,2017-08-24T13:13:54Z,2017-08-24T13:13:54Z,4,232,77,"1. What does this change do, exactly?
This is the beginning of an attempt to make the staticfiles file server
the only middleware that hits the disk and loads content. This may have
unknown implications. But the goal is to reduce duplication without
sacrificing performance. (We now call ServeContent here.)
This change loses about 15% of the req/sec of the old way of doing it,
but this way is arguably more correct since the file server is good at
serving static files; duplicating that logic in every middleware that
needs to hit the disk is not practical.
UPDATE: Performance numbers have been improved back to their
original levels, even slightly better in some cases.
2. Please link to the relevant issues.
#1611
3. Which documentation changes (if any) need to be made because of this PR?
Hopefully none
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

I would like some others to try using this with templates to see if they can uncover any broken scenarios. Also, if anyone would like to help profile to understand why this change is slower, that'd be great. I don't want to merge this in while it's slower.
Before this change (serving the Caddy site's homepage):
$ wrk -t12 -c400 -d10s http://localhost:2015/
Running 10s test @ http://localhost:2015/
  12 threads and 400 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    42.95ms   42.64ms 387.61ms   85.72%
    Req/Sec     0.87k   161.81     1.32k    70.08%
  103478 requests in 10.02s, 0.97GB read
  Socket errors: connect 0, read 279, write 0, timeout 0
Requests/sec:  10330.04
Transfer/sec:     99.45MB

After:
$ wrk -t12 -c400 -d10s http://localhost:2015/
Running 10s test @ http://localhost:2015/
  12 threads and 400 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    57.35ms   66.82ms 653.25ms   86.64%
    Req/Sec   704.43    150.37     1.26k    69.50%
  84314 requests in 10.03s, 811.25MB read
  Socket errors: connect 0, read 280, write 0, timeout 0
Requests/sec:   8409.06
Transfer/sec:     80.91MB

UPDATE: Performance has been improved...",3,10
1651,2017-05-06T00:50:43Z,2017-05-28T14:22:44Z,2017-05-28T14:22:44Z,889,395378,322,"1. What does this change do, exactly?
Vendors all Caddy dependencies. (Plugins not included.)
2. Please link to the relevant issues.
#200, #630, #632, #709, Homebrew/homebrew-core#9233 - probably others too
3. Which documentation changes (if any) need to be made because of this PR?
Remains to be seen. Probably none for most use cases, but this could affect the build server.
The contributing instructions will need to be updated, in case contributors need to change or add dependencies. They'll need to use gvt. (Should be a simple go get to install gvt then gvt fetch -revision to update to a specific version, if not just master.)
4. Checklist
(irrelevant)

This is still an experiment! This is now ready to merge.
I've held out on vendoring on purpose. Before the GO15VENDOREXPERIMENT, there were a variety of third party tools to help with dependency management, but the official go tooling has been ramping up support for vendoring in recent years, and I wanted to see how this would turn out. When the GO15VENDOREXPERIMENT was made official, toolchain support continued to improve and is still continuing to do so even up to Go 1.9. Because of this unstable ecosystem around dependency management and even vendoring specifically, I decided to wait.
Also, the old build server would not have done well with vendoring.
But now, we have new, autonomous build infrastructure. It runs standard go and git commands. The go command now respects the vendor/ folder and ""just works"" with go get. I'm hoping this will all work together to make reproducible builds possible.
Yes, this change adds 846 889 files and 391,183 395,378 lines of code to the repo. 😬
This PR has no consideration for plugins; I don't intend for this initial step to make Caddy builds with third-party plugins reproducible as well. It's possible that they could vendor their own dependencies but that requires a lot more experimenting; I want to make sure we don't run into problems like this: https://github.com/mattfarina/golang-broken-vendor -- but it is on my list to figure out eventually.
I will be experimenting with reproducing Caddy builds using this branch, and I ask anyone else interested in this to try it out as well. Before taking this step, we want to make sure we get it right!
(Note to reviewers: Obviously, you don't have to review all the changed files, as these are not part of the Caddy project! The reviews should be focused on our approach to vendoring and achieving reproducible builds. So it's not a normal code review, in that sense.)
TODO:

 Add https://github.com/FiloSottile/vendorcheck as a CI check",10,25
1653,2017-05-06T22:28:01Z,2017-05-08T16:32:15Z,2017-05-08T16:32:15Z,1,2,1,"1. What does this change do, exactly?
Adds the second args ...interface{} parameter to the version of Include used with the Markdown plugin. This allows arguments to included templates when using that plugin.
2. Please link to the relevant issues.
3. Which documentation changes (if any) need to be made because of this PR?
I don't think this will require any changes. The documentation already implies that passing arguments to included templates should be possible.
4. Checklist

 I have written tests and verified that they fail without my change - the file is untested at the moment and the change is pretty trivial, I can write tests if necessary, though.
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,3
1654,2017-05-07T03:54:38Z,2017-05-09T03:16:19Z,2017-05-09T03:16:19Z,1,10,4,"fix issue #1652
Signed-off-by: Tw tw19881113@gmail.com
(Thank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.)
1. What does this change do, exactly?
Fix TestWebSocketReverseProxyServeHTTPHandler failure.
2. Please link to the relevant issues.
#1652
3. Which documentation changes (if any) need to be made because of this PR?
N/A.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
1656,2017-05-08T08:40:14Z,2017-05-08T17:39:11Z,2017-05-08T17:39:11Z,11,363,143,"(Thank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.)
1. What does this change do, exactly?

Replace original maxrequestbody directive.
Add request header limit.

2. Please link to the relevant issues.
#1587
3. Which documentation changes (if any) need to be made because of this PR?
Add documentation for new directive limits, note the old maxrequestbody directive is replaced.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
1664,2017-05-11T08:21:07Z,2017-05-12T00:10:50Z,2017-05-12T00:10:50Z,2,24,8,"(Thank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.)
1. What does this change do, exactly?
support additional prefix/suffix with predefined format
2. Please link to the relevant issues.
#1663
3. Which documentation changes (if any) need to be made because of this PR?
Add document for this in log directive.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,4
1665,2017-05-11T14:12:35Z,,2017-06-01T00:57:40Z,2,54,8,"1. What does this change do, exactly?
It adds support for using an IDN as a site address in Caddyfiles. Instead of writing xn--bcher-kva.ch. it's now possible to write bücher.ch.
Ref: https://www.wikiwand.com/en/Internationalized_domain_name
2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
Could add a note in site address section
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,3
1667,2017-05-12T09:17:19Z,2017-06-01T12:18:08Z,2017-06-01T12:18:08Z,2,79,48,"1. What does this change do, exactly?
Symbolic links pointing to a directory will show as directory instead if file.
2. Please link to the relevant issues.
#1660
3. Which documentation changes (if any) need to be made because of this PR?
https://caddyserver.com/docs/browse
Update examples and line numbers for ""this struct type""-link
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

I need to add some tests but I'll start with this to see if I'm on the right track :)",2,4
1672,2017-05-15T19:08:53Z,2017-05-17T15:51:59Z,2017-05-17T15:51:59Z,2,24,29,"1. What does this change do, exactly?
This will add a check for maximum number of arguments to the log directive. If len(args) > 3 it will return an error. This can happen when having unmatched number of quotes.
2. Please link to the relevant issues.
#1668
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
1675,2017-05-16T04:20:15Z,2017-05-17T16:45:17Z,2017-05-17T16:45:17Z,3,52,18,"1. What does this change do, exactly?
This PR allows Caddy to automatically detect the presence of absence of the AES-NI instruction set. If it is present, Caddy's normal cipher suites will be used. If AES-NI is not supported, ChaCha20 suites will be preferred over the slow, possibly not constant-time AES support that the Go runtime will use instead.
2. Please link to the relevant issues.
#1674
3. Which documentation changes (if any) need to be made because of this PR?
None required.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,4
1676,2017-05-16T10:54:41Z,2017-05-17T15:57:11Z,2017-05-17T15:57:12Z,5,8,8,"1. What does this change do, exactly?
Renames MaxBytesExceededErr to ErrMaxBytesExceeded and make golint happier :)
Ref: https://ci.appveyor.com/project/mholt/caddy/build/2811#L87
2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,1
1678,2017-05-16T21:55:13Z,2017-05-17T15:57:57Z,2017-05-17T15:57:57Z,1,7,7,"1. What does this change do, exactly?
Corrects a few comment issues in proxy policy.
2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
N/A
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,0
1679,2017-05-17T12:39:51Z,2017-05-17T16:46:58Z,2017-05-17T16:46:58Z,2,86,12,"1. What does this change do, exactly?
Add a new load balancer policy based on URI hashing. It reuses most code from the IP hash policy. Later this can be extended with a length and depth parameter (ref).
2. Please link to the relevant issues.
#1463
3. Which documentation changes (if any) need to be made because of this PR?
Add new policy to https://caddyserver.com/docs/proxy
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,4
1682,2017-05-22T06:31:57Z,2017-06-28T05:03:00Z,2017-06-28T05:03:00Z,13,212,98,"This implements the control of markdown's template as said in this comment.
While working with this issue, I found that markdown's tests won't failed even its template file is missing.
After tracking this down, this issue even exists dating back to ac4fa2c, it seems missed markdown's testdata when migrating.
(Thank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.)
1. What does this change do, exactly?
add template control option and fix fake tests issue.
2. Please link to the relevant issues.
#1445
3. Which documentation changes (if any) need to be made because of this PR?
we should inform the user about this option.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,8
1688,2017-05-25T10:53:53Z,2017-05-25T12:01:24Z,2017-05-25T12:01:24Z,2,18,8,"(Thank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.)
1. What does this change do, exactly?
It de-duplicates a bunch of code, makes it easier to make changes later to a matcher and not have to remember to also change it's inverse-matcher. This also implements the missing not_ends_with comparator.
2. Please link to the relevant issues.
3. Which documentation changes (if any) need to be made because of this PR?
https://caddyserver.com/docs/rewrite#if will need to list not_ends_with
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,3
1691,2017-05-26T17:34:04Z,2017-06-28T21:54:29Z,2017-06-28T21:54:29Z,2,95,20,"1. What does this change do, exactly?
Checks for a given string in the content response from a backend.
2. Please link to the relevant issues.
#324
3. Which documentation changes (if any) need to be made because of this PR?
In http.proxy:
http_check_contentstring a string to search for in the content response from the backend.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,13
1692,2017-05-26T18:27:50Z,2017-06-03T13:28:16Z,2017-06-03T13:28:16Z,3,5,5,Add ExtraInfo to EventHook.,3,2
1693,2017-05-27T07:27:36Z,2017-06-03T15:34:14Z,2017-06-03T15:34:14Z,1,1,0,,6,15
1694,2017-05-28T21:23:11Z,2017-05-30T15:57:25Z,2017-05-30T15:57:25Z,1,1,0,"1. What does this change do, exactly?
New directive for the http server type called grpc
2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
No document changes needed. Link to plugin's documentation --> here",3,4
1695,2017-05-30T21:44:23Z,2017-05-31T00:29:28Z,2017-05-31T00:29:28Z,1,1,5,"1. What does this change do, exactly?
Cleans up some redundant code in the gzip initialization code.
Specifically, gzip.NewWriter calls gzip.NewWriterLevel with the compression level gzip.DefaultCompression.
This code otherwise functions similarly to the previous code.
2. Please link to the relevant issues.
n/a
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,2
1696,2017-05-31T19:26:58Z,2017-06-15T22:45:43Z,2017-06-15T22:45:43Z,2,35,58,"1. What does this change do, exactly?
As there were some inconsistencies with if conditions in rewrite directives (conditions not having the not_cond counterpart, like starts_with, fixed by Taylor here, but also ends_with, which is not yet ""fixed""), I took a stab at adding a not unary operator to if conditions. This change adds support for conditions like not a cond b, which is equivalent with a not_cond b.
All not_cond conditions were left unchanged and still work.
Please note that this is my first ever golang contribution, so there might be some non go idiomatic bits.
2. Please link to the relevant issues.
#1687
3. Which documentation changes (if any) need to be made because of this PR?
The rewrite directive documentation at https://caddyserver.com/docs/rewrite#if-conditions needs updating, I'll do it if this gets merged.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,13
1699,2017-06-01T15:43:43Z,2017-06-24T18:10:45Z,2017-06-24T18:10:45Z,2,46,0,"1. What does this change do, exactly?
This change adds an optional ca option to the tls directive, which lets you specify an ACME endpoint within the Caddyfile.
2. Please link to the relevant issues.
#1689
3. Which documentation changes (if any) need to be made because of this PR?
The new option should be added at https://caddyserver.com/docs/tls
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,3
1700,2017-06-02T09:35:11Z,2017-06-06T15:23:01Z,2017-06-06T15:23:01Z,1,10,1,"…r to avoid vendoring/version mismatches in Caddy plugins; see Caddy issue #1697
(Thank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.)
1. What does this change do, exactly?
I introduced Caddys own ChallengeProvider type, which should be used over acme.ChallengeProvider directly to avoid vendoring and version conflicts. This change was suggested in the linked issue.
2. Please link to the relevant issues.
#1697
3. Which documentation changes (if any) need to be made because of this PR?
None as far as I can tell
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,4
1702,2017-06-03T16:19:59Z,2017-06-24T18:15:13Z,2017-06-24T18:15:13Z,1,5,0,"(Thank you for contributing to Caddy! Please fill this out to help us make the most of your pull request.)
1. What does this change do, exactly?
This updates the systemd unit to configure the use of SIGQUIT to trigger a graceful shutdown when the service is stopped.
2. Please link to the relevant issues.
I didn't create an issue for this, but I did look at open issues matching ""systemd"", and none of them appeared to be relevant.
3. Which documentation changes (if any) need to be made because of this PR?
The exact behavior of systemctl start caddy, systemctl reload caddy, and systemctl stop caddy are not currently discussed in the README. This modification does not, in my opinion, violate the principle of least surprise for the behavior of systemctl stop caddy.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,2
1703,2017-06-04T04:20:46Z,2017-06-04T18:32:58Z,2017-06-04T18:32:58Z,1,1,1,"""$(which caddy)"" is not work at system startup.
After this change, I can run ""insserv -d caddy"" to start caddy automatically on boot.",4,2
1709,2017-06-09T09:37:42Z,2017-06-24T18:17:07Z,2017-06-24T18:17:07Z,1,1,1,"…‘Server’ response-header field
1. What does this change do, exactly?
Sets the variable caddy.AppName as replacement for the fixed string Caddy as value for the Server-header-field which is tracked down to the const variable caddymain.appName which value is also Caddy. In summary not a change at all but enables someones custom caddy build to overwrite the caddy.AppName and thus the Server Reponse-Header-Field to some custom (dynamic) value without writing a plugin to have more options for e.g. the header directive.
2. Please link to the relevant issues.
n/a
3. Which documentation changes (if any) need to be made because of this PR?
n/a
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,2
1711,2017-06-10T07:08:58Z,2017-06-24T20:54:36Z,2017-06-24T20:54:36Z,12,346,1,"1. What does this change do, exactly?
Provides a request_id directive which when present in Caddyfile will populate a {request_id} placeholder which can then be used to follow a request through proxies etc.
2. Please link to the relevant issues.
This implements #1590
3. Which documentation changes (if any) need to be made because of this PR?
I will add documentation to Caddyserver for this.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

Other details
I use a third party library to generate the UUID used as the request id.  With Vendor inclusion we may need to judge if this is the right library to uses.
Caddyfile example
courgette.kinchik.ie{
  
  gzip
  log / d:\caddy\logs\courgettelog.log   ""[{when}] {request_id} {path}  {uri}"" 
  root d:\Development\websites\courgette
  browse 
  
  # add upstream header with request_id
  header /  ""X-Request-Id"" {request_id}

  # Switch on request_id generation
  request_id 

}

if request_id is not present {request_id} will be blank
I am not sure whether tests are required.",3,12
1716,2017-06-15T12:07:08Z,2017-06-24T21:42:41Z,2017-06-24T21:42:41Z,1,1,0,"1. What does this change do, exactly?
The directive reauth has been added to allow configuration of the plugin caddy-reauth.
2. Please link to the relevant issues.
This pull request is not related with an existing issue.
3. Which documentation changes (if any) need to be made because of this PR?
Add documentation for new directive reauth
4. Checklist

 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,17
1719,2017-06-16T08:56:52Z,,2017-08-12T16:58:49Z,1,0,2,"The previous setting caused the service to hit a rate-limit when it was
restarted more than 5 times in 24h.
Editing the Caddyfile and restarting the service could also easily
trigger this rate limit.
One could argue that users could simply call systemctl reset-failed caddy to reset the rate-limit counter, but this is counterintuitive
because most users won't know this command and are possibly unaware that
they had hit a rate-limit.
The service is now allowed to restart 10 times in 10 seconds before
hitting a rate limit.
This should be conservative enough to rate limit quickly failing
services and to allow users to edit and test their caddy configuration.
This closes #1718",5,26
1720,2017-06-16T15:34:20Z,,2017-07-10T21:34:32Z,1,1,0,"1. What does this change do, exactly?
A middleware makes request to path (some what) case insensitive.
2. Please link to the relevant issues.
#569
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",6,9
1725,2017-06-20T15:39:24Z,2017-06-24T21:58:34Z,2017-06-24T21:58:34Z,1,1,0,"1. What does this change do, exactly?
Adds the gopkg plugin to Caddy.
2. Please link to the relevant issues.
NA
3. Which documentation changes (if any) need to be made because of this PR?
None necessary, however I can contribute to https://caddyserver.com/docs/http.gopkg if desired.
4. Checklist

 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,10
1727,2017-06-24T19:54:29Z,2017-06-24T20:55:37Z,2017-06-24T20:55:37Z,1,3,3,"1. What does this change do, exactly?
AppVeyor fails randomly, this PR fixes this issue (https://ci.appveyor.com/project/mholt/caddy/build/2930)
--- FAIL: TestListenerAddrEqual (0.00s)
	caddy_test.go:156: Test 6 (127.0.0.1:1234 == 127.0.0.1:1234): expected false but was true
FAIL
FAIL	github.com/mholt/caddy	0.068s
Command exited with code 1

2. Please link to the relevant issues.
see #1711
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,1
1731,2017-06-27T18:34:50Z,2017-06-28T15:06:32Z,2017-06-28T15:06:32Z,5,167,40,"1. What does this change do, exactly?
This PR addresses #1728 and provides a new rotate_compress option for log and errors directive to the Caddyfile, which will enable gzip compression for rotated log files.
It also updates the Lumberjack package dependencies in the vendor directory, and adds go-syslog, which was not present in vendor and was breaking tests when this was not present.
2. Please link to the relevant issues.
#1728
3. Which documentation changes (if any) need to be made because of this PR?
caddyserver/website#18
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,3
1734,2017-06-29T10:37:47Z,2017-06-29T14:28:58Z,2017-06-29T14:28:58Z,1,4,5,"Signed-off-by: Tw tw19881113@gmail.com

1. What does this change do, exactly?
remove unnecessary returns after Fatal and fix the real  ineffectual assignments.
2. Please link to the relevant issues.
The last commit in pr #1682 .
3. Which documentation changes (if any) need to be made because of this PR?
N/A.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
1739,2017-06-30T21:39:29Z,2017-07-18T18:52:54Z,2017-07-18T18:52:54Z,9,152,729,"1. What does this change do, exactly?
Reverts FastCGI to remove persistent connection pool.
This is a direct revert to the commit before the introduction of persistent connections, with attempts to add the features introduced after persistent connections.
Because the newer features are tightly coupled with persistent connections dialer, some rewrite had to take place but they are still direct port of the features.
2. Please link to the relevant issues.
#1736
3. Which documentation changes (if any) need to be made because of this PR?
fastcgi. pool config will be removed.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,8
1740,2017-07-02T13:05:57Z,2017-07-10T22:20:31Z,2017-07-10T22:20:31Z,1,32,32,"1. What does this change do, exactly?

uses more of the builtin functionality for starting and stopping of the process by using command and command_args along with procname
removed -f from daemon as this was hiding error message that were sent to stdout on startup, now writing stdout to the logfile directly

for example, this was being hidden:
“Activating privacy features.. [www.domain.com] failed to get certificate: Error presenting token: Could not find the start of authority”
it now shows up in the log


aded “caddy_env” to allow the setting of environment variables that caddy might need, for example when setting creds for “DNS Challenge”


added a check to ensure caddy_config_path file exists


2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
None! Documented in the init script
4. Checklist

 I have written tests and verified that they fail without my change
 This change has comments for package types, values, functions, and non-obvious lines of code
 I have squashed any insignificant commits
 I am willing to help maintain this change if there are issues with it later",3,2
1747,2017-07-05T10:22:01Z,2017-07-24T20:00:28Z,2017-07-24T20:00:28Z,4,72,3,"1. What does this change do, exactly?
Send the push resources for /index.html when requesting the root/home page /
2. Please link to the relevant issues.
Fix #1744
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,9
1748,2017-07-05T20:10:28Z,2017-07-06T07:46:20Z,2017-07-06T07:46:20Z,2,3,0,"1. What does this change do, exactly?
Implements the 'when_unix' placholder and add a test. The timestamp for the test is taken from running  time.MOCKDATE.Unix() and putting the result in place.
2. Please link to the relevant issues.
#1745
3. Which documentation changes (if any) need to be made because of this PR?
https://caddyserver.com/docs/placeholders should be updated with the new placeholder
4. Checklist

 I have written tests and verified that they fail without my change -> I am new to golang. Could you point me to where I can learn how to run the test? I was not able to run them with go test in caddyhttp/httpserver/.
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,5
1751,2017-07-07T15:42:07Z,2017-07-10T20:44:08Z,2017-07-10T20:44:08Z,4,73,10,"1. What does this change do, exactly?
Add a new proxy policy which routes to upstream based on the hash of a given request header's value.
Example:
proxy {
  policy header My-Header
}

This also changes the Policy registration process to allow policies to receive a single optional string argument.
2. Please link to the relevant issues.
#1463
3. Which documentation changes (if any) need to be made because of this PR?
The new policy would need added at https://caddyserver.com/docs/proxy
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,2
1752,2017-07-07T18:47:18Z,2017-07-11T15:43:57Z,2017-07-11T15:43:57Z,1,1,0,Add webdav directive for webdav plugin! 😄,3,5
1754,2017-07-08T04:08:44Z,2017-07-08T20:20:44Z,2017-07-08T20:20:44Z,2,3,3,"1. What does this change do, exactly?
Simply correct the message showed when tests fail.
2. Please link to the relevant issues.
Not yet.
3. Which documentation changes (if any) need to be made because of this PR?
No documentation need to be changed.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,3
1757,2017-07-09T08:56:08Z,2017-07-10T20:47:49Z,2017-07-10T20:47:49Z,2,2,2,"Following #1711 I caused confusion by using requestid and request_id.  I have changed all instances to request_id including the name of the folder.
Caddyfile now is like this
request_id
header /  ""X-Request-Id"" {request_id}

This is a breaking change for next release.
I will update documentation also caddyserver/website#22",3,7
1759,2017-07-12T12:27:30Z,2017-07-13T11:28:01Z,2017-07-13T11:28:01Z,1,1,0,"After a long time I finally think caddy-cache is ready to be published. It does not have every feature I want but I think it handles the basic thinks it needs to support:

it handles Vary header
it handles correct usage of cache headers with the help of https://github.com/pquerna/cachecontrol
it handles locking and concurrency (if two request gets the server at the same time, there will be only one fetch to upstream and both original requests will get the response at the same time without having to wait until the upstream request ends)

What do you think?
1. What does this change do, exactly?
Adds a middleware for http caching
2. Please link to the relevant issues.
#10
3. Which documentation changes (if any) need to be made because of this PR?
It needs a new section for the new cache directive
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,8
1760,2017-07-12T15:07:31Z,2017-07-13T01:32:25Z,2017-07-13T01:32:25Z,1,3,2,"1. What does this change do, exactly?
remove magic number by method call. :)
/cc @mholt
2. Please link to the relevant issues.
No.
3. Which documentation changes (if any) need to be made because of this PR?
No.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
1767,2017-07-16T00:32:46Z,2017-07-17T18:39:07Z,2017-07-17T18:39:07Z,1,2,1,"1. What does this change do, exactly?
It adds nobots directive used in nobots plugin
2. Please link to the relevant issues.
There is no issue
3. Which documentation changes (if any) need to be made because of this PR?
There is no changes
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,2
1775,2017-07-20T07:36:41Z,2017-07-20T20:19:17Z,2017-07-20T20:19:17Z,5,52,19,"Signed-off-by: Tw tw19881113@gmail.com

1. What does this change do, exactly?
Revise log and error roller parser.

Each subdirective must be on its own line.
rotate_compress subdirective doesn't accept any parameter.

2. Please link to the relevant issues.
#1761
3. Which documentation changes (if any) need to be made because of this PR?
N/A.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,0
1777,2017-07-25T07:21:36Z,2017-07-25T15:59:43Z,2017-07-25T15:59:43Z,2,49,1,"Signed-off-by: Tw tw19881113@gmail.com

1. What does this change do, exactly?
When proxying to a chunked websocket server, we will hang when closing the response's body because underlying connection isn't closed. Now we defer this action until the proxying is finished.
2. Please link to the relevant issues.
#1316
3. Which documentation changes (if any) need to be made because of this PR?
N/A.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,1
1779,2017-07-25T19:01:59Z,2017-07-25T21:35:52Z,2017-07-25T21:35:52Z,2,47,0,"1. What does this change do, exactly?
Fixes a panic in some cases when checking version of software from User-Agent string
2. Please link to the relevant issues.
https://caddy.community/t/runtime-error-slice-bounds-out-of-range/2387?u=matt
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,1
1781,2017-07-25T20:13:23Z,2017-07-26T01:55:15Z,2017-07-26T01:55:15Z,1,12,6,"1. What does this change do, exactly?
Adds global FallbackHosts for vhost matching instead of hardcoded values.
Makes it possible for plugins and directives to change the list of FallbackHosts.
2. Please link to the relevant issues.
None
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
1782,2017-07-26T09:51:48Z,2017-09-12T01:49:03Z,2017-09-12T01:49:03Z,9,217,3,"1. What does this change do, exactly?
Adds QUIC proxy support for upstream connections.
2. Please link to the relevant issues.
#999
3. Which documentation changes (if any) need to be made because of this PR?
Yes, updating the proxy command in Caddyfile to include a QUIC scheme: quic://. This is identical to https:// but using QUIC.
Using this feature does not require the proxy to use the -quic flag, but the server still has to!
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

I will write tests at a later point (September maybe).
Note: when updating go-quic, h2quic.QuicRoundTripper should change to
h2quic.RoundTripper",5,26
1787,2017-07-28T10:00:28Z,2017-07-28T15:19:01Z,2017-07-28T15:19:01Z,1,2,2,,2,0
1789,2017-07-28T16:06:33Z,2017-07-28T17:53:22Z,2017-07-28T17:53:22Z,1,4,1,"1. What does this change do, exactly?
Closes #1788
2. Please link to the relevant issues.
#1788
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
1796,2017-07-30T21:57:17Z,2017-08-12T21:17:28Z,2017-08-12T21:17:28Z,4,194,150,"1. What does this change do, exactly?


Fixes bug caused by Replacer running on the regular expressions in IfMatcher. We also now compile regular expressions up front to detect errors.


Fixes rewrite bugs that come from formatting a rule as a string and failing with nil dereference caused by embedding Regexp pointer in a Rule. Re: Issue #1794


2. Please link to the relevant issues.
#1794
3. Which documentation changes (if any) need to be made because of this PR?
It might be good to update the docs to let users know that they cannot use replacement vars in regular expressions.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,2
1798,2017-07-31T09:34:42Z,2017-08-29T01:38:30Z,2017-08-29T01:38:30Z,4,210,14,Addresses #1717,3,8
1799,2017-08-01T22:05:15Z,2017-08-05T00:20:01Z,2017-08-05T00:20:01Z,1,1,1,"1. What does this change do, exactly?
The freebsd init will fail in precmd because the path is wrong.
2. Please link to the relevant issues.
There is none, yet.
3. Which documentation changes (if any) need to be made because of this PR?
No
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
1800,2017-08-02T05:44:06Z,2017-08-02T15:32:37Z,2017-08-02T15:32:37Z,2,3,3,"1. What does this change do, exactly?
Makes exit codes different for different exit reasons.
2. Please link to the relevant issues.
abiosoft/caddy-docker#65
3. Which documentation changes (if any) need to be made because of this PR?
The CLI page should include a description of the exit codes.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

New code explanations:
0: normal or expected exit
1: error before server finished starting
2: double SIGINT (force quit)
3: error stopping with SIGQUIT
4: shutdown callback(s) returned error(s)",3,2
1817,2017-08-10T11:08:17Z,2017-08-12T15:28:06Z,2017-08-12T15:28:06Z,1,1,0,"Add 'jekyll' plugin, which will be released soon 😄",3,1
1818,2017-08-10T20:13:49Z,2017-08-12T15:28:54Z,2017-08-12T15:28:54Z,1,1,0,Add the awses plugin (wrapping up the README and documentation first).,3,4
1821,2017-08-12T06:19:37Z,2017-08-23T18:26:02Z,2017-08-23T18:26:02Z,2,46,16,"https://caddy.community/t/random-ocsp-response-errors-for-random-clients/2473?u=matt
Certificates are keyed by name in the cache, optimized for fast lookups
during TLS handshakes using SNI. A more ""correct"" way that is truly a
1:1 would be to cache certificates by a hash of the leaf's DER bytes,
but this involves an extra index to maintain. So instead of that, we
simply choose to prevent overlap when keying certificates by server
name. This avoids the ambiguity when updating OCSP staples, for instance.
(The fillCertFromLeaf changes are just cleanup, not actually related to the bug.)",2,1
1823,2017-08-13T12:14:34Z,2017-08-13T15:46:27Z,2017-08-13T15:46:27Z,1,1,3,"This is a follow up to #1719
In short, we are now using systemd's restart limit default that is 5 allowed service restarts in 10 seconds and the restart directive was changed to on-abnormal, i.e. it won't restart on non-zero exit codes (e.g. on a bad Caddyfile).",3,3
1832,2017-08-18T12:38:29Z,,2018-03-27T02:10:08Z,9,41,47,"Sets the NOFILE rlimit if not set to the minimal required value.
Offers a commandline option for setting a custom NOFILE rlimit value.
Signed-off-by: Philipp Deppenwiese zaolin@das-labor.org

1. What does this change do, exactly?
Sets the NOFILE rlimit for unix operating systems. Normally this could be done as well by
the init system. The problem comes with non systemd OS and privilege separation if used.
This patch sets the default rlimit to 8192 instead of log a warning and offers the ability to set
a custom NOFILE rlimit value via ""rlimit"" commandline option.
It does checks for the UID in order to figure out if the resource capability is enabled. In general
golang does not support capabilities and privilege separation (see issue golang/go#1435 ) until now.
Remove unneccessary NOFILE limits in init scripts for posix operating systems.
2. Please link to the relevant issues.



3. Which documentation changes (if any) need to be made because of this PR?
An additional commandline option needs to be documented. See https://caddyserver.com/docs/cli
-rlimit
Sets the open file descriptors limit for the caddy process. Default limit is 8192. For non-root user
usage please refer to setcap. The resource capability can be set by executing:
sudo setcap cap_sys_resource+ep caddy

4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,11
1833,2017-08-18T15:03:35Z,2017-08-18T17:43:52Z,2017-08-18T17:43:52Z,1,8,7,"1. What does this change do, exactly?
Adds forwardproxy to directives' list
2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
ASAIK, the documentation for plugins is handled at registration.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,4
1842,2017-08-27T11:31:22Z,,2017-09-02T22:18:26Z,4,12,3,"1. What does this change do, exactly?

Add the 'command' plugin
Register a new Event Hook CertRenewEvent
Register a new Event Hook InstanceStartupEvent

2. Please link to the relevant issues.
#1698
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,12
1848,2017-08-29T19:53:42Z,2017-08-29T22:04:36Z,2017-08-29T22:04:36Z,1,6,1,"1. What does this change do, exactly?
Make filename column fill out extra space
2. Please link to the relevant issues.
3. Which documentation changes (if any) need to be made because of this PR?
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
1852,2017-09-01T04:34:09Z,2017-09-02T04:15:53Z,2017-09-02T04:15:54Z,2,21,1,"1. What does this change do, exactly?
As described in #1846, many PHP apps depend on the SCRIPT_NAME CGI environment variable. The Caddy FastCGI plugin sets SCRIPT_NAME to roughly what would be expected by NGINX (essentially, a path to the script relative to the URL.) Unfortunately, when using path-based routing with VHosts, the path prefix gets lost, leading to PHP software such as phpBB and anything else depending on Symphony's requestUri logic failing (and probably more stuff too.)
This patch does exactly one thing: it finds the path prefix via the request context and prepends it to the calculated SCRIPT_NAME. That's it. This simple change seems to be all you need to do in the circumstances I was able to think of.
2. Please link to the relevant issues.
This patch affects #1846.
3. Which documentation changes (if any) need to be made because of this PR?
I don't believe any changes need to be made, since this simply brings Caddy's behavior into accordance with what one would expect from any other FastCGI server.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,2
1856,2017-09-04T13:50:48Z,2017-09-06T12:59:55Z,2017-09-06T12:59:55Z,2,53,2,Fixes #1809,2,0
1857,2017-09-06T05:24:23Z,2017-09-06T12:33:49Z,2017-09-06T12:33:49Z,2,2,2,"… use strconv.Itoa instead of strconv.FormatInt

1. What does this change do, exactly?
should use bytes.Contains(content, []byte(""FAILED"")) instead and should use strconv.Itoa instead of strconv.FormatInt
2. Please link to the relevant issues.
NONE
3. Which documentation changes (if any) need to be made because of this PR?
NONE
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,2
1861,2017-09-08T13:03:35Z,2017-09-08T17:04:10Z,2017-09-08T17:04:10Z,3,57,3,"1. What does this change do, exactly?
When checking if one path matches another using Path.Matches(), call path.Clean() on the paths to compress/merge multiple slashes. Note that it does NOT effectively match paths where p == ""/foo"" and base == ""//foo"" (this will be a match even though it looks like it shouldn't be) - however I think this is not a concern, as removing slashes is rare... also note that this change doesn't mutilate the request URI at all, it's only a side-effect-less change for path matching. It should fix an issue for all middlewares that use path.Matches. If they use their own path matcher, though, they're on their own...
2. Please link to the relevant issues.
#1859
3. Which documentation changes (if any) need to be made because of this PR?
Maybe a note somewhere that multiple slashes are merged for path matching, similar to nginx's location block, assuming merge_slashes is NOT off.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

/cc @hstaugaard @magikstm",3,1
1864,2017-09-12T19:59:28Z,2017-10-01T17:24:50Z,2017-10-01T17:24:50Z,25,1096,218,"1. What does this change do, exactly?

Implement the 'on' plugin

2. Please link to the relevant issues.
#1698, #1842
3. Which documentation changes (if any) need to be made because of this PR?

Add documentation for on

4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,15
1866,2017-09-13T18:11:14Z,2017-09-15T03:42:23Z,2017-09-15T03:42:23Z,2,0,6,"1. What does this change do, exactly?
Reverts the recent change to add sponsor headers to HTTP responses. I'm opening this PR here in the hope we can discuss undoing this recent addition. Ref WedgeServer#2 and the HN post.
You're of course free to simply close this PR immediately, but I really hope you'll consider feedback from the community (especially on HackerNews) regarding this change before doing so.
2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
N/A
4. Checklist

N/A I have written tests and verified that they fail without my change
N/A I have squashed any insignificant commits
N/A This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",7,6
1867,2017-09-13T22:06:04Z,,2018-08-16T17:05:55Z,13,1524,0,"1. What does this change do, exactly?
It adds a digestauth directive that works exactly like basicauth and implements (guess what) digest authentication.
2. Please link to the relevant issues.
#712
3. Which documentation changes (if any) need to be made because of this PR?
Add the digestauth directive and deprecate advise against basic authentication for security reasons.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",6,10
1868,2017-09-14T06:51:33Z,2017-09-16T15:48:28Z,2017-09-16T15:48:28Z,1,1,1,,4,4
1869,2017-09-14T09:52:39Z,2017-09-23T00:10:49Z,2017-09-23T00:10:49Z,2,47,2,"Signed-off-by: Tw tw19881113@gmail.com

1. What does this change do, exactly?
We exit proxying immediately when websocket backend shutdowns,
2. Please link to the relevant issues.
#1840
3. Which documentation changes (if any) need to be made because of this PR?
N/A
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,1
1875,2017-09-15T07:33:33Z,2017-09-16T15:35:59Z,2017-09-16T15:35:59Z,1,1,1,"1. What does this change do, exactly?
Fixed build instruction : #1843 (comment)
2. Please link to the relevant issues.
#1843
3. Which documentation changes (if any) need to be made because of this PR?
Build Instruction
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
1879,2017-09-16T21:34:40Z,2017-10-01T17:25:31Z,2017-10-01T17:25:31Z,2,7,3,"1. What does this change do, exactly?

Register a new Event Hook CertRenewEvent

2. Please link to the relevant issues.
#1864
3. Which documentation changes (if any) need to be made because of this PR?
/
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,1
1880,2017-09-16T22:05:10Z,2017-10-02T02:41:46Z,2017-10-02T02:41:46Z,2,84,87,"1. What does this change do, exactly?
Startup/Shutdown will be deprecated, create an alias.....
2. Please link to the relevant issues.
#1864
3. Which documentation changes (if any) need to be made because of this PR?
Add Startup/Shutdown directives will be removed in a later version. Please migrate to ""on startup/shutdown"" to https://caddyserver.com/docs/startup https://caddyserver.com/docs/shutdown
`
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,3
1883,2017-09-18T17:17:36Z,,2017-09-23T00:11:48Z,1,10,5,"…esponse with a status code indicating an error.

1. What does this change do, exactly?
Updated the fastcgi middleware to now return an error status code as long as the http response from the fastcgi server indicates an error, along with the response body as the error.
2. Please link to the relevant issues.
#1882
3. Which documentation changes (if any) need to be made because of this PR?
Don't think so
4. Checklist

 I have written tests and verified that they fail without my change
[ x] I have squashed any insignificant commits
[ x] This change has comments for package types, values, functions, and non-obvious lines of code
[ x] I am willing to help maintain this change if there are issues with it later",3,3
1884,2017-09-18T23:20:57Z,2017-09-22T14:45:56Z,2017-09-22T14:45:56Z,1,2,1,"1. What does this change do, exactly?
Fixes two issues with the dist/init/linux-sysvinit/caddy init script, specifically it fixes an issue where the log isn't created and secondly it fixes a spurious error in the log file because the daemon user isn't responsible for writing the pid file.
2. Please link to the relevant issues.
None as far as I am aware.
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

[N/A] I have written tests and verified that they fail without my change
[Yes] I have squashed any insignificant commits
[N/A] This change has comments for package types, values, functions, and non-obvious lines of code
[Yes] I am willing to help maintain this change if there are issues with it later",4,3
1888,2017-09-20T06:46:57Z,2017-10-02T02:36:23Z,2017-10-02T02:36:23Z,3,10,3,"1. What does this change do, exactly?
Provides a new hook that plugins can use to gain access to the caddy.Instance. This is particularly important to allow plugins the ability to dynamically generate a new Caddyfile and reload the server with the new configuration.
With this change in place a plugin could access the instance as follows:
func init() {
	caddy.RegisterEventHook(""sampleinithook"", SampleInitHook)
}

func SampleInitHook(eventType caddy.EventName, eventInfo interface{}) error {
	if eventType != caddy.InstanceStartupEvent {
		return nil
	}

	instance, ok := eventInfo.(*caddy.Instance)
	if !ok {
		return errors.New(""Invalid eventInfo provided for caddy.InstanceStartupEvent event"")
	}

	// save the instance for later use and/or do something useful with it here
}
2. Please link to the relevant issues.

Wiki documents this as a TODO: https://github.com/mholt/caddy/wiki/Writing-a-Plugin:-Caddyfile-Loader#dynamic-reloads
Community discussion: https://caddy.community/t/dynamically-load-caddy-file/357/11

3. Which documentation changes (if any) need to be made because of this PR?

Caddyfile Loader: https://github.com/mholt/caddy/wiki/Writing-a-Plugin:-Caddyfile-Loader#dynamic-reloads

4. Checklist

 I have written tests and verified that they fail without my change - I have verified existing tests pass but it appears the events are not currently included in tests and I see no obvious way to add tests for this case
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,7
1902,2017-10-02T05:25:54Z,2017-10-03T13:18:30Z,2017-10-03T13:18:30Z,1,1,1,"1. What does this change do, exactly?
This PR formats the code using gofmt
2. Please link to the relevant issues.
/
3. Which documentation changes (if any) need to be made because of this PR?
/
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,2
1906,2017-10-06T17:32:34Z,2017-10-29T21:13:11Z,2017-10-29T21:13:11Z,13,110,24,"1. What does this change do, exactly?
Adds per-site index capability while maintaining the a list of possible index file names
2. Please link to the relevant issues.
Fixes #1801
3. Which documentation changes (if any) need to be made because of this PR?
The index plugin docs. Currently it's not clear whether it's per-site or not, which is what the linked issue is about.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",6,9
1909,2017-10-11T03:39:02Z,2017-11-04T17:36:59Z,2017-11-04T17:37:00Z,4,70,15,"Signed-off-by: Tw tw19881113@gmail.com

1. What does this change do, exactly?
Only update template when file changed
2. Please link to the relevant issues.
#1908
3. Which documentation changes (if any) need to be made because of this PR?
N/A
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,2
1913,2017-10-12T00:50:07Z,2017-10-12T16:11:51Z,2017-10-12T16:11:51Z,2,2,1,"Take this for example:
on startup /path/to/my/script.sh &

Currently it will run this script as blocking and passing ""&"" as if it were a parameter because it only checks for ""&"" if there is more than one argument. If the same is written this way, it works:
on startup /path/to/my/script.sh dummy &

Now this is run non-blocking.
The change itself is very minimal. I don't know how to write a test to check this new behavior.",5,4
1915,2017-10-12T10:30:08Z,2017-11-06T06:01:10Z,2017-11-06T06:01:10Z,5,518,82,"1. What does this change do, exactly?
Adds support in proxy package to discover upstream using SRV lookup
2. Please link to the relevant issues.
Closes ##1803
3. Which documentation changes (if any) need to be made because of this PR?
The proxy module documentation page https://caddyserver.com/docs/proxy required as update:
- to is the destination endpoint to proxy to. At least one is required, but multiple may be specified. If a scheme (http/https/quic) is not specified, http is used. Unix sockets may also be used by prefixing ""unix:"". QUIC connections are experimental, but to try it, just use ""quic://"" for the scheme.
+ to is the destination endpoint to proxy to. At least one is required, but multiple may be specified. If a scheme (http/https/quic/srv) is not specified, http is used. Unix sockets may also be used by prefixing ""unix:"". QUIC connections are experimental, but to try it, just use ""quic://"" for the scheme. Service discovery using SRV lookup is supported. If the endpoint start with `srv://` or `srv+https://` it will be considered as a service locator and caddy will attempt to resolve available services via SRV DNS lookup.

- policy is the load balancing policy to use; applies only with multiple backends. May be one of random, least_conn, round_robin, first, ip_hash, uri_hash, or header. If header is chosen, the header name must also be provided. Default is random.
+ policy is the load balancing policy to use; applies only with multiple backends. May be one of random, least_conn, round_robin, first, ip_hash, uri_hash, or header. If header is chosen, the header name must also be provided. Default is random. Policy is not applicable If destination is a service locator and will be silently ignored.

- health_check_port will use port to perform the health check instead of the port provided for the upstream. This is useful if you use an internal port for debug purposes where your health check endpoint is hidden from public view.
+ health_check_port will use port to perform the health check instead of the port provided for the upstream. This is useful if you use an internal port for debug purposes where your health check endpoint is hidden from public view. health_check_port is not supported when destination is a service locator.

- upstream specifies another backend. It may use a port range like "":8080-8085"" if desired. It is often used multiple times when there are many backends to route to.
- upstream specifies another backend. It may use a port range like "":8080-8085"" if desired. It is often used multiple times when there are many backends to route to. Upstream directive is not supported if target specified by `to` directive is a service locator.
And a note:

To use SSL with service discovery, the locator must use protocol srv+https://

Rationale behind using srv+https protocol
An SRV service locator consists mainly of three parts:

service name
protocol
host name

the protocol piece is the ideal way to specify the protocol but it wouldn't be possible to specify all three pieces without changing the proxy directive syntax, or at least without adding new directive in proxy block.
It is also not possible to deduce this information from FQDN. Take for example these FQDNs
production.redis.http.pod-16.my-org.internal
production.redis.service.nvirginia.consul
redis.service.consul


All three don't conform to RFC 2782 but are more likely to be supported than RFC 2782 by a reasonably modern infra
It is hard to tell the host name in the record. Is it .pod-16.my-org.internal? .my-org.internal?
Is not a valid SRV symbolic name but still supported by a widely used service discovery tool.

4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,6
1919,2017-10-13T08:17:16Z,2017-10-13T14:01:30Z,2017-10-13T14:01:30Z,1,0,35,"1. What does this change do, exactly?
Reverts bdb61f4 but leaves the test case.
2. Please link to the relevant issues.
#1408
#1409
golang/go#18984
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
1921,2017-10-13T15:07:50Z,2017-11-13T17:56:48Z,2017-11-13T17:56:48Z,2,148,50,"1. What does this change do, exactly?
Allows macros of the form:
macro foo {
  content....
}

or
(foo) {
  content...
}

We had some discussion about particular syntax, so I implemented both. I don't really care which anymore at this point. Just need to choose one.
Can be used in any server with import foo, it just imports the saved macro rather than read a file.
2. Please link to the relevant issues.
https://caddy.community/t/caddyfile-macros-or-inline-includes/2852/8
3. Which documentation changes (if any) need to be made because of this PR?
Needs to be documented in caddyfile docs
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",9,28
1922,2017-10-15T16:19:49Z,2017-10-16T23:23:22Z,2017-10-16T23:23:22Z,1,8,1,"1. What does this change do, exactly?
If an OCSP response's issuing OCSP responder certificate expires before the OCSP response itself does, consider the OCSP responder's expiration date to be the end of the OCSP response's vality period, so that we obtain a new OCSP response sooner.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,2
1924,2017-10-16T18:29:13Z,2017-10-31T16:31:10Z,2017-10-31T16:31:10Z,1,1,1,"1. What does this change do, exactly?
Fixes #1923 by removing unnecessary -u ${caddy_user} option for the daemon command in the init script for FreeBSD.
2. Please link to the relevant issues.
#1923
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,2
1930,2017-10-21T08:22:18Z,2017-12-23T10:52:12Z,2017-12-23T10:52:12Z,4,214,47,"1. What does this change do, exactly?
Fix for #1769.  Allows for a mask to be specified to mask the remote IP
new sub directive for the log directive
  log / mylogfile.log {common} {
    ipmask ""255.255.0.0"" , ""ffff:ffff:ffff:ff00::""
  }

The first value after ipmask is the IP4 mask and the second the IP6 mask.  IP6 mask can be left out.  If you only want an IP6 mask for some reason just supply """" for IP4
This will provide output like this in the log

0.0.0.1 - - [21/Oct/2017:09:06:21 +0100] ""GET /mailchimp/mailchimp-api/.git/ HTTP/1.1"" 200 5255

I have implemented this by changing the value of r.RemoteAddr just before log calls replace.  This seemed the least bad way of doing it.
I have left in log lines etc while in development.  I would appreciate any feedback on this PR.
I am not 😞 able to test IP6 values or masks so would be great if someone would test with an IP6 network and IP6 mask to see if it works, it should but any feedback or errors would be greatly appreciated.
I will work on Tests now.
2. Please link to the relevant issues.
Fix for #1769.   Thank you to @dmke for linking to a simple working example.
3. Which documentation changes (if any) need to be made because of this PR?
This will need an update to docs on log to explain ipmask as a new subdirective.  Once close to merging I can provide these documentation changes.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,11
1931,2017-10-22T01:33:29Z,,2017-11-06T12:40:30Z,2,24,1,"1. What does this change do, exactly?
This change allows custom log values to be made available as placeholders while preventing other directives from breaking that functionality.
This issue I ran into was that the currently available method of retrieving the httpserver.Replacer, with a type assertion on the http.ResponseWriter, as is dine in the snippet here, breaks down in conjunction with other plugins that wrap the response writer, such as header.
https://github.com/mholt/caddy/blob/59a8ada4a8d287abd7e1025293f5d7894a7788c2/caddyhttp/log/log_test.go#L31-L33
The solution in-flight in this PR #1542 allows for a custom {user} placeholder to be logged, but does not facilitate arbitrary custom logs.
This change allows the log replacer to be retrieved at any point, when present.
2. Please link to the relevant issues.
There were a few issues I saw referencing this class of problem, but none of the proposed or in-flight solutions fit the use case I was experimenting with.

https://caddy.community/t/custom-user-placeholder-along-with-header-directive/1676/9
#1543

3. Which documentation changes (if any) need to be made because of this PR?
Since this is for plugin authors, the godoc from this added method is likely sufficient for minimal documentation. However, if there are other places to document this type of functionality, I'd be happy to update them.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,14
1932,2017-10-22T10:11:12Z,2017-10-22T12:43:41Z,2017-10-22T12:43:41Z,1,2,2,"1. What does this change do, exactly?
Changes the log output of on startup from

2017/10/22 10:43:18 [INFO] Nonblocking Command with ID 880159d2-fe8c-4457-982b-0a7154ebbed6: ""d:\php7\php-cgi.exe -b 43249""

to

2017/10/22 11:02:32 [INFO] Nonblocking Command ""d:\php7\php-cgi.exe -b 43249"" with ID 347a7d5c-e281-49df-a6b0-cf27d8d0dfc0

Personally I think this is easier to read when looking for commands that are being executed in the logs.",3,0
1934,2017-10-22T21:05:39Z,2017-10-22T22:27:45Z,2017-10-22T22:27:45Z,2,12,6,"1. What does this change do, exactly?
Execute onevent commands once per server block
2. Please link to the relevant issues.
#1933
3. Which documentation changes (if any) need to be made because of this PR?
n/a
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,8
1936,2017-10-25T17:33:14Z,2017-10-31T16:12:06Z,2017-10-31T16:12:06Z,3,3,8,"caddy.go:569: could be simplified
sigtrap_posix.go:87: value of inst is never used
upgrade.go:151: should omit nil check; len() for nil slices is defined as zero
1. What does this change do, exactly?
Simplifies return, removes unused variable and reduces a variable check.
2. Please link to the relevant issues.
fixes #1935
3. Which documentation changes (if any) need to be made because of this PR?
none
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,4
1937,2017-10-29T14:29:41Z,2017-11-07T17:10:04Z,2017-11-07T17:10:04Z,3,31,12,"1. What does this change do, exactly?
This PR sets up a Replacer and ResponseRecorder object per-request, so that the functions that ""create"" them preferentially retrieve them from the request itself before creating a new one. This allows directives throughout the middleware chain to leverage shared information collected over the course of the request.
I have tested this locally using a custom plugin that adds custom placeholders, in combination with the headers directive, which were previously in conflict, causing the placeholders to not be available in the log  directive, and that now works as expected!
Tests here still need to be added.
Follows on from a comment on a previous PR attacking a manifestation of this underlying issue: #1931 (review)
2. Please link to the relevant issues.
Previous PR: #1931
Issues linked to from previous PR:

https://caddy.community/t/custom-user-placeholder-along-with-header-directive/1676/9
#1543

3. Which documentation changes (if any) need to be made because of this PR?
There is a slight behavioral change if plugin implementers were relying on the previous under the hood behavior of these where separate replacers/response recorders could be created, though it's hard to imagine a use case for that.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,7
1938,2017-10-29T15:12:00Z,2017-10-31T16:19:52Z,2017-10-31T16:19:52Z,3,39,12,"1. What does this change do, exactly?
Improve error checking
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
1939,2017-10-31T05:55:01Z,2017-11-04T05:01:31Z,2017-11-04T05:01:31Z,3,72,6,"1. What does this change do, exactly?
This adds the ask sub-directive to tls that defines the URL of a backend HTTP service to be queried during the TLS handshake to determine if an on-demand TLS certificate should be acquired for incoming hostnames. When the ask sub-directive is defined, Caddy will query the URL for permission to acquire a cert by making a HTTP GET request to the URL including the requested domain in the query string. If the backend service returns a 2xx response Caddy will acquire a cert. Any other response code (including 3xx redirects) are be considered a rejection and the certificate will not be acquired.
2. Please link to the relevant issues.
#1847
3. Which documentation changes (if any) need to be made because of this PR?
The TLS docs will need a reference to the ask directive and some updated language around on-demand TLS in general.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,4
1942,2017-11-03T06:30:13Z,2017-11-06T16:43:43Z,2017-11-06T16:43:43Z,6,84,63,"1. What does this change do, exactly?
Abstracts the mutual exclusion mechanism behind an interface
2. Please link to the relevant issues.
First installment in #1918 series
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

(as for point 1, I have refactored the code and made sure that all existing tests are still passing)",2,3
1943,2017-11-03T07:55:51Z,2018-01-16T04:01:00Z,2018-01-16T04:01:00Z,1,1,0,"1. What does this change do, exactly?
Add KeepAlive: true to QuicConfig of h2quic.RoundTripper.
This follows convention of KeepAlive being turned on as a default in the rest of Caddy.
2. Please link to the relevant issues.
Issue #999
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

[ Y] I have written tests and verified that they fail without my change
[ Y] I have squashed any insignificant commits
[ Y] This change has comments for package types, values, functions, and non-obvious lines of code
[ Y] I am willing to help maintain this change if there are issues with it later",3,4
1946,2017-11-06T13:33:19Z,2017-11-07T17:08:55Z,2017-11-07T17:08:55Z,1,5,0,"1. What does this change do, exactly?
It adds a check to make sure that a non-nil server listener is used before printing its file descriptor notice in non-quiet mode.
Without this patch, returning a nil listener alongside with a nil error from Server.Listener and Server.PacketListener would cause a segmentation fault.
In the plugins documentation[1] it's stated that
If your server only uses TCP, the *Packet() methods may be no-ops (i.e. they return nil).
The inverse is true for non-TCP servers. A server may also use both TCP and UDP, and
implement all four methods.

However the function startWithListenerFds (before this patch) would dereference srvln.listener in non-quiet mode in any case.
[1] https://github.com/mholt/caddy/wiki/Writing-a-Plugin:-Server-Type
2. Please link to the relevant issues.
no issue associated to this PR
3. Which documentation changes (if any) need to be made because of this PR?
None, this should more closely match the existing documentation
4. Checklist

no new test has been written. There is currently no other test for startWithListenerFds
I am willing to help maintain this change if there are issues with it later",3,5
1953,2017-11-13T05:32:11Z,2017-12-17T09:13:42Z,2017-12-17T09:13:42Z,1,1,1,"1. What does this change do, exactly?
Make code in line with current documentation for CommonLogFormat for {user} placeholder.
I tested with latest version of the plugin https://github.com/tarent/loginsrv.
It works as noted in the documentation https://caddyserver.com/docs/log under the predefined format {common} (default).
I've not added a new test yet.
2. Please link to the relevant issues.
#1951
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,5
1954,2017-11-13T07:12:34Z,2018-01-16T01:18:26Z,2018-01-16T01:18:26Z,1,1,1,"1. What does this change do, exactly?
Correct Browse ""modified date"" alignment that may be a bit misaligned depending on time and date.
I'm unsure if it is the best way to correct the issue.
2. Please link to the relevant issues.
#1952
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,9
1968,2017-12-02T08:31:13Z,2018-02-17T05:29:54Z,2018-02-17T05:29:54Z,229,26862,4213,"1. What does this change do, exactly?
This is just a simple PR pointing towards the latest commit on lucas-clemente/quic-go's master branch.
2. Please link to the relevant issues.
#1858.
3. Which documentation changes (if any) need to be made because of this PR?
Just that it's updated for QUIC 39?
4. Checklist

 I have written tests and verified that they fail without my change (go test passes)
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am not willing to help maintain this change if there are issues with it later (I merely updated the vendoring files).",11,25
1969,2017-12-04T19:47:34Z,2018-01-16T01:17:28Z,2018-01-16T01:17:28Z,2,6,0,"1. What does this change do, exactly?
caddy/run.go:238
the percent value is resolved in a GOMAXPROCS relative number by simple
division, thus rounding down the non-integer quotient. If zero, the call
to runtime.GOMAXPROCS is silently ignored.
We decide here to exceptionally round up the CPU cap in case of percent
values that are too small.
2. Please link to the relevant issues.
#1962
3. Which documentation changes (if any) need to be made because of this PR?
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,2
1970,2017-12-04T22:07:21Z,2018-01-16T01:15:17Z,2018-01-16T01:15:17Z,1,1,1,"I believe the owner and group of the chown command here are mixed up. As it was caused a permissions issue, with the service being unable to read the directory.

1. What does this change do, exactly?
Change the command for changing the ownership of the /etc/ssl/caddy directory from www-data:root to root:www-data.
2. Please link to the relevant issues.
I don't believe there are any relevant issues at the time of writing.
3. Which documentation changes (if any) need to be made because of this PR?
This change consists of the needed documentation change.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",6,11
1973,2017-12-13T06:49:37Z,2018-01-16T18:37:49Z,2018-01-16T18:37:49Z,1,11,3,"1. What does this change do, exactly?
Implements handling for glob values for the -conf flag.
2. Please link to the relevant issues.
#1910
3. Which documentation changes (if any) need to be made because of this PR?
https://caddyserver.com/docs/cli should be updated to mention the ability to use globs.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later


95% of the time spent preparing this pull request was figuring out how to fork, branch, then fix my branch, then rebase and start over, then squash two commits into one branch.
This proposed PR feels pretty hacky to me, but it works and I think the only alternative is to copy a whole lot of code out of doImport itself.",4,11
1975,2017-12-14T12:11:06Z,2018-02-11T21:45:46Z,2018-02-11T21:45:46Z,3,6,5,"According to RFC 7231 and RFC 7230, there's
no reason a GET-Request can't have a body
(other than it possibly not being supported
by existing software). It's use is simply not
defined, and is left to the application.

1. What does this change do, exactly?
It passes along any HTTP Body for GET requests to fastcgi endpoints.
2. Please link to the relevant issues.
Fixes #1961
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

 I have written tests and verified that they fail without my change
 I have run existing tests and verified that they did not break
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,2
1979,2017-12-17T09:30:55Z,2018-01-07T14:44:50Z,2018-01-07T14:44:50Z,1,4,0,"1. What does this change do, exactly?
Following on from #1937 and #1931 this change adds {user} value in basicauth to be used by replacer
2. Please link to the relevant issues.

#1937
#1931
#1953

3. Which documentation changes (if any) need to be made because of this PR?
I don't think it requires any but I can add if necessary.
4. Checklist

 I have written tests and verified that they fail without my change (I dont think it needs tests)
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
1984,2017-12-25T09:58:52Z,2018-01-16T01:22:54Z,2018-01-16T01:22:54Z,2,31,3,"1. What does this change do, exactly?
It allow to overwrite the variables used in the sysvinit script by providing the file caddy in either /etc/default/ (Debian based https://www.debian.org/doc/manuals/debian-reference/ch03.en.html#_the_default_parameter_for_each_init_script ) or in /etc/sysconfig/ (CentOS based https://www.centos.org/docs/5/html/5.2/Deployment_Guide/s1-sysconfig-files.html ).
That way the server administrators can easily increase the ulimit and change installation paths if necessary.
2. Please link to the relevant issues.
None
3. Which documentation changes (if any) need to be made because of this PR?
Already documented in README
4. Checklist

 I have written tests and verified that they fail without my change (tested on my systems)
 I have squashed any insignificant commits (tried but got merge conflicts)
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
1989,2018-01-02T01:57:05Z,,2018-02-03T07:06:35Z,2,9,4,"1. What does this change do, exactly?
Fixes #1988. I also adjusted some test comments to make them closer to specs.
Tested on Windows 7 x64. I'm intermediate in Go, so it may not be the be the best way to correct the issue.
2. Please link to the relevant issues.
See above.
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,1
1990,2018-01-05T04:32:28Z,2018-02-03T18:13:24Z,2018-02-03T18:13:24Z,1,3,3,"1. What does this change do, exactly?
Sets privatedevices in systemd to 'false' as it may not work for some devices.
2. Please link to the relevant issues.
I didn't create one yet. It was discussed in the forum recently here:
https://caddy.community/t/systemd-fails-to-load-caddy-on-a-raspberry-pi/3170
It is related to:
#1853
https://serverfault.com/questions/871635/error-running-otherwise-working-caddy-under-systemd-v232
https://caddy.community/t/error-running-otherwise-working-caddy-under-systemd-v232/2638
More details on this feature here:
https://www.freedesktop.org/software/systemd/man/systemd.exec.html#PrivateDevices=
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,2
1995,2018-01-13T12:45:34Z,2018-01-16T22:55:34Z,2018-01-16T22:55:34Z,1,14,19,"The signal is already trapped; make it do the same thing as SIGQUIT to
be more inline with Unix/Linux shutdown expectations.
Fixes #1993
3. Which documentation changes (if any) need to be made because of this PR?
SIGTERM is detailed on various pages/READMEs. I haven't followed up with those yet.",4,15
1996,2018-01-14T09:59:59Z,2018-01-16T01:27:56Z,2018-01-16T01:27:56Z,2,67,87,"Signed-off-by: Tw tw19881113@gmail.com

1. What does this change do, exactly?
Add extension filter test case and simplify test code
2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
N/A
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
1997,2018-01-14T10:08:16Z,2018-01-16T01:32:20Z,2018-01-16T01:32:20Z,1,14,0,"Signed-off-by: Tw tw19881113@gmail.com

1. What does this change do, exactly?
As a implement of ResponseWriter, ResponseBuffer could be consistent with the definition, following is quoted from doc of the ResponseWriter.Write

// If WriteHeader has not yet been called, Write calls
// WriteHeader(http.StatusOK) before writing the data.

2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
N/A
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
2007,2018-01-29T20:39:39Z,,2018-02-03T16:05:03Z,1,6,1,"1. What does this change do, exactly?
This is a fix for #1927 .  Ensures that encoded / (%2f) in url is retained when the site definition includes a directory.
The problem turned out to be a call to strings.TrimPrefix which also decoded any encoded values in the string.  It has been replaced by code to simply perform the trim.
2. Please link to the relevant issues.
#1927
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,4
2008,2018-01-30T11:27:27Z,2018-01-30T14:19:03Z,2018-01-30T14:19:03Z,1,1,1,,3,1
2009,2018-01-30T14:45:26Z,2018-02-03T06:52:54Z,2018-02-03T06:52:54Z,1,17,13,"Signed-off-by: Tw tw19881113@gmail.com

1. What does this change do, exactly?
Use sync.Map to make eventHooks concurrent r/w safe
2. Please link to the relevant issues.
#1974
3. Which documentation changes (if any) need to be made because of this PR?
N/A
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,4
2013,2018-02-03T20:41:40Z,2018-02-03T21:48:03Z,2018-02-03T21:48:03Z,1,3,1,Add to .gitignore to Ignore .bat files,3,1
2014,2018-02-03T21:20:37Z,2018-02-16T21:18:03Z,2018-02-16T21:18:03Z,2,105,4,"1. What does this change do, exactly?
This is a fix for #1927
If a host is declared to include a directory, any %2f in the url will be lost by being converted to /.  This change ensures they are not.
I have put some inline comments in my code for some things I was unsure about.
It is a known issue of the URL type that Path cannot distinguish between a / or %2f .
https://golang.org/pkg/net/url/#URL
2. Please link to the relevant issues.
#1927
3. Which documentation changes (if any) need to be made because of this PR?
N/A
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,4
2015,2018-02-04T08:09:27Z,2018-02-16T19:46:28Z,2018-02-16T19:46:29Z,27,1071,575,"Please help test and review this PR!
1. What does this change do, exactly?
Most of the changes are internal to the code, but there are bug fixes and a couple minor breaking changes for server type plugins that use the caddytls package.


Expose the list of Caddy instances through caddy.Instances()


Added arbitrary storage to caddy.Instance


The cache of loaded certificates is no longer global; now scoped
per-instance, meaning upon reload (like SIGUSR1) the old cert cache
will be discarded entirely, whereas before, aggressively reloading
config that added and removed lots of sites would cause unnecessary
build-up in the cache over time.


Key certificates in the cache by their SHA-256 hash instead of
by their names. This means certificates will not be duplicated in
memory (within each instance), making Caddy much more memory-efficient
for large-scale deployments with thousands of sites sharing certs.


Perform name-to-certificate lookups scoped per caddytls.Config instead
of a single global lookup. This prevents certificates from stepping on
each other when they overlap in their names.


Do not allow TLS configurations keyed by the same hostname to be
different; this now throws an error.


Updated relevant tests, with a stark awareness that more tests are
needed.


Change the NewContext function signature to include an *Instance.


Strongly recommend (basically require) use of caddytls.NewConfig()
to create a new *caddytls.Config, to ensure pointers to the instance
certificate cache are initialized properly.


Update the TLS-SNI challenge solver (even though TLS-SNI is disabled
currently on the CA side). Store temporary challenge cert in instance
cache, but do so directly by the ACME challenge name, not the hash.
Modified the getCertificate function to check the cache directly for
a name match if one isn't found otherwise. This will allow any
caddytls.Config to be able to help solve a TLS-SNI challenge, with one
extra side-effect that might actually be kind of interesting (and
useless): clients could send a certificate's hash as the SNI and
Caddy would be able to serve that certificate for the handshake.


Do not attempt to match a ""default"" (random) certificate when SNI
is present but unrecognized; return no certificate so a TLS alert
happens instead.


Store an Instance in the list of instances even while the instance
is still starting up (this allows access to the cert cache for
performing renewals at startup, etc). Will be removed from list again
if instance startup fails.


Laid groundwork for ACMEv2 and Let's Encrypt wildcard support.


Server type plugins will need to be updated slightly to accommodate
minor adjustments to their API (like passing in an Instance). This
commit includes the changes for the HTTP server.
Certain Caddyfile configurations might error out with this change, if
they configured different TLS settings for the same hostname.
This change trades some complexity for other complexity, but ultimately
this new complexity is more correct and robust than earlier logic.
2. Please link to the relevant issues.
Fixes #1991
Fixes #1994
Fixes #1303
3. Which documentation changes (if any) need to be made because of this PR?
The tls directive page will definitely need updating. TLS configurations for equal hostnames cannot be different. Any description about how certificates are stored internally might need to change.
OH, and something I forgot on the original commit message: Caddy can now better support being used in conjunction with other Caddy instances that share the same certificate storage. In other words, if you have multiple instances all using the same $CADDYPATH, that's been a bad idea because they will all try to manage the certificates themselves (keep them renewed, etc, which runs you into rate limits fast). Now, Caddy will attempt to check if the certificate in storage still needs to be renewed just before it fires off a renewal. So if you stagger Caddy deployments by more time than it takes to complete an ACME challenge (usually just a few seconds, but if you use DNS challenge maybe minutes or more), they might play better together in an acceptable way, for small-medium scale use cases. I wouldn't rely on this for high-volume deployments (like, hundreds or thousands of instances sharing the same certificate storage and all trying to manage them) but I bet it'll be better for dozens of Caddy instances!
** UPDATE **: The latest changes I pushed to this branch now eliminate the need to stagger the timing of running each Caddy instance. If multiple Caddy instances (even thousands) share the same certificate storage on disk, they will coordinate renewals and not step on each others' toes. It just requires using the DNS challenge when behind a load balancer. However, testing this is a little tricky, so we'll have to see how it goes. It's an advanced use case, so I'm not expecting many people to be benefitted by it, but I hope they will let us know how it goes!
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

/cc @pieterlouw and @miekg -- I'll be getting in touch with you soon with more details for what this means about your server type plugins. I can probably submit a PR to caddy-net, and I'm not sure that CoreDNS will have to change much except a line where NewContext() is invoked.",6,42
2028,2018-02-18T07:56:47Z,2018-03-26T23:17:44Z,2018-03-26T23:17:44Z,4,107,1,"1. What does this change do, exactly?
The change adds an except sub keyword to the log directive.  If the path being logged matches the except path the request will not be written to the logs
2. Please link to the relevant issues.
#2017
3. Which documentation changes (if any) need to be made because of this PR?
The log directive can now have an except sub directive
log / log.txt {common} {
     except /debug /testing/ 
     except /pages/heartbeat.php
}

4. Checklist
I will add some tests

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,1
2029,2018-02-18T08:12:09Z,2018-02-18T21:21:06Z,2018-02-18T21:21:07Z,2,53,0,"1. What does this change do, exactly?
Allows Response header values to be used by the replacer and log.
It seemed best to use the less than symbol < so a response header would be {<Server}
Only some response headers seem to be available to the replacer when called .
eg - the following are shown in chrome
Content-Length:16
Content-Type:text/plain; charset=utf-8
Date:Sun, 18 Feb 2018 08:07:13 GMT
Server:Caddy
X-Content-Type-Options:nosniff
only
{<Content-Type}
{<Server}
{<X-Content-Type-Options}

will return a value.
any fast-cgi headers from php etc will be available as {<Header} placeholders
2. Please link to the relevant issues.
#1837
3. Which documentation changes (if any) need to be made because of this PR?
We simply need to add to the placeholder page that {<Header} is allowed as a response placeholder.
4. Checklist
I will write tests

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,4
2032,2018-02-19T10:47:09Z,,2018-02-21T19:40:31Z,658,12202,287240,Use the new dep package management tool to manage dependencies and the vendor/ directory.,5,5
2033,2018-02-19T16:45:32Z,2018-02-21T17:56:09Z,2018-02-21T17:56:09Z,4,1,169,"1. What does this change do, exactly?
Remove deprecated startup/shutdown directives
2. Please link to the relevant issues.
#2031
3. Which documentation changes (if any) need to be made because of this PR?
/
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
2034,2018-02-20T12:09:22Z,2018-03-26T03:32:31Z,2018-03-26T03:32:31Z,2,139,7,"1. What does this change do, exactly?
a/A {
    …
}

and
a/a {
    …
}

were considered as duplicate blocks. This PR fixes it, different cases in path mean different blocks now. Note though a and A are still considered as duplicate ones: scheme and host names are getting lowered for the comparison, everything else stays untouched.
2. Please link to the relevant issues.
#1517
3. Which documentation changes (if any) need to be made because of this PR?
A point about case-infused block key difference probably worths a mention.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,6
2039,2018-02-21T11:44:07Z,2018-03-17T23:17:42Z,2018-03-17T23:17:43Z,2,50,22,"1. What does this change do, exactly?
Fixes a bug introduced by #2014
I did not origionally test with query string.  I have added tests and fixed code.  The url passed in to trimPathPrefix will never have scheme / host / port
I may never have a fragement either but I have added test to ensure if it is it willwork.
Please review code and test if possible.
2. Please link to the relevant issues.
#2014
#2038
3. Which documentation changes (if any) need to be made because of this PR?
NA
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,3
2047,2018-02-24T08:30:38Z,2018-03-18T00:29:23Z,2018-03-18T00:29:23Z,2,39,1,"1. What does this change do, exactly?

Purge event hooks after USR1 reload
Create a new func to delete event hooks

2. Please link to the relevant issues.
#2044
3. Which documentation changes (if any) need to be made because of this PR?
/
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",6,0
2053,2018-03-01T22:37:19Z,2018-03-10T15:39:08Z,2018-03-10T15:39:08Z,2,3,3,"1. What does this change do, exactly?
It ups the default minimum TLS version to 1.2 instead 1.2
2. Please link to the relevant issues.
#2045
3. Which documentation changes (if any) need to be made because of this PR?
Caddy Documentation section Protocols
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
2061,2018-03-11T00:16:17Z,2018-03-31T23:31:36Z,2018-03-31T23:31:36Z,1,1,0,"1. What does this change do, exactly?
Adds ""run"" directive that will be used by plugin https://github.com/lucaslorentz/caddy-run
2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
N/A
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

Comments
I created this plugin because I find it useful to run .NET Core applications and also php cgi.
It is different from the on plugin, because it is not event driven and also ensures the application keeps running in background with several extra options and restart policy.
Let me know if you already have plans for directive name run, I can easily rename the plugin.
I've been testing it mainly on windows, tests, suggestions and feedback are welcome.
After this PR get's merged I will add it to caddy plugins list.",6,45
2062,2018-03-11T18:30:37Z,2018-03-17T23:27:10Z,2018-03-17T23:27:10Z,4,52,6,"1. What does this change do, exactly?
It implements two new placeholders: tls_protocol and tls_cipher which will contain, when using a secure connection, the protocol and cipher respectively.
For fastcgi, it passes these two placeholders in a manner that is compatible with Apache's mod_ssl, i.e. as environment variables SSL_PROTOCOL and SSL_CIPHER.
2. Please link to the relevant issues.
#2055
3. Which documentation changes (if any) need to be made because of this PR?
The documentation for placeholders will need to incorporate details of these two placeholders. Essentially:
{tls_protocol} The protocol used for a secure transport connection (e.g. ""tls1.2"").
{tls_cipher} The cipher used for a secure transport connection (e.g. ""ECDHE-ECDSA-WITH-CHACHA20-POLY1305"").
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,5
2070,2018-03-15T03:15:50Z,2018-04-17T14:09:22Z,2018-04-17T14:09:22Z,5,107,39,"1. What does this change do, exactly?
Allows setting an upstream timeout to a proxy via the Caddyfile.
E.x
proxy / 8.8.8.8 backend1.local {
timeout 10
}
2. Please link to the relevant issues.
#2050
3. Which documentation changes (if any) need to be made because of this PR?
https://caddyserver.com/docs/proxy
New property to be added there.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later
Gladly",4,10
2072,2018-03-15T04:21:33Z,2018-03-26T04:09:04Z,2018-03-26T04:09:05Z,77,6517,4236,"1. What does this change do, exactly?
Adds ACMEv2 support, which includes fully-managed, automatic wildcard certificates.
It also adds {labelN} placeholders, and support for distributed auto-HTTPS of the HTTP challenge.
2. Please link to the relevant issues.
Closes #2067
3. Which documentation changes (if any) need to be made because of this PR?

How to use wildcard certificates:

*.example.com
tls {
    dns <provider>
}

In other words: use a proper wildcard pattern for the site name, and enable the DNS challenge. For a wildcard certificate, only one wildcard label is allowed, and it must be the left-most label of the domain.
Wildcards can also be forced, but this should only be done when there are many subdomains configured differently that would otherwise trigger rate limits with the CA:
sub1.example.com {
    tls {
        dns <provider>
        wildcard
    }
}
.
.
.
sub150000.example.com {
    tls {
        dns <provider>
        wildcard
    }
}



Document recommended use case for wildcard certificates and gently discourage other tempting ones.


Clarify allowed usage of * in hostnames on the HTTP Caddyfile page. These haven't changed, but should be clarified, since what is allowed by Caddy is slightly more liberal than what is allowed for wildcard certificates (Caddy allows a superset of wildcard patterns to that of what certs allow).


Document {labelN} placeholders, which get replaced with the values of specific labels in the hostname ({label1} matches sub in sub.example.com or whatever the value is in the place of the wildcard in *.example.com)


Update the conditions for automatic HTTPS on the Automatic HTTPS page (a specific wildcard pattern is now permitted with automatic HTTPS)


Explain how to use Caddy behind a load balancer when using automatic HTTPS: the only requirement is that the $CADDYPATH/acme folder should be shared (usually by mounting locally). And the obvious requirement that the LB redirect port 80 traffic to a Caddy instance serving HTTP. The Caddy instances will then synchronize the management of the certificates and share them, rather than each instance doing its own thing.


4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

5. TODO

 Wait for the acmev2 xenolf/lego to be finished and moved into the existing acme folder, then update our vendoring and import paths (EDIT: We will not wait for a release of lego, it's working fine now in a branch, and we vendor the dependency and commit it, anyway)
 Before merging into master, replace the hard-coded staging v2 endpoint as default with the production v2 endpoint.

In the announcement blog post, we will need to help site owners understand the move to ACME v2. Basically, it will act as if you were running Caddy for the first time: an email address will be needed, and all new certificates will be obtained. This is because the format of the metadata in ACME v2 has changed from v1. This was deemed the simplest way to do it. Overall, we expect a very smooth transition for nearly everyone.
Please test this out! Now is the time to catch bugs.",3,10
2075,2018-03-16T06:08:14Z,2018-03-19T02:42:44Z,2018-03-19T02:42:44Z,2,114,14,"1. What does this change do, exactly?
Makes placeholder braces escapable by backslash character (\) for strings fed to a httpserver.Replacer.
It achieves this by using loops to identify the first unescaped opening brace and closing brace, then cleaning up escaped braces as it works its way through the string.
This allows, for example, JSON to be set as a header or a fastcgi env var and even allows placeholders to continue working inside that JSON.
2. Please link to the relevant issues.
Fixes #2063
3. Which documentation changes (if any) need to be made because of this PR?
A quick search determined that the following areas call some form of replacer.Replace:

Env vars in fastcgi
Log formats for log
Upstream and downstream headers in proxy
The location targets of both redirect and rewrite
httpserver.IfMatcher when evaluating ifCond.True()

There may be more I wasn't able to find. Public documentation of the above should note the new escape capability.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later


As I don't have much experience with Golang PRs yet, I'd welcome any feedback, but especially regarding:

The method used for looping and breaking the loops
The tests used to determine whether the brace is escaped
The method used to clean up the escaped braces
Any additional tests that could be helpful",3,5
2079,2018-03-23T00:12:30Z,2018-05-09T10:52:41Z,2018-05-09T10:52:41Z,47,4155,198,"1. What does this change do, exactly?
Implements telemetry as a series of reports to a remote server which aggregates the global data set and makes it queryable.
Please try out this branch! We're trying to build a data set that observes the health of the Internet from a server-side perspective. Such a global, non-proprietary data set does not yet exist, and this has deep implications for future research and development.
This PR still under very active development, but should generally be functional, so try it out! The more instances we have running this branch, the better the final solution will be. Participants in this project will be able to view and query the database while development is ongoing.
(The original PR was #2027 but I couldn't figure out how to keep that one when the branch got renamed.)
2. Please link to the relevant issues.
For more information about this project, see The Caddy Telemetry Project on the forum and our recent announcement blog post: https://caddyserver.com/blog/caddy-0_11-telemetry
This PR is not the right place to discuss ideas or concerns about telemetry; please read this blog post for instructions on where to discuss telemetry. We invite anyone interested to join us there and participate. This PR is specifically for implementation, building, testing, and usage; i.e. ""the code."" It's very important that we keep the discussion together since there are several parties contributing to this. Thanks!
3. Which documentation changes (if any) need to be made because of this PR?
We'll need at least a whole new page in the docs describing how telemetry works and what exactly is reported.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",7,15
2082,2018-03-24T19:52:16Z,2018-04-15T01:40:56Z,2018-04-15T01:40:56Z,4,110,26,"1. What does this change do, exactly?

Adds regexp support for simple rewrite rule.
Also includes an optional not syntax to negate the regex. Negating regex can be pain for an average user and Go's regex support makes it even more difficult. I think an optional not syntax should not hurt.

Reason:

The simple rewrite rule is too basic and it is rarely used.
Many rewrite config blocks are only used for regexp.
Users that do not need if conditions do not need to open to config block, hence a cleaner Caddyfile.

Outcome:
Sample wordpress config can become a one liner.
rewrite not ^/wp-admin {path} {path}/ /index.php?{query}

2. Please link to the relevant issues.
No issues reported. Noticed the trend from users' Caddyfiles.
3. Which documentation changes (if any) need to be made because of this PR?
Rewrite:
Indication of regexp support and an additional option not field.
rewrite [not] from to... 

4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,4
2105,2018-04-03T19:03:19Z,2018-04-05T06:04:06Z,2018-04-05T06:04:06Z,3,85,7,"1. What does this change do, exactly?
It fixes #1960 and adds some tests to verify.
2. Please link to the relevant issues.
#1960
3. Which documentation changes (if any) need to be made because of this PR?
We may need to mention the transparent preset already appends any X-Forwarded-For headers
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,4
2108,2018-04-07T19:54:48Z,,2018-07-16T04:45:35Z,1,1,0,"1. What does this change do, exactly?
Let transparent subdirective imply Forwarded header. The Forwarded Header is the standardized version of X-Forwarded-For, X-Forwarded-Host and X-Forwarded-Proto headers. Since Caddy is now one of the most popular web servers, I editted it to follow RFC7239 standards.
Alternatively, we can choose to make Caddy always serve Forwarded header whenever proxy directive is used, just like X-Forwarded-For header. But I was not sure if it is acceptable to the maintainers, so I hereby just append it to existing transparent subdirective.
2. Please link to the relevant issues.

#881
https://github.com/mholt/caddy/blob/88edca/caddyhttp/proxy/proxy.go#L347-L355
https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Forwarded
https://tools.ietf.org/html/rfc7239#section-4

3. Which documentation changes (if any) need to be made because of this PR?

https://caddyserver.com/docs/proxy#presets

4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",6,11
2120,2018-04-17T12:12:07Z,,2019-07-18T17:49:32Z,4,154,7,"1. What does this change do, exactly?
It fixes #1926 by registering a new RegisterParsingCallback for the header directive that will prepend any header middleware to the Redir Configs that are created on the automatic http to https generation.
2. Please link to the relevant issues.
#1926
3. Which documentation changes (if any) need to be made because of this PR?
We may need to mention that the http to https will honor only the header directives
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2128,2018-04-21T21:48:15Z,2018-11-27T01:27:59Z,2018-11-27T01:28:00Z,8,114,38,"1. What does this change do, exactly?
bind directive supports multiple values.
2. Please link to the relevant issues.
Although not entirely fix #864, but related.
3. Which documentation changes (if any) need to be made because of this PR?
https://caddyserver.com/docs/bind
syntax change to
bind host...

4. Checklist

 I have written tests and verified that they fail without my change

The syntax is backward compatible, so old conf won't fail.

 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,9
2130,2018-04-23T05:14:15Z,2018-06-19T15:15:38Z,2018-06-19T15:15:39Z,1,3,3,"1. What does this change do, exactly?
This fixes the permissions on /etc/caddy to match standard linux
permissions for /etc, and makes the Caddyfile read-only for the caddy
user.
2. Please link to the relevant issues.
n/a
3. Which documentation changes (if any) need to be made because of this PR?
This is a documentation change.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,4
2134,2018-04-24T06:37:09Z,2018-04-28T14:32:21Z,2018-04-28T14:32:21Z,1,10,17,"1. What does this change do, exactly?
Fix a bug introduced in 98de336, #2070
98de336#diff-a71769529a289e215ba922059611256bL309
Before 98de336, proxy used http.DefaultTransport for every request.
After 98de336, proxy creates a new http.Transport for every request.
Then caddy will create a lot of TCP connections and won't reuse them.
I found this because github.com/transmission/transmission can only have 1024 file descriptors, And it encounters error too many files open frequently when I upgraded caddy to 0.10.13.
2. Please link to the relevant issues.
See 1.
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,5
2143,2018-04-27T20:49:41Z,,2019-07-18T17:50:20Z,7,121,117,"1. What does this change do, exactly?
WIP for Issue #2139
Continue the work which was started in #1611 and #1649 to make the staticfiles file server
the only middleware that hits the disk and loads content by extending this feature to markdown. This would allow the markdown directive to be used with other middlewares such as proxy.
2. Please link to the relevant issues.
#2139, #1611, and #1649
3. Which documentation changes (if any) need to be made because of this PR?
Might want to add documentation noting that it markdown can be used with other directives like proxy.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

5. Issues
This is not ready to merge, or even functioning. I'm starting the pull request in order to show some progress and get help.  Specifically, line 109 of markdown.go causes a fatal error (segmentation violation). I copied this line from the work done on templates.go, and I just don't understand buffers enough to understand what I'm doing wrong.",5,22
2144,2018-04-28T01:04:26Z,2019-03-06T21:35:07Z,2019-03-06T21:35:08Z,4,190,53,"1. What does this change do, exactly?
Adds an extra parameter to header_upstream and header_downstream that allows regex-based replacement of headers. They are in the format header_upstream [header] [regex] [replacement]
This allows unwanted values from the server and client (e.g. redirects, cookies) to be modified by Caddy. This therefore allows search (and mobile) to be fixed on wikipedia.matt.life, and wikimirror.
2. Please link to the relevant issues.
#442 - An existing (but not merged) implementation of Location rewriting
#606 - Nginx proxy_redirect feature request
This change may be obsoleted by #1639, the proxy middleware rewrite.
3. Which documentation changes (if any) need to be made because of this PR?
Add the extra parameter to header_upstream and header_downstream, and describe it. Give examples of it being used to change the Location header, possibly referencing proxy_redirect.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",10,23
2147,2018-05-01T17:42:27Z,2018-05-01T19:45:24Z,2018-05-01T19:45:24Z,1,1,1,"1. What does this change do, exactly?
Fix a typo
2. Please link to the relevant issues.

3. Which documentation changes (if any) need to be made because of this PR?
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
2151,2018-05-04T01:52:12Z,2019-02-15T18:53:15Z,2019-02-15T18:53:15Z,2,14,2,"1. What does this change do, exactly?
When checking a requested path's eligibility for a proxy config, the request path is compared to a provided list of excepted paths. Since both the request path and the excepted path are path.Cleaned before comparison, they lose trailing slashes, making except /foo/ effectively equivalent to except /foo for proxy configuration, which can be undesirable.
This PR introduces basic string checking for existing trailing slashes in either the request path or the excepted path prior to cleaning. If the result of the path.Clean produces a string without a trailing slash, we simply append a new one to the result.
2. Please link to the relevant issues.
Fixes #2107
3. Which documentation changes (if any) need to be made because of this PR?
The existing proxy documentation doesn't currently specify whether trailing slashes are counted for comparison, and since I believe there's no reason to expect they wouldn't be, this change actually brings the functionality in line with the implied functionality of the documentation. (No change needed)
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,1
2158,2018-05-09T00:29:54Z,2018-05-17T19:25:37Z,2018-05-17T19:25:37Z,2,13,4,"1. What does this change do, exactly?
Currently with fastcgi, SCRIPT_NAME gets PATH_INFO stripped from it. SCRIPT_FILENAME, however, does not and that seems like an oversight. This is causing problems with fcgiwrap, which tries to use SCRIPT_FILENAME to locate a script in the filesystem.
2. Please link to the relevant issues.
I didn't file an issue, I just decided to fix it :-).
3. Which documentation changes (if any) need to be made because of this PR?
This is a bug fix, so I don't think this needs any documentation changes.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",6,7
2161,2018-05-10T21:20:07Z,2019-01-18T17:46:21Z,2019-01-18T17:46:22Z,4,10,7,"1. What does this change do, exactly?
Move EmitEvent(InstanceStartupEvent, instance) to caddy.Start()
2. Please link to the relevant issues.
hacdias/caddy-v1-service#21
3. Which documentation changes (if any) need to be made because of this PR?
n/a
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,6
2165,2018-05-12T21:42:35Z,,2018-05-23T17:50:53Z,13,325,151,"1. What does this change do, exactly?
[WIP] - Add zstd compression
Currently, the new zstd package is a placeholder and just adds a new header.
I realized that it will be very similar to the gzip package, with the same block in the Caddyfile etc. Instead of duplicating much of the code, would it be a better way to refactor compression as a general directive and have gzip, zstd (and something else too in the future) add just the appropriate Writer?
Comments, @abiosoft?
This can be done without breaking existing Caddyfiles.
2. Please link to the relevant issues.
#2153
3. Which documentation changes (if any) need to be made because of this PR?
Plugin docs
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",7,13
2172,2018-05-17T00:15:22Z,2018-05-18T02:57:40Z,2018-05-18T02:57:40Z,2,12,0,"Fixes #2152

1. What does this change do, exactly?
This changes provides REQUEST_SCHEME env variable for fastcgi
2. Please link to the relevant issues.
#2152
3. Which documentation changes (if any) need to be made because of this PR?



4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,4
2176,2018-05-21T00:15:49Z,2018-05-28T15:22:22Z,2018-05-28T15:22:22Z,2,115,0,"1. What does this change do, exactly?
It adds ability to provide file with env variables via cli
2. Please link to the relevant issues.
#1941
3. Which documentation changes (if any) need to be made because of this PR?
Actually i don't know which part of documentation i should change
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,24
2178,2018-05-23T14:25:33Z,2018-06-12T23:00:53Z,2018-06-12T23:00:53Z,2,5,3,"1. What does this change do, exactly?
New event type called restart added which is emitted at server restart (at SIGUSR1)
2. Please link to the relevant issues.
We are using caddy as embedded server and we need to make preparations before restarts
3. Which documentation changes (if any) need to be made because of this PR?
Nothing
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",6,2
2182,2018-05-26T02:39:37Z,2018-06-08T05:38:55Z,2018-06-08T05:38:55Z,1,1,1,"1. What does this change do, exactly?
Completes #2175.
2. Please link to the relevant issues.
#2175.
3. Which documentation changes (if any) need to be made because of this PR?
This page could possibly list all files that are considered by gzip. It doesn't at the moment:
https://caddyserver.com/docs/gzip
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,1
2188,2018-05-29T23:57:37Z,2018-08-07T23:01:25Z,2018-08-07T23:01:25Z,2,17,10,"1. What does this change do, exactly?
This change fixes 502 errors for multiple backends when header policy is used and there is no such header in request
2. Please link to the relevant issues.
#2126
3. Which documentation changes (if any) need to be made because of this PR?



4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,22
2191,2018-06-05T08:46:39Z,2018-07-26T20:16:31Z,2018-07-26T20:16:31Z,1,3,2,This makes it easier to disable metrics for projects that embed package caddymain.,4,8
2205,2018-06-16T04:18:25Z,2018-06-28T16:06:53Z,2018-06-28T16:06:53Z,2,93,36,"Two problems are fixed by this code simplification:

Snippets defined in one import file are strangely not available in
another.
If an imported file had a directive with an argument ""import"", then
the rest of the tokens on the line would be converted to absolute
filepaths.

An example of 2 would be the following directive in an imported file:
server {
    basicauth / import secret
}

In this case, the password would actually be an absolute path to the
file 'secret' (whether or not it exists) in the directory of the imported
Caddyfile.
The problem was the blind token processing to fix import paths in the
imported tokens without considering the context of the 'import' token.
My first inclination was to just add more context (detect 'import' tokens
at the beginning of lines and check the value tokens against defined
snippets), however I eventually realized that we already do all of this
in the parser, so the code was redundant. Instead we just use the current
token's File property when importing. This works fine with imported tokens
since they already have the absolute path to the imported file!
Fixes #2204",3,3
2217,2018-07-05T17:18:22Z,2018-07-28T08:26:25Z,2018-07-28T08:26:25Z,3,209,10,"1. What does this change do, exactly?
This PR is adding several placeholders which allow to access information about a client certificate. That's useful, for example, when we need to proxy the user's certificate to the backend via headers.
Lisst of new placeholders:

tls_client_escaped_cert
tls_client_fingerprint
tls_client_i_dn
tls_client_raw_cert
tls_client_s_dn
tls_client_serial
tls_client_v_end
tls_client_v_remain
tls_client_v_start

The names of the placeholders are based on variable names used in Nginx with the difference that the placeholders start with tls_ instead of ssl_. The final values of placeholders are identical to the values of the Nginx variables. This kind of compatibility facilitates easy replacement of Nginx with Caddy without the need to change the backend application.
2. Please link to the relevant issues.
This PR fixes #2115.
3. Which documentation changes (if any) need to be made because of this PR?
I will create a new PR to document all the new placeholders once this PR gets green light to be merged.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,12
2221,2018-07-12T19:36:40Z,2018-07-19T17:03:45Z,2018-07-19T17:03:45Z,1,17,11,"Fixes #2179
Current Caddy code uses a combination of CSS styles that some mainstream browsers (e.g. Firefox) do not support well: td:first-child { width: 100%; } together with td:last-child { padding-right: 5%; }.
The old approach was three columns with:

Name: 100% width, 5% padding left
Size: minimal width
Modified: minimal width, 5% padding right

Now the new approach is five columns with:

Dummy: 5% width
Name: 80% width
Size: minimal width
Modified: minimal width
Dummy: 5% width

Thanks for your consideration.
Best, Sebastian",4,6
2222,2018-07-12T19:50:18Z,2018-07-13T00:22:32Z,2018-07-13T00:22:32Z,1,1,0,"Fixes #2214
Browser defaults vary and this way we prevent mix-ups from setting only some colors.
Thanks for your consideration.
Best, Sebastian",3,1
2227,2018-07-16T15:28:03Z,2018-07-26T20:03:38Z,2018-07-26T20:03:38Z,1,0,4,"1. What does this change do, exactly?
The following two cipher suites are removed from the default cipher suites:
TLS_RSA_WITH_AES_256_CBC_SHA
TLS_RSA_WITH_AES_128_CBC_SHA

These cipher suites do not use ephemeral keys and so do not have forward secrecy.
They are not listed here anymore: https://wiki.mozilla.org/Security/Server_Side_TLS
2. Please link to the relevant issues.
#2226
3. Which documentation changes (if any) need to be made because of this PR?
None. The default cipher suites are not listed anywhere as far as I know.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2235,2018-07-25T08:46:03Z,2018-07-26T19:55:43Z,2018-07-26T19:55:43Z,1,1,1,"1. What does this change do, exactly?
Minor fix to use backticks for something that should be executed on shell.
2. Please link to the relevant issues.
n/a
3. Which documentation changes (if any) need to be made because of this PR?
n/a
4. Checklist

 I have written tests and verified that they fail without my change -- n/a
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code -- n/a
 I am willing to help maintain this change if there are issues with it later -- n/a",3,1
2238,2018-07-25T20:33:58Z,2018-07-26T19:54:10Z,2018-07-26T19:54:10Z,1,2,1,"1. What does this change do, exactly?
Unignores the caddyfile/ package, which causes problems on systems with case-insensitive filesystems (such as macOS).
2. Please link to the relevant issues.
#2237
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,2
2239,2018-07-25T22:47:38Z,2018-07-26T19:50:19Z,2018-07-26T19:50:19Z,1,1,0,"This adds a little WKD plugin. WKD is a simple PGP public key discovery system.
https://github.com/emersion/caddy-wkd",2,1
2241,2018-07-26T18:10:24Z,2018-08-24T22:43:57Z,2018-08-24T22:43:57Z,1,2,2,"1. What does this change do, exactly?
gofmt caddytls/handshake.go
2. Please link to the relevant issues.
n/a
3. Which documentation changes (if any) need to be made because of this PR?
n/a
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,6
2252,2018-08-05T08:49:03Z,,2019-07-18T17:51:39Z,1,4,0,"1. What does this change do, exactly?
when response status code 204, it can return instead of 200
2. Please link to the relevant issues.
#2202
3. Which documentation changes (if any) need to be made because of this PR?
4. Checklist

[y? ] I have written tests and verified that they fail without my change
no but, i tried to reproduce according to #2204 comment

cat <<EOF >/tmp/Caddyfile
*:8000
upload / {
  to ""/tmp""
}
EOF
$ curl -T foobar http://localhost:8000/foo/bar
$ curl -vX DELETE http://localhost:8000/foo/bar | grep -F ""HTTP/""
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 8000 (#0)
> DELETE /foo/bar HTTP/1.1
> Host: localhost:8000
> User-Agent: curl/7.54.0
> Accept: */*
>
< HTTP/1.1 204 No Content
< Server: Caddy
< Date: Sun, 05 Aug 2018 08:42:53 GMT
<
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
* Connection #0 to host localhost left intact

i would like to write this status code test, would you mind telling me how to test status code?


[y] I have squashed any insignificant commits
nop them


[y] This change has comments for package types, values, functions, and non-obvious lines of code


[y] I am willing to help maintain this change if there are issues with it later",4,1
2260,2018-08-08T10:14:10Z,2018-08-28T10:08:56Z,2018-08-28T10:08:56Z,2,9,2,"…liseconds precision)

1. What does this change do, exactly?
Added {when_unix_ms} placeholder for requests. It's like {when_unix}, but with milliseconds precision.
2. Please link to the relevant issues.
None
3. Which documentation changes (if any) need to be made because of this PR?
Add description of new placeholder to the 'placeholders/requests' section.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,5
2262,2018-08-09T16:27:15Z,2018-10-30T00:00:45Z,2018-10-30T00:00:45Z,3,95,2,"1. What does this change do, exactly?
Adds callback OnRestartFailed to caddy.Controller. It is triggered if restart failed.
2. Please link to the relevant issues.
#2250
3. Which documentation changes (if any) need to be made because of this PR?
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",17,29
2265,2018-08-15T00:35:26Z,2018-09-02T21:28:11Z,2018-09-02T21:28:11Z,2,48,12,"1. What does this change do, exactly?
Add default timeouts for fastCGI
Timeouts still can be disabled if you explicitly set timeout to 0.
2. Please link to the relevant issues.
#2113
3. Which documentation changes (if any) need to be made because of this PR?
There should be documentation changes at this link https://caddyserver.com/docs/fastcgi, but i don't know how to update documentation.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,5
2266,2018-08-16T00:43:05Z,2018-08-16T05:35:07Z,2018-08-16T05:35:08Z,1,1,1,"1. What does this change do, exactly?
Fix 500 error for nonexisting files
2. Please link to the relevant issues.
#2256
3. Which documentation changes (if any) need to be made because of this PR?

4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
2267,2018-08-16T14:27:37Z,2018-08-24T17:09:49Z,2018-08-24T17:09:49Z,1,1,1,"Adding TLS client cert placeholders #2217 uses features of go
v1.10.  Update README requirements accordingly.

1. What does this change do, exactly?
README documentation update
2. Please link to the relevant issues.
Issue not raised.  Simply ran into problem getting sources per instructions with the version of go mentioned
3. Which documentation changes (if any) need to be made because of this PR?
Just the README file
4. Checklist
n/a

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2271,2018-08-21T16:20:50Z,2018-08-22T02:06:28Z,2018-08-22T02:06:28Z,1,3,3,"1. What does this change do, exactly?
Filebrowser changed their github structure, this just updates the paths in plugins.go
2. Please link to the relevant issues.
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,3
2273,2018-08-22T07:42:03Z,2018-08-22T15:19:38Z,2018-08-22T15:19:38Z,1,1,1,"Update minify plugin position so it executes before gzip.
Ref.: hacdias/caddy-v1-minify#23",2,0
2274,2018-08-22T14:38:06Z,,2019-07-18T17:52:07Z,12,556,4,"1. What does this change do, exactly?
This change creates a new thread that will query the cert spotter API to get a list of certificates that have been issued for your domain names, and compares them to the ones that you have for caddy.
2. Please link to the relevant issues.
3. Which documentation changes (if any) need to be made because of this PR?
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",8,8
2285,2018-08-28T03:36:20Z,2018-09-07T21:24:08Z,2018-09-07T21:24:08Z,1,1,1,"1. What does this change do, exactly?
Fixes a broken link.
2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
N/A
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2288,2018-08-31T03:57:52Z,2018-09-02T21:18:55Z,2018-09-02T21:18:55Z,185,7701,12006,"1. What does this change do, exactly?
Vendor quic-go v0.10.0 (without the integration tests, which would otherwise pull in a bunch of dependencies, including a testing framework).
quic-go now vendors all of its dependencies, so we don't need to vendor
them here.
This PR was created by running:
gvt delete github.com/lucas-clemente/quic-go
gvt delete golang.org/x/net/lex/httplex
gvt delete github.com/bifurcation/mint
gvt delete github.com/lucas-clemente/aes12
gvt delete github.com/lucas-clemente/fnv128a
gvt delete github.com/lucas-clemente/quic-go-certificates
gvt delete github.com/aead/chacha20
gvt delete github.com/hashicorp/golang-lru
gvt fetch -tag v0.10.0-no-integrationtests github.com/lucas-clemente/quic-go
2. Please link to the relevant issues.
Fixes #2287. Closes #2257.
3. Which documentation changes (if any) need to be made because of this PR?
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2294,2018-09-16T03:07:38Z,,2018-12-03T19:41:03Z,1143,118361,190444,"First of all, sorry for the patch bomb.  Here is a cute picture to lighten the mood :)

1. What does this change do, exactly?
Migrates from gvt to Go modules.
2. Please link to the relevant issues.

#2291
gvt is archived now and recommends to move to Go modules

3. Which documentation changes (if any) need to be made because of this PR?

Updated readme with new build instructions
Updated CONTRIBUTING.md with to reference Go modules

4. Checklist

 I have written tests and verified that they fail without my change
No new tests required.  There are a couple failing but look unrelated:

ok      github.com/mholt/caddy/caddyhttp/browse 0.017s
--- FAIL: TestVisibleErrorWithPanic (0.00s)
    errors_test.go:157: Expected response body to contain error log line, but it didn't:
        15/Sep/2018:22:54:45 -0400 [PANIC /] src/github.com/mholt/caddy/caddyhttp/errors/errors_test.go:135 - I'm a panic

        goroutine 8 [running]:
        github.com/mholt/caddy/caddyhttp/errors.ErrorHandler.recovery(0xb05280, 0xa87318, 0x0, 0x0, 0xc000116cf0, 0x0, 0x1, 0xb0a2a0, 0xc00013e100, 0xc000106600)
                /home/hatter/go/caddy/src/github.com/mholt/caddy/caddyhttp/errors/errors.go:155 +0x4d4
        panic(0x982420, 0xb01390)
                /usr/local/go/src/runtime/panic.go:513 +0x1b9
        github.com/mholt/caddy/caddyhttp/errors.TestVisibleErrorWithPanic.func1(0xb0a2a0, 0xc00013e100, 0xc000106600, 0xc000055cd8, 0x50, 0xc000055cd0)
                /home/hatter/go/caddy/src/github.com/mholt/caddy/caddyhttp/errors/errors_test.go:135 +0x39
        github.com/mholt/caddy/caddyhttp/httpserver.HandlerFunc.ServeHTTP(0xa87318, 0xb0a2a0, 0xc00013e100, 0xc000106600, 0x0, 0x0, 0xc000116cf0)
                /home/hatter/go/caddy/src/github.com/mholt/caddy/caddyhttp/httpserver/middleware.go:92 +0x44
        github.com/mholt/caddy/caddyhttp/errors.ErrorHandler.ServeHTTP(0xb05280, 0xa87318, 0x0, 0x0, 0xc000116cf0, 0x0, 0x1, 0xb0a2a0, 0xc00013e100, 0xc000106600, ...)
                /home/hatter/go/caddy/src/github.com/mholt/caddy/caddyhttp/errors/errors.go:50 +0x105
        github.com/mholt/caddy/caddyhttp/errors.TestVisibleErrorWithPanic(0xc000106500)
                /home/hatter/go/caddy/src/github.com/mholt/caddy/caddyhttp/errors/errors_test.go:145 +0x1f9
        testing.tRunner(0xc000106500, 0xa87320)
                /usr/local/go/src/testing/testing.go:827 +0xbf
        created by testing.(*T).Run
                /usr/local/go/src/testing/testing.go:878 +0x353
2018/09/15 22:54:45 [WARNING] Unable to open error page '404.html': open 404.html: no such file or directory
2018/09/15 22:54:45 [WARNING] Unable to open error page '500.html': open 500.html: no such file or directory
2018/09/15 22:54:45 [WARNING] Unable to open error page '404.html': open 404.html: no such file or directory
2018/09/15 22:54:45 [WARNING] Unable to open error page '503.html': open 503.html: no such file or directory
2018/09/15 22:54:45 [WARNING] Unable to open error page 'generic_error.html': open generic_error.html: no such file or directory
2018/09/15 22:54:45 [WARNING] Unable to open error page '404.html': open 404.html: no such file or directory
2018/09/15 22:54:45 [WARNING] Unable to open error page '503.html': open 503.html: no such file or directory
2018/09/15 22:54:45 [WARNING] Unable to open error page '/home/hatter/go/caddy/src/github.com/mholt/caddy/caddyhttp/errors/404.html': open /home/hatter/go/caddy/src/github.com/mholt/caddy/caddyhttp/errors/404.html: no such file or directory
2018/09/15 22:54:45 [WARNING] Unable to open error page '503.html': open 503.html: no such file or directory
2018/09/15 22:54:45 [WARNING] Unable to open error page '503.html': open 503.html: no such file or directory
2018/09/15 22:54:45 [WARNING] Unable to open error page 'generic_error.html': open generic_error.html: no such file or directory
2018/09/15 22:54:45 [WARNING] Unable to open error page 'generic_error.html': open generic_error.html: no such file or directory



 I have squashed any insignificant commits
I will squash commits once reviewed.  Due to the large patch I wanted to keep the code changes separate from the vendor update.


 This change has comments for package types, values, functions, and non-obvious lines of code


 I am willing to help maintain this change if there are issues with it later


Steps (using Go 1.11):

cloned repo
ran go get to get the specific versions for xenolf/lego and russross/blackfriday
updated import paths to use latest xenolf/lego ""acmev2"" branch
ran go mod vendor to vendor the deps using go mod
updated docs

I've tested on two separate machines and go run build.go works on both with a fresh clone to a non GOPATH dir (if you are in GOPATH you must set export GO111MODULE=on).  That being said, if you don't want this huge change feel free to close :)  I won't be offended  ❤️",7,17
2296,2018-09-18T09:31:14Z,2018-09-18T15:00:11Z,2018-09-18T15:00:11Z,1,1,0,"it's a stupid mistake

1. What does this change do, exactly?

fix a bug of deadlock

2. Please link to the relevant issues.
None
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2297,2018-09-19T10:40:56Z,2018-11-16T20:52:34Z,2018-11-16T20:52:34Z,2,7,1,"1. What does this change do, exactly?
Replaces (not an) HTTP error code 502 'Context canceled' with the 499 'Context canceled' as suggested in https://stackoverflow.com/questions/46234679/what-is-the-correct-http-status-code-for-a-cancelled-request
2. Please link to the relevant issues.
#1925
#1828
https://caddy.community/t/error-context-canceled/2034/9
and others
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,4
2304,2018-09-29T23:51:11Z,2018-10-30T17:58:38Z,2018-10-30T17:58:38Z,2,13,1,"1. What does this change do, exactly?
Handles variable replacement correctly when the substitution string starts after the an occurrence of its end token. e.g.:
template IN ANY {
  match ""^([a-zA-Z0-9]*\.){1,2}{$CLUSTER_DOMAIN}\.$""
  answer ""{{ .Name }} 60 IN CNAME loadbalancer.default.svc.{$CLUSTER_DOMAIN}""
  upstream
  fallthrough
}

2. Please link to the relevant issues.
coredns/coredns#2153
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

edit: strikethrough some typo text",4,2
2305,2018-09-30T02:44:15Z,2018-09-30T14:17:04Z,2018-09-30T14:17:05Z,1,1,0,"1. What does this change do, exactly?
This PR just sets the DualStack field in the defaultDialer instance in the reverseproxy.go file to true.
The reason for this change is because for new connections to Caddy response times can take over 1 second with it set to false.
This only became a problem since Caddy v0.10.13 when the new custom default dialer was put in place in the reverseproxy.go file. Before that the reverse proxy code used the default dialer in the Go standard library which always has DualStack set to true. So really this change is just bringing the code more into line with how it was behaving before.
When DualStack is set to true the response times for new connections come down from over 1 second to ~300ms, which relates to the net.Dialer's FallbackDelay field. This is always 300ms because when it's not set, as it isn't in the Go standard library, it defaults to 300ms (incidentally this might be a good field to make configurable?).
I can't see any reason for DualStack not be be set to true by default, especially given that Caddy was using it in the Go standard library's default dialer all the way up to Caddy v 0.10.12 anyway, but if there is a specific reason this wasn't set please let me know.
2. Please link to the relevant issues.
I haven't got any specific issues created, but you can find a forum thread here: https://caddy.community/t/debugging-long-response-times/4499
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2309,2018-10-02T03:35:38Z,2018-10-30T18:03:00Z,2018-10-30T18:03:00Z,5,61,30,"1. What does this change do, exactly?
A previous PR I made (#2305) just enabled DualStack in the default dialer that was being used in reverse proxies to improve initial connection speed, or connection speed after the TLS handshake timeout had already passed.
In the Go standard library's net package, the net.Dialer uses a fallback delay as part of its implementation of ""Happy Eyeballs"" when DualStack is enabled. This fallback delay is just a measure of how much of a head start the first connection gets before allowing another ""racer"" to attempt a second connection.
By default when this duration is not set the fallbackDelay function in the net package defaults to returning 300 * time.Millisecond.
It would be useful to configure this fallback delay duration from a caddyfile instead of having to edit the source and recompile.
So this PR just adds a new fallback_delay sub-directive to the existing proxy directive, which gets used in the NewSingleHostReverseProxy function in the reverseproxy.go file to overwrite the default value if it's different from the one set on the default dialer.
The default dialer has been left with this value unset so it can always use the default Go standard library's implementation, since it's possible the Go standard library could change it in the future, in which case we would probably want to pick up those changes by default.
2. Please link to the relevant issues.
This PR relates directly to issue #2306 and is a result of a previous PR I made (#2305).
3. Which documentation changes (if any) need to be made because of this PR?
A change to the proxy documentation (https://caddyserver.com/docs/proxy) would be needed to add an explanation of the new sub-directive.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

I checked the first box about tests, but what I mean here is that I updated the existing tests, checked that they failed, and then added the new directive and tested again.",3,2
2318,2018-10-12T08:01:04Z,2018-10-30T17:59:24Z,2018-10-30T17:59:24Z,1,3,3,"1. What does this change do, exactly?
Sometimes I got flaky test error like below.
$ cd caddytls
$ go test -v . -run 'TestGetEmail'
=== RUN   TestGetEmail
--- FAIL: TestGetEmail (0.03s)
	user_test.go:210: Did not get correct email from storage; expected 'test4-3@foo.com' but got 'test3@foo.com'
FAIL
FAIL	github.com/mholt/caddy/caddytls	0.045s

To make the cause cleary, I embed debug code to show what happened.
$ cd caddytls
$ go test -v . -run 'TestGetEmail'
=== RUN   TestGetEmail

Your sites will be served over HTTPS automatically using Let's Encrypt.
By continuing, you agree to the Let's Encrypt Subscriber Agreement at:
  (none - testing)
Please enter your email address to signify agreement and to be notified
in case of issues. You can leave it blank, but we don't recommend it.
  Email address: 
(test) 2018-10-12 16:06:38 +0900 JST : test3@foo.com
(test) 2018-10-12 14:06:38 +0900 JST : test4-1@foo.com
(test) 2018-10-12 15:06:38 +0900 JST : test4-2@foo.com
(test) 2018-10-12 16:06:38 +0900 JST : test4-3@foo.com
--- FAIL: TestGetEmail (0.03s)
	user_test.go:210: Did not get correct email from storage; expected 'test4-3@foo.com' but got 'test3@foo.com'
FAIL
FAIL	github.com/mholt/caddy/caddytls	0.046s

It seems gonna happen when 'test3@foo.com' and 'test4-3@foo.com' is created at the same time.
I fixed the test code so that the order of time the file created is more deterministic.
The result is like below.
$ cd caddytls
$ go test -v . -run 'TestGetEmail'
=== RUN   TestGetEmail


Your sites will be served over HTTPS automatically using Let's Encrypt.
By continuing, you agree to the Let's Encrypt Subscriber Agreement at:
  (none - testing)
Please enter your email address to signify agreement and to be notified
in case of issues. You can leave it blank, but we don't recommend it.
  Email address: 
(test) 2018-10-12 16:20:41 +0900 JST : test3@foo.com
(test) 2018-10-12 16:20:41 +0900 JST : test4-1@foo.com
(test) 2018-10-12 17:20:41 +0900 JST : test4-2@foo.com
(test) 2018-10-12 18:20:41 +0900 JST : test4-3@foo.com
--- PASS: TestGetEmail (0.03s)
PASS
ok  	github.com/mholt/caddy/caddytls	0.047s

2. Please link to the relevant issues.
3. Which documentation changes (if any) need to be made because of this PR?
Nothing.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,2
2320,2018-10-12T12:38:46Z,2018-10-30T00:25:37Z,2018-10-30T00:25:37Z,1,4,4,"1. What does this change do, exactly?
reverse the order of instance.Stop() and onShutdown() calls on Restart. See more details at coredns/coredns#1666 (comment)
2. Please link to the relevant issues.
coredns/coredns#1666
3. Which documentation changes (if any) need to be made because of this PR?
none
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,5
2323,2018-10-14T19:50:24Z,2018-10-19T17:51:10Z,2018-10-19T17:51:10Z,2,48,0,"1. What does this change do, exactly?
Introduces new template action to get TLS protocol version
2. Please link to the relevant issues.
None
3. Which documentation changes (if any) need to be made because of this PR?
Template action should be documented here: https://caddyserver.com/docs/template-actions
4. Checklist

  I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,4
2324,2018-10-15T11:18:54Z,2018-10-16T17:56:41Z,2018-10-16T17:56:41Z,2,2,2,"1. What does this change do, exactly?
CI configuration changed: use golang.org/x/lint/golint instead of github.com/golang/lint/golint
2. Please link to the relevant issues.
#2319
3. Which documentation changes (if any) need to be made because of this PR?
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
2338,2018-11-12T04:36:48Z,2018-11-18T21:06:55Z,2018-11-18T21:06:55Z,2,14,0,"1. What does this change do, exactly?
In tempates middleware, delete the two headers related to cache.
2. Please link to the relevant issues.
#1920
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,0
2339,2018-11-12T19:46:24Z,2018-11-12T21:24:07Z,2018-11-12T21:24:07Z,6,45,49,"I don't love this half-baked solution to the issue raised in #1303 way
more than a year after the original issue was closed (the necro comments
are about an issue separate from the original issue that started it),
but I do like TLS alerts more than wrong certificates.
1. What does this change do, exactly?
Raises a TLS alert on mismatching (or missing) SNI if no site is configured with a matching certificate, rather than serving a random certificate.
2. Please link to the relevant issues.

#1303
#2015
#2037
#2340

/cc @Zenexer @ghoeffner @orenyomtov @mxlje - Please determine whether this addresses your concerns. This is on you now. This is not entirely satisfying to me, but if it makes you happy, let's merge it.",4,10
2347,2018-11-15T13:19:22Z,2018-11-17T21:51:08Z,2018-11-17T21:51:08Z,1,1,1,"1. What does this change do, exactly?
To pass errors unit test when source code $GOPATH is /home/user/caddy.
caddy repository is at /home/user/caddy/src/github.com/mholt/caddy
This issue happens on Linux and Windows too.
4. Checklist

 I have written tests and verified that they fail without my change",3,2
2351,2018-11-18T04:44:52Z,2018-11-18T21:04:21Z,2018-11-18T21:04:21Z,3,1099,1099,"1. What does this change do, exactly?
Fix line endings on text files that have CRLF, when gitattributes only wants LF.
2. Please link to the relevant issues.
#2348
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,3
2359,2018-11-21T14:53:36Z,2019-07-19T19:29:50Z,2019-07-19T19:29:50Z,5,999,33,"1. What does this change do, exactly?
Websocket enhancement

type lines option: one line one websocket message, '\n' char required in stdin/stdout (Following v0.11 behavior, this is the default if type is not specified)
type text option: '\n' is not checked, '\n' chars are in websocket message, handle UTF-8 chars at buffer end)
type binary option
bufsize option: for handling stdout

See caddyhttp/websocket/sample/index.html, caddyhttp/websocket/sample/Caddyfile for detailed aims of the test cases
3. Which documentation changes (if any) need to be made because of this PR?
Need to update https://caddyserver.com/docs/websocket
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,13
2363,2018-11-22T04:28:21Z,2018-12-18T22:42:06Z,2018-12-18T22:42:06Z,2,8,0,"This implements the {when_iso_local} placeholder. This is like the
{when_iso} placeholder but the output is in the current timezone
rather than UTC.
Resolves #2362",4,10
2368,2018-11-24T18:09:34Z,2018-11-25T19:35:16Z,2018-11-25T19:35:16Z,1,1,1,"This applies the filter when using the browser history to go the
previous directory.",3,2
2374,2018-12-02T14:44:48Z,2019-02-13T21:30:15Z,2019-02-13T21:30:15Z,1,39,0,"1. What does this change do, exactly?
There is already caddyfile/json.go but it was only used in unit test.
Now expose JSON <-> Caddyfile conversion via command line flags.
2. Please link to the relevant issues.
3. Which documentation changes (if any) need to be made because of this PR?
https://caddyserver.com/docs/cli
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",7,23
2375,2018-12-02T14:50:01Z,2018-12-02T22:39:58Z,2018-12-02T22:39:58Z,1,1,1,"1. What does this change do, exactly?
Fix linter warning
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
2389,2018-12-14T15:56:09Z,2019-02-05T17:33:52Z,2019-02-05T17:33:52Z,2,49,5,"1. What does this change do, exactly?
run caddy:
$ ./caddy --disabled-metrics ""os,,, arch, cpu, caddy_version,""
panic: runtime error: slice bounds out of range

goroutine 1 [running]:
github.com/mholt/caddy/caddy/caddymain.initTelemetry(0x0, 0x0)
	/go/src/github.com/mholt/caddy/caddy/caddymain/run.go:407 +0x8d4
github.com/mholt/caddy/caddy/caddymain.Run()
	/go/src/github.com/mholt/caddy/caddy/caddymain/run.go:102 +0xb99
main.main()
	/go/src/github.com/mholt/caddy/caddy/main.go:27 +0x27

This patch fixed above problem.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,1
2396,2018-12-19T05:45:32Z,2019-01-17T05:43:32Z,2019-01-17T05:43:32Z,3,31,11,"1. What does this change do, exactly?
In order to avoid unused memory allocation, gzip.putWriter should be called only when gzip compression happened.
2. Please link to the relevant issues.
#2395
3. Which documentation changes (if any) need to be made because of this PR?
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2398,2018-12-19T18:59:53Z,2019-02-13T18:51:58Z,2019-02-13T18:51:58Z,1,35,13,"Terminate the goroutine used for logging errors by using a
WaitGroup (stopWg) to track termination of servers.

1. What does this change do, exactly?
This PR addresses #2358. It now terminates the goroutine used for logging errors by using a WaitGroup (stopWg) to track termination of servers.
2. Please link to the relevant issues.
#2358
3. Which documentation changes (if any) need to be made because of this PR?
n/a
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

I haven't written any test, but did verify that goroutine count no longer increases (using the same test method described in the issue).",3,1
2399,2018-12-20T04:36:50Z,2019-02-26T01:39:31Z,2019-02-26T01:39:31Z,3,8,11,"1. What does this change do, exactly?
add TLS 1.3
2. Please link to the relevant issues.
#2080
3. Which documentation changes (if any) need to be made because of this PR?
https://caddyserver.com/docs/tls

""tls1.3"" is a new suppoted protocol if caddy is built by Go 1.12 or newer.
TLS 1.3 cipher suites are not configurable.

4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

If caddy should be able to be built by Go 1.11 after the releasing of 1.12, I think this PR can be accepted now.
If not, the new file with build tag ""go1.12"" is useless and the change can be applied to config.go directly when Go 1.12 is released.",8,26
2404,2018-12-21T14:11:35Z,2019-01-14T04:39:17Z,2019-01-14T04:39:17Z,1,7,0,"1. What does this change do, exactly?
It sets a fake tls.Config.GetCertificate callback in the tls.Config. According to the Go standard library, a tls.Config must have Certificates or GetCertificate set, otherwise it will be rejected by tls.Listen. quic-go recently implemented the same check, and rejects the tls.Config as currently constructed by Caddy.
I think it should be permissible to have a tls.Config that only sets the GetConfigForClient callback, and I opened golang/go#29139, but it looks like this was postponed to Go 1.13.
2. Please link to the relevant issues.
#2346, especially #2346 (comment)
3. Which documentation changes (if any) need to be made because of this PR?
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,4
2406,2018-12-23T14:10:03Z,,2019-02-17T22:14:02Z,4,157,11,"1. What does this change do, exactly?
This PR adds a new parameter: allowed_cidr for the basicauth module. It allows bypassing the basic auth based on the remote ip of the request.
2. Please link to the relevant issues.
#1891
3. Which documentation changes (if any) need to be made because of this PR?
The documentation of the basicauth module needs to be updated if this PR is merged.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,19
2413,2018-12-30T12:56:11Z,2019-01-17T05:51:55Z,2019-01-17T05:51:55Z,1,2,2,"1. What does this change do, exactly?
Avoid allocation during string comparison.
2. Please link to the relevant issues.
None.
3. Which documentation changes (if any) need to be made because of this PR?
None.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2415,2019-01-03T13:09:02Z,2019-01-28T10:26:23Z,2019-01-28T10:26:23Z,2,33,0,"1. What does this change do, exactly?
The pull request disables basic auth on OPTION method calls.
2. Please link to the relevant issues.
#1568
3. Which documentation changes (if any) need to be made because of this PR?
No. The pull request is minimal and changes the behaviour of the basic auth plugin without adding new configuration options
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,2
2417,2019-01-05T17:12:05Z,2019-01-08T13:30:19Z,2019-01-08T13:30:19Z,1,1,3,"Hello!
Major changes are coming to File Browser (filebrowser/filebrowser#575) and Hugo and Jekyll plugins are being removed. Also, I'm renaming filemanager to filebrowser to keep up with the actual name of the software.
hugo, jekyll and filemanager were hidden from the Caddy web site already. I'm working on the new filebrowser directive.
Why change the name? Couldn't I keep it?
No, there are many changes and, unfortunately, the user will be required as an intermediate to make a change. If kept the same directive probably most would ignore and start complaining about bugs.
This will force people to look for information. I'll also provide a guide on Caddy Community as soon as the new plugin is released, which will be soon.

That's it!
/cc @mholt",2,0
2428,2019-01-14T20:44:32Z,2019-01-15T05:08:54Z,2019-01-15T05:08:54Z,2,68,0,"1. What does this change do, exactly?
Adds support for import statements to Caddyfile directives.
2. Please link to the relevant issues.
#2378
3. Which documentation changes (if any) need to be made because of this PR?
The import docs
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",5,8
2432,2019-01-17T10:43:20Z,2019-01-18T14:25:41Z,2019-01-18T14:25:42Z,2,25,4,"1. What does this change do, exactly?
Fix a bug. caddy doesn't set the Email field of certmagic.Config.
2. Please link to the relevant issues.
I encountered #2400 when I upgraded caddy today.
And found that my email setting in Caddyfile didn't work for some time.
This PR is related to #2400 but doesn't fix it.
It looks like ~/.caddy/acme/${a hostname}/users/default/default.json had some other formats which caddy doesn't recognize. So that caddy can't read the account setting and caddy never updates that file. Every time caddy is about to obtain a certificate, it registers a new account.
I can't confirm this. It is just my guess. (I have deleted my old ~/.caddy. I shouldn't have done that.)
3. Which documentation changes (if any) need to be made because of this PR?
None
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,4
2434,2019-01-18T20:16:51Z,2019-02-15T18:50:32Z,2019-02-15T18:50:32Z,2,38,21,"1. What does this change do, exactly?
Raises an error which is logged when a basicauth attempt fails.
The error logged is

BasicAuth: user ""%s"" was not found or password was incorrect. {remote} {host} {uri} {proto}

which comes out as

18/Jan/2019:20:07:10 +0000 [ERROR 401 /admin] BasicAuth: user ""admin"" was not found or password was incorrect. 127.0.0.1 salmon.kinchik.ie /admin?withinfo=alskjfd HTTP/1.1

I updated the tests that when the error is raised they check it is the correct error.
2. Please link to the relevant issues.
#2402
3. Which documentation changes (if any) need to be made because of this PR?
It could be added that BasicAuth will log an error when authentication fails
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,5
2443,2019-01-25T23:51:11Z,2019-01-26T07:30:13Z,2019-01-26T07:30:13Z,2,5,0,"1. What does this change do, exactly?
My change adds the requested server port to the header X-Forwarded-Port for preset transparent.
2. Please link to the relevant issues.
#2412
3. Which documentation changes (if any) need to be made because of this PR?
On page https://caddyserver.com/docs/proxy you have to add ""header_upstream X-Forwarded-Port {server_port}"" within the code block for preset transparent.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2444,2019-01-26T01:36:08Z,2019-01-26T07:12:43Z,2019-01-26T07:12:43Z,1,1,0,"1. What does this change do, exactly?
This pull request adds support for the caddy-extauth plugin that creates a forward/external authentication capability to caddy.  I'm the author of the JWT plugin and have found that many people need/want a more flexible authentication solution where they have full control over authorizing each request.  Instead of adding more complexity to plugins like JWT, forward or external authentication allows someone to create their own authorization service in any language and have it plug in easily to Caddy's auth flow.
This is similar to forward authentication services in Traefik and Ambassador.  Each request is proxied to an external auth service that can authorize access by responding 200 OK.  Any other status code will result in a 401 Unauthorized.  Users have full access to the original request parameters to use whatever information they need, including the freedom to access their own database or session caching service, to determine whether authorization should be granted.
2. Please link to the relevant issues.
N/A
3. Which documentation changes (if any) need to be made because of this PR?
Only needs to be added to the list of plugins
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2448,2019-01-29T07:52:40Z,2019-01-29T17:51:11Z,2019-01-29T17:51:11Z,28,50,50,"1. What does this change do, exactly?
Spelling fixes
2. Please link to the relevant issues.
3. Which documentation changes (if any) need to be made because of this PR?
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
-- No. I'll do this at the end once the list of words is accepted (generally people reject some subset of the corrections)
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

Generated by https://github.com/jsoref/spelling f; to maintain your repo, please consider fchurn",3,2
2452,2019-02-02T21:52:04Z,2019-02-05T16:30:23Z,2019-02-05T16:30:24Z,13,186,134,"1. What does this change do, exactly?


Always choose a TLS config during a handshake, even if there is no match. Random selection (as a last resort) is OK; any config should allow the TLS-ALPN challenge to be completed.


Add -default-sni flag. If a ClientHello is received with no ServerName (SNI), then this value will be assumed when matching TLS configs and choosing a certificate.


When no ServerName is given, certificates may be chosen based on a matching IP address of the listener.


Update CertMagic dependency, which supports this new matching logic with a default ServerName.


If SNI is present in a ClientHello but does not match any certificates, a TLS alert is raised (in keeping with previous behavior before this change and other recent changes)


2. Please link to the relevant issues.
Hopefully fixes #2451, fixes #2438, fixes #2414, and fixes #2407
3. Which documentation changes (if any) need to be made because of this PR?
Add note about the -default-sni flag.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

Calling on: @fr33tux, @oscartbeaumont, @rmoriz, @whitestrake, and @magikstm if you could help test this please, and ensure it works for you, since I was not able to reproduce all the various issues myself (like the Docker stuff).",8,6
2453,2019-02-03T19:05:37Z,2019-02-04T20:59:14Z,2019-02-04T20:59:14Z,2,4,6,"1. What does this change do, exactly?
When fixing #2161 by moving the emitEvent call to ensure on startup was called at the right point, a new event was created instance_startup.  After discussion it has been decided we dont need this new event and it was a breaking change so it has been reverted.
Testing


 Can someone please test that this works on linux.  I have a windows only.


 Can someone on linux please check that whatever is supposed to happen after SIGUSR1 still happens?


  see if it fixes the issue with caddy not executing on startup if caddy.service was included.  Tested and Works


Anyone else who would like to test.


2. Please link to the relevant issues.
#2161
hacdias/caddy-v1-service#21
3. Which documentation changes (if any) need to be made because of this PR?
none
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,6
2454,2019-02-04T23:14:26Z,2019-02-05T17:16:09Z,2019-02-05T17:16:09Z,4,198,0,"By using option ca_certificates in proxy block it is possible now to select a
CA for which backend certificates should be verified against.
Resolves #1550
Co-authored-by: Danny Navarro navdgo@gmail.com
1. What does this change do, exactly?
It adds a ca_certificates option to proxy, which allows one to use their own PEM with CA certificates to validate a proxy backend against.
2. Please link to the relevant issues.
#1550
3. Which documentation changes (if any) need to be made because of this PR?
https://caddyserver.com/docs/proxy would need documentation updated.
A section along the lines of:
ca_certificates are a list of CA Certificate file paths to validate the connection to the backend server being proxied to.

ex. ca_certificates foo.pem bar.pem

4. Checklist


 I have written tests and verified that they fail without my change


 test that option work


 (discussed with mholt, an error is returned if both are set) test that it conflicts with insecure_skip_verify


 Test proving that system pool (eg. provided locally with SSL_CERT_FILES environment variable) is overridden by the option
This is a non issue. SSL_CERT_FILES and SSL_CERT_DIR are only taken into account when a NewCertPool is created through x509.SystemCertPool(). go source page




 I have squashed any insignificant commits


 This change has comments for package types, values, functions, and non-obvious lines of code


 I am willing to help maintain this change if there are issues with it later",3,0
2464,2019-02-12T18:53:06Z,,2019-03-18T18:17:56Z,5,133,43,"1. What does this change do, exactly?
This change enforces the documentation that, ""the closing curly brace } must be the only token on its line"" without breaking the requirement that an environment variable is, ""enclosed in curly braces { } without extra whitespace.""
2. Please link to the relevant issues.
#2366
3. Which documentation changes (if any) need to be made because of this PR?
None.  This PR brings parsing functionality in line with the documentation.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments for package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,4
2469,2019-02-17T22:23:45Z,2019-02-24T10:04:24Z,2019-02-24T10:04:24Z,3,31,10,"Following discussion in issue #2458 I have implemented a change to how sites are output to this
Each port has been grouped.
Activating privacy features... done.

Serving HTTP on port:444
http://localhost:444


Serving HTTP on port:80
http://curlyparsley.kinchik.ie
http://
http://salmon.kinchik.ie
http://pepper.kinchik.ie
http://courgette.kinchik.ie
http://splitpeas.kinchik.ie/path
http://ripefig.kinchik.ie
http://192.168.15.184


Serving HTTPS on port:443
https://pie.kinchik.toflidium.com


Serving HTTP on port:2015
http://fig.kinchik.ie:2015

Serving HTTP on port:4467
http://localhost:4467


Serving HTTP on port:1667
http://127.0.0.1:1667
http://localhost:1667

When caddy is set to log to stdout you also still get the log entries.  I need some help to fix thils.
Activating privacy features... done.
Serving HTTP on port:1234
http://127.0.0.1:1234
2019/02/17 22:09:23 http://127.0.0.1:1234


Serving HTTP on port:1667
http://127.0.0.1:1667
2019/02/17 22:09:23 http://127.0.0.1:1667
http://localhost:1667
2019/02/17 22:09:23 http://localhost:1667


Serving HTTP on port:444
http://localhost:444
2019/02/17 22:09:23 http://localhost:444


Serving HTTP on port:80
http://curlyparsley.kinchik.ie
2019/02/17 22:09:23 http://curlyparsley.kinchik.ie
http://
2019/02/17 22:09:23 http://
http://salmon.kinchik.ie
2019/02/17 22:09:23 http://salmon.kinchik.ie
http://pepper.kinchik.ie
2019/02/17 22:09:23 http://pepper.kinchik.ie
http://courgette.kinchik.ie
2019/02/17 22:09:23 http://courgette.kinchik.ie
http://splitpeas.kinchik.ie/path
2019/02/17 22:09:23 http://splitpeas.kinchik.ie/path
http://ripefig.kinchik.ie
2019/02/17 22:09:23 http://ripefig.kinchik.ie
http://192.168.15.184
2019/02/17 22:09:23 http://192.168.15.184


Serving HTTPS on port:443
https://pie.kinchik.toflidium.com
2019/02/17 22:09:23 https://pie.kinchik.toflidium.com


Serving HTTP on port:2015
http://fig.kinchik.ie:2015
2019/02/17 22:09:23 http://fig.kinchik.ie:2015

Does anyone know how I get access to the logger struct from here https://github.com/mholt/caddy/blob/master/caddyhttp/httpserver/server.go#L519",4,11
2470,2019-02-17T22:46:20Z,2019-03-04T19:02:25Z,2019-03-04T19:02:25Z,1,3,4,"This is an update to recent PR #2434 .
I realised I can set the user value before calling replace.
An additonal benefit of this change is that the access logs will show the username even when the user is not authenticated. eg.

127.0.0.1 - admin [16/Feb/2019:09:38:31 +0000] ""GET /admin HTTP/1.1"" 401 17

This seems to be how other webservers report authentication failures.",3,2
2472,2019-02-18T21:35:26Z,2019-03-04T19:00:28Z,2019-03-04T19:00:28Z,2,9,0,"I found I had written the following  in several places in my caddyfile
example.com {
  root c:\web
   log / c:\logs\mylogfilt.txt
  errors /  c:\logs\myerrorlog.txt
}

However error does not require a path param so the / is unneeded
This silently fails and the only place the log is written to is stdout.
This PR raises a parsing error in this case.
I'm not sure how to write tests for this.",5,3
2481,2019-02-24T10:10:30Z,2019-04-09T17:11:27Z,2019-04-09T17:11:27Z,1,4,0,in Contributing Section,3,0
2488,2019-02-27T10:37:27Z,,2019-07-18T19:05:36Z,3,135,0,"Sometimes it is useful to allow serving of files outside of the normal
site root. This change adds the new directive 'alias' which allows just
that.
alias path directory


path is the base path to match for this alias.
directory is the directory to use as root for matched paths. If
directory is relative, it will be relative to the site root. Files
are looked up below that directory by their path given, reduced by
the alias path prefix.

Serves files from blog on /blog/.
alias /blog/ /srv/my-blog/www/

An request to /blog/index.html will serve the file
/srv/my-blog/www/index.html.",6,13
2494,2019-03-01T12:56:33Z,2019-03-01T15:35:06Z,2019-03-01T15:35:06Z,1,0,3,"While reviewing the code i found that ""names"" is not used and can be removed",3,4
2497,2019-03-03T10:10:21Z,2019-03-04T19:06:04Z,2019-03-04T19:06:04Z,1,22,4,"A new PR for #2469
Code will produce log like this
D:\godev\bin>caddy
Activating privacy features... done.

Serving HTTP on port 80
http://curlyparsley.kinchik.ie
http://
http://salmon.kinchik.ie
http://pepper.kinchik.ie
http://courgette.kinchik.ie
http://splitpeas.kinchik.ie/path
http://basil.kinchik.ie
http://walnutoil.kinchik.ie
http://soup.kinchik.toflidium.com
http://chard.kinchik.ie
http://0.0.0.0
http://onion.kinchik.ie
http://peas.kinchik.ie
http://ripefig.kinchik.ie
http://192.168.15.184


Serving HTTPS on port 443
https://pie.kinchik.toflidium.com


Serving HTTP on port 2015
http://fig.kinchik.ie:2015


and
D:\godev\bin>caddy -log stdout
2019/03/03 10:09:41 [INFO][FileStorage:C:\Users\User\.caddy] Started certificate maintenance routine
2019/03/03 10:09:42 [WARNING] Stapling OCSP: no OCSP stapling for [pie.kinchik.toflidium.com]: no OCSP server specified in certificate
Activating privacy features... done.

Serving HTTP on port 2015
http://fig.kinchik.ie:2015

2019/03/03 10:09:42 [INFO] Serving http://fig.kinchik.ie:2015

Serving HTTP on port 80
http://curlyparsley.kinchik.ie
http://
http://salmon.kinchik.ie
http://pepper.kinchik.ie
http://courgette.kinchik.ie
http://splitpeas.kinchik.ie/path
http://basil.kinchik.ie
http://walnutoil.kinchik.ie
http://soup.kinchik.toflidium.com
http://chard.kinchik.ie
http://0.0.0.0
http://onion.kinchik.ie
http://peas.kinchik.ie
http://ripefig.kinchik.ie
http://192.168.15.184

2019/03/03 10:09:42 [INFO] Serving http://curlyparsley.kinchik.ie
2019/03/03 10:09:42 [INFO] Serving http://
2019/03/03 10:09:42 [INFO] Serving http://salmon.kinchik.ie
2019/03/03 10:09:42 [INFO] Serving http://pepper.kinchik.ie
2019/03/03 10:09:42 [INFO] Serving http://courgette.kinchik.ie
2019/03/03 10:09:42 [INFO] Serving http://splitpeas.kinchik.ie/path
2019/03/03 10:09:42 [INFO] Serving http://basil.kinchik.ie
2019/03/03 10:09:42 [INFO] Serving http://walnutoil.kinchik.ie
2019/03/03 10:09:42 [INFO] Serving http://soup.kinchik.toflidium.com
2019/03/03 10:09:42 [INFO] Serving http://chard.kinchik.ie
2019/03/03 10:09:42 [INFO] Serving http://0.0.0.0
2019/03/03 10:09:42 [INFO] Serving http://onion.kinchik.ie
2019/03/03 10:09:42 [INFO] Serving http://peas.kinchik.ie
2019/03/03 10:09:42 [INFO] Serving http://ripefig.kinchik.ie
2019/03/03 10:09:42 [INFO] Serving http://192.168.15.184

Serving HTTPS on port 443
https://pie.kinchik.toflidium.com

2019/03/03 10:09:42 [INFO] Serving https://pie.kinchik.toflidium.com
2019/03/03 10:09:42 [INFO] Nonblocking Command ""d:\php7\php-cgi.exe -b 43149"" with ID 9f04c4bb-cb99-4c49-afa5-2f09ec7d1500

(Still no PR Template)",2,0
2498,2019-03-03T19:33:34Z,,2019-03-04T05:38:01Z,2,43,1,"Hi
This makes it easier to build from source with plugins.

adds a list of plugin into run.go that are commented by default
add usage into README.md",4,3
2501,2019-03-04T21:20:05Z,2019-03-05T02:14:19Z,2019-03-05T02:14:19Z,1,0,0,"as per https://help.github.com/en/articles/creating-a-pull-request-template-for-your-repository
It seems the name of the pullrequest template may have been incorrect.  This corrects it.",3,0
2504,2019-03-05T14:58:05Z,2019-03-30T02:30:49Z,2019-03-30T02:30:49Z,1715,117,795881,,4,23
2506,2019-03-05T17:10:44Z,,2019-04-09T16:48:11Z,3,29,3,"This adds the TLSv1.3 ciphers to the list of known ciphers which is required for logging. It also introduces a means of making a cipher disallowed from configuration but still getting it be used in the SupportedCiphersMap map.
The disallow list appears to be necessary. If the TLSv1.3 suite is in the SupportedCiphersMap and a user attempts to put it in their Caddyfile, Caddy will panic later during the configuration process. Simplest approach for now seemed to be to just disallow them.
Note I am not a Go developer. This is my second go PR ever. 😅
Fixes #2505",4,7
2508,2019-03-07T11:48:42Z,2019-03-11T03:01:57Z,2019-03-11T03:01:57Z,1,5,3,"try to fix #2490: just run s.Serve after all s.Listen successfully.
caddy works fine after chaning the code.",3,3
2511,2019-03-09T17:31:16Z,,2019-03-19T06:26:16Z,1,30,1,"Fixes #2502: tls self_signed not working correctly.
Having compared the code changes with older Caddy versions, I am not sure exactly what changed.
However, I think this is supposed to be the expected behaviour.",2,1
2517,2019-03-11T22:27:05Z,2019-03-11T23:50:05Z,2019-03-11T23:50:05Z,1,9,1,"This PR implements #2479.
There are 2 commits in here:

Rename the original env flag to envfile.
Add the new env flag implementation which prints environment variables.

Let me know if you wish me to add a log message before printing environment variables and which text should it have.
I navigated the docs looking for places where it was necessary to update the meaning of each flag, but found nothing.
Kind regards",4,4
2521,2019-03-15T18:30:08Z,2019-03-15T23:43:02Z,2019-03-15T23:43:02Z,1,1,0,"Added ""dyndns"" directive for support caddy-dyndns plugin",4,3
2526,2019-03-17T03:13:14Z,2019-03-17T05:33:12Z,2019-03-17T05:33:12Z,1,2,3,"err2 looks strange
use if err:=xxx; err !=nil {} to instead.",2,0
2528,2019-03-17T04:59:25Z,,2019-07-18T19:14:23Z,2,24,0,"This option adds support for dumping auto generated, self-signed certificate into a file in specified path.
Please let me know if I should improve variable/conf naming, or any part of the code at all.",3,3
2531,2019-03-19T06:29:59Z,,2019-07-18T19:14:42Z,1,30,1,"Fixes #2502: tls self_signed not working correctly.
Having compared the code changes with older Caddy versions, I am not sure exactly what changed.
However, I think this is supposed to be the expected behaviour.
Previously #2511.",4,2
2551,2019-04-06T07:52:31Z,2019-04-22T16:20:38Z,2019-04-22T16:20:38Z,35,498,220,"Fixes all:

errcheck
structcheck",5,6
2552,2019-04-07T11:48:19Z,2019-04-07T16:39:52Z,2019-04-07T16:39:53Z,1,1,1,sort import package which is unsorted.,2,0
2554,2019-04-08T09:13:35Z,,2019-07-18T19:18:19Z,23,37,92,"I fixed gofmt, gosimple, deadcode, unused in #2541",2,0
2562,2019-04-12T01:59:42Z,2019-04-17T18:13:45Z,2019-04-17T18:13:45Z,2,38,20,"I have no idea how quic-go v0.7.1-0.20190305092557-966b00dd3dc9 made it into the go mod file. quic-go never even had a v0.7.1 release, and commit 966b00dd3dc9 doesn't have support for gQUIC.
We should use version v0.10.1, which is the latest release from the gQUIC branch of quic-go.",2,4
2589,2019-04-26T15:24:18Z,2019-04-26T18:32:43Z,2019-04-26T18:32:44Z,1,1,0,This PR adds publish/subscribe middleware to Caddy. The repository is https://github.com/jung-kurt/caddy-pubsub.,2,0
2592,2019-04-29T18:50:16Z,2019-05-24T18:00:27Z,2019-05-24T18:00:28Z,2,25,12,"1. What does this change do, exactly?
Enable substitution of numbered regex captures in the to part of a simple rewrite rule.
Example:
rewrite ^/foo/(bar)$ /{1}

This would previously rewrite to / while now it rewrites to /bar.
2. Please link to the relevant issues.
#2586
3. Which documentation changes (if any) need to be made because of this PR?
On https://caddyserver.com/docs/rewrite copy the description of ""destinations..."" after the second example code block to the description of ""to"" after the first example code block.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,4
2611,2019-05-14T01:04:27Z,2019-05-14T04:17:37Z,2019-05-14T04:17:37Z,1,1,1,My first time using Go was in regards to building Caddy-- so I hit a bit of a dead-end when knowing what to call the file mentioned in To build Caddy with plugins (and with version information).  As obvious as it is now-- it took me far too long to realize the file could be anything with the extension .go.  This small PR might save fellow newcomers a small headache.,3,1
2618,2019-05-21T10:59:14Z,2019-06-23T22:24:14Z,2019-06-23T22:24:14Z,1,4,0,"Currently, the instance waitgroup is decremented twice in startServers(): once when Serve() is finished and once when ServePacket() is finished. However, with a graceful shutdown, Serve() returns before the server has actually finished shutting down all active connections. This patch increases the wait group by one when the server is shut down so that the program only exits when all the server instances have finished serving their connections.
Steps for me that showed graceful shutdown not to work currently:

mkfile 2m foo.txt
go run github.com/mholt/caddy/caddy -log stdout -grace 1m
curl -v -o /dev/null  --limit-rate 300k http://localhost:2015/foo.txt
kill -s SIGTERM PID_OF_SERVER

Without this patch, the curl command fails:
curl: (18) transfer closed with 746120 bytes remaining to read",4,4
2620,2019-05-23T05:00:14Z,2019-07-18T19:46:01Z,2019-07-18T19:46:01Z,1,1,1,"According to https://github.com/systemd/systemd/blob/v241/NEWS#L2799
The Directive ReadWriteDirectories= has been renamed to ReadWritePaths=
in 241.",3,1
2624,2019-05-24T07:19:48Z,2019-05-24T15:59:07Z,2019-05-24T15:59:07Z,1,1,1,,2,0
2626,2019-05-24T20:33:33Z,2019-07-18T19:50:02Z,2019-07-18T19:50:02Z,2,27,20,Allow precompressed zstandard file to be served from the file system.,3,1
2639,2019-06-07T14:19:07Z,2019-06-12T16:15:18Z,2019-06-12T16:15:18Z,1,8,7,"I'm finally looking to make my plugin for caddy officially available.
The code currently lives at https://github.com/dhaavi/caddy-authplugger, but will be moved to https://github.com/dhaavi/caddy-permission within the next days.
Like a couple other plugins, this plugin is about authentication, but, additionally also about authorization:
Instead of just relaying authenticating users to another piece of software, it aims to bring fine-grained permission management to otherwise unsupported web applications.
For example, I've been using this code for over a year now to enforce fine-grained permissions on the filebrowser plugin. It plays fairly nice for the basic feature set, I must say. (I have not yet bothered to integrate all features with the permission model)
Technically speaking, it fetches and authenticates users via (1) the config file (HTTP Basic Auth), (2) an easy json-based api and/or (3) TLS client certificates. It then enforces a HTTP Method + Request Path permission model on the user. It also handles websockets.
I changed the name in order for users to better differentiate this plugin from other auth plugins.
EDITED TO ADD: There will be minor improvements and some maintenance within the next days (go modules!).",3,4
2644,2019-06-11T20:18:13Z,2019-06-11T21:24:36Z,2019-06-11T21:24:36Z,1,14,5,"What does this change do, exactly?
Each time the Caddyfile reloads and Caddy is restarted, caddytls.NewConfig starts a goroutine for cleaning the certificate storage. This goroutine ranges over a time.Ticker channel; although Stop is called on this ticker, Stop does not close the underlying channel so the goroutine never exits.
This change adds an additional channel that is listened to in the certificate cleaning goroutine so it can exit on restarts.
Please link to the relevant issues.
Fixes #2642
Which documentation changes (if any) need to be made because of this PR?
None
Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later

Open Discussion/Questions

I did not write any new tests for this code because it is contained within a function caddytls.NewConfig which is currently untested. I can carve out some time to test the entire function, though it feels out of scope for this PR.
I observed that calling certmagic.CleanStorage is delayed by 12 hours. If a restart always occurs before 12 hours, this method is never called. Is this concerning? Is the certificate storage cleaned on restart or by some other means? (I don't believe that I am introducing this problem as calling Stop would have the same effect.)",4,2
2648,2019-06-14T10:35:26Z,2019-06-19T17:25:57Z,2019-06-19T17:25:57Z,3,102,12,"1. What does this change do, exactly?

Fix #2641.
2. Please link to the relevant issues.

#2641.
3. Which documentation changes (if any) need to be made because of this PR?

Nothing I believe.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,2
2652,2019-06-21T22:20:04Z,2019-07-18T19:58:41Z,2019-07-18T19:58:41Z,2,54,8,"1. What does this change do, exactly?

There is no good way to rotate the logfile created by the previous FreeBSD rc.d script (logging uses redirection to send the output the file and the file is held open by the shell).
This solves the problem by sending caddy's std{out,err} stream to syslog.
Because the script uses the daemon utility to run the caddy process, this change simply uses the daemon command's builtin syslog functionality.
The old caddy_logfile rc.conf variable is replaced by caddy_syslog_facility (which defaults to 'local7') and caddy_syslog_level (which defaults to 'notice').
By default, these messages will end up in /var/log/messages, but all of syslog's power can be used to manage them.  The README.md documents a simple way to send the output to /var/log/caddy.log.
2. Please link to the relevant issues.

None.
3. Which documentation changes (if any) need to be made because of this PR?
This PR adds a dist/init/freebsd/README.md file that discusses using caddy with syslog.
I'm open to suggests for how to call attention to this information.  I'd like to refer to it from the script itself too if there's a clean way to do so.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,1
2655,2019-06-28T19:19:33Z,2019-07-18T21:19:22Z,2019-07-18T21:19:22Z,1,52,0,"1. What does this change do, exactly?

Add  dist/init/freebsd/README.md that describes how to configure the system so that caddy can be run without root privileges.
Perhaps this could be added to the main Caddy documentation?
Note that #2652 also adds a dist/init/freebsd/README.md, but merging them should be straightforward (the order of the sections is un-important).
2. Please link to the relevant issues.

3. Which documentation changes (if any) need to be made because of this PR?

4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,9
2663,2019-07-09T19:01:07Z,2019-07-11T21:32:35Z,2019-07-11T21:32:35Z,9,99,148,"1. What does this change do, exactly?

Makes v2's handler config linear, as opposed to nested.
Differentiating middleware and responders has one benefit, namely that
it's clear which module provides the response, but even then it's not
a great advantage. Linear handler config makes a little more sense,
giving greater flexibility and simplifying the core a bit, even though
it's slightly awkward that handlers which are responders may not use
the 'next' handler that is passed in at all.
2. Please link to the relevant issues.

#2662
3. Which documentation changes (if any) need to be made because of this PR?

Update the wiki to show the flattened config structure for handlers.",2,0
2664,2019-07-11T03:04:55Z,2019-07-11T19:37:28Z,2019-07-11T19:37:28Z,1,9,8,"Added a plugin directive named 'recaptcha' for the http server type. Source is here: https://github.com/defund/caddy-recaptcha
The plugin adds middleware which looks for certain requests and validates their reCAPTCHA response tokens. Invalid requests are dropped, so I placed the directive underneath the other request filter directives.
Both reCAPTCHA v2 and v3 are supported. Thanks!",3,1
2670,2019-07-14T21:06:06Z,2019-07-20T16:44:54Z,2019-07-20T16:44:54Z,3,24,4,"name: Implement taskkill /f to force quit on windows when caddy stop
about: Gracefull shutdown on windows
title: ''
labels: ''
assignees: ''
As discussed this is the first iteration of forced shutdown on windows.
The current code wont shutdown caddy on windows.  taskkill /f is required.
1. What does this change do, exactly?
Shutsdown a running instance of caddy by using taskkill /f to force shutdown of the process.  Also ensure process is found on windows systems
2. Please link to the relevant issues.
#2657
3. Which documentation changes (if any) need to be made because of this PR?
Important to tell windows users that shutdown is not graceful on windows.  Ideally recommend they call stop on admin interface before calling caddy stop
I will make a change to
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,1
2671,2019-07-14T21:49:31Z,2019-07-20T16:48:47Z,2019-07-20T16:48:47Z,2,26,8,"1. What does this change do, exactly?
Add a stop command to  admin  website.
This gracefully stops all servers and exits the go process.
This enables graceful shutdown on Windows.
Gives the following output on windows
D:\godev\src\github.com\caddyserver\caddy\cmd\caddy>caddy start
2019/07/14 22:50:14 Caddy 2 admin endpoint listening on localhost:2019
Successfully started Caddy

D:\godev\src\github.com\caddyserver\caddy\cmd\caddy>2019/07/14 22:50:20 [INFO][cache:0xc0000a8780] Started certificate maintenance routine
2019/07/14 22:50:24 Shutting down...

2019/07/14 22:50:24 [INFO][cache:0xc0000a8780] Stopped certificate maintenance routine
2019/07/14 22:50:24 Shut down.

2. Please link to the relevant issues.

#2670
#2657
3. Which documentation changes (if any) need to be made because of this PR?

Add stop command to admin website
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,2
2675,2019-07-16T20:48:05Z,2019-07-21T15:57:35Z,2019-07-21T15:57:35Z,2,272,2,"name: Tests for Replacer
about: Testing the Replacer
1. What does this change do, exactly?
This PR adds tests for the Replacer.
Currently there are tests for Set and Delete. (Both use ReplaceAll to check if they work, but I also want to write an extra test for it.)
Question: Should I test only through the Interface or the replacer type directly?
2. Please link to the relevant issues.
#2673
#2674
3. Which documentation changes (if any) need to be made because of this PR?
--
4. Checklist

 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,7
2687,2019-07-22T18:42:29Z,2019-08-08T05:59:03Z,2019-08-08T05:59:03Z,6,104,10,"1. What does this change do, exactly?
Allocating a value and returning a reference to it in a single function causes the Go compiler to escape the value to the heap, since it has to outlive the function's lifetime. Optimizing the function calls (as shown in the first commit) can enable mid-stack inlining of the function and avoiding a heap allocation.
2. Please link to the relevant issues.
#2681
3. Which documentation changes (if any) need to be made because of this PR?
This is an internal change.
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,16
2712,2019-08-17T23:55:55Z,2019-08-18T01:14:55Z,2019-08-18T01:14:56Z,1,2,2,"name: Pull request
about: Propose changes to the code
title: 'Fixing a compilation error'
labels: ''
assignees: ''

1. What does this change do, exactly?
Small bug fix during compilation.
./caddy.go:230:12: cannot use *dep (type debug.Module) as type *debug.Module in return argument
./caddy.go:233:12: cannot use bi.Main (type debug.Module) as type *debug.Module in return argument
2. Please link to the relevant issues.

3. Which documentation changes (if any) need to be made because of this PR?

4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,3
2717,2019-08-20T22:56:24Z,2019-08-21T17:13:35Z,2019-08-21T17:13:35Z,1,3,0,"1. What does this change do, exactly?
This is simply log caddy version before caddy starts.
2. Please link to the relevant issues.
#2635
3. Which documentation changes (if any) need to be made because of this PR?
I don't know if there is any documentation to change
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",2,0
2720,2019-08-22T14:58:26Z,,2019-10-15T22:07:00Z,2,37,3,"1. What does this change do, exactly?
When a address ends with a { and is not quoted, it discard the { in the address name.
This is meant to avoid this
localhost:1234{
    dir1 foo bar
    dir2
}

parsed as localhost:1234 and not localhost:1234{
but
""localhost:1234{""
    dir1 foo bar
    dir2

parsed as localhost:1234{
2. Please link to the relevant issues.
#2719
3. Which documentation changes (if any) need to be made because of this PR?

4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,6
2723,2019-08-23T13:41:30Z,2019-10-26T00:52:17Z,2019-10-26T00:52:17Z,9,394,133,"1. What does this change do, exactly?

Introduce fuzzers to Caddy's codebase for continuous fuzzing on CI. Closes #2710 .
2. Please link to the relevant issues.

#2710
3. Which documentation changes (if any) need to be made because of this PR?

N/A
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",3,10
2731,2019-08-28T17:21:36Z,2019-09-03T15:35:37Z,2019-09-03T15:35:37Z,3,155,17,"name: Add support for client TLS authentication Caddy V2
about: Adding support for client TLS authentication for the next Caddy release
title: 'Add support for client TLS authentication 😄'
labels: 'V2'
assignees: '@alexandrestein'

1. What does this change do, exactly?

The thing is pretty obvious and it was available in Caddy 1.
2. Please link to the relevant issues.

An issue is open about this.
I'm really new to the project and I don't know if this is the best way to this.
To test this update I used a similar configuration:
{
    ""apps"": {
        ""http"": {
            ""http_port"": 80,
            ""https_port"": 443,
            ""grace_period"": ""2s"",
            ""servers"": {
                ""mainServices"": {
                    ""listen"": [
                        "":443""
                    ],
                    ""tls_connection_policies"": [
                        {
                            ""match"": {
                                ""sni"": [
                                    ""0.dom.com"",
                                    ""dom.com""
                                ]
                            },
                            ""client_cas"": [
                                ""MIIDSzCCAjOgAwIBAgIUfIRObjWNUA4jxQ/0x8BOCvE2Vw4wDQYJKoZIhvcNAQELBQAwFjEUMBIGA1UEAwwLRWFzeS1SU0EgQ0EwHhcNMTkwODI4MTYyNTU5WhcNMjkwODI1MTYyNTU5WjAWMRQwEgYDVQQDDAtFYXN5LVJTQSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK5m5elxhQfMp/3aVJ4JnpN9PUSz6LlP6LePAPFU7gqohVVFVtDkChJAG3FNkNQNlieVTja/bgH9IcC6oKbROwdY1h0MvNV8AHHigvl03WuJD8g2ReVFXXwsnrPmKXCFzQyMI6TYk3m2gYrXsZOU1GLnfMRC3KAMRgE2F45twOs9hqG169YJ6mM2eQjzjCHWI6S2/iUYvYxRkCOlYUbLsMD/AhgAf1plzg6LPqNxtdlwxZnA0ytgkmhK67HtzJu0+ovUCsMv0RwcMhsEo9T8nyFAGt9XLZ63X5WpBCTUApaAUhnG0XnerjmUWb6eUWw4zev54sEfY5F3x002iQaW6cECAwEAAaOBkDCBjTAdBgNVHQ4EFgQU4CBUbZsS2GaNIkGRz/cBsD5ivjswUQYDVR0jBEowSIAU4CBUbZsS2GaNIkGRz/cBsD5ivjuhGqQYMBYxFDASBgNVBAMMC0Vhc3ktUlNBIENBghR8hE5uNY1QDiPFD/THwE4K8TZXDjAMBgNVHRMEBTADAQH/MAsGA1UdDwQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAQEAKB3V4HIzoiO/Ch6WMj9bLJ2FGbpkMrcb/Eq01hT5zcfKD66lVS1MlK+cRL446Z2b2KDP1oFyVs+qmrmtdwrWgD+nfe2sBmmIHo9m9KygMkEOfG3MghGTEcS+0cTKEcoHYWYyOqQh6jnedXY8Cdm4GM1hAc9MiL3/sqV8YCVSLNnkoNysmr06/rZ0MCUZPGUtRmfd0heWhrfzAKw2HLgX+RAmpOE2MZqWcjvqKGyaRiaZks4nJkP6521aC2Lgp0HhCz1j8/uQ5ldoDszCnu/iro0NAsNtudTMD+YoLQxLqdleIh6CW+illc2VdXwj7mn6J04yns9jfE2jRjW/yTLFuQ==""
                            ]
                        }
                    ],
                    ""routes"": [
                        {
                            ""match"": [
                                {
                                    ""host"": [
                                        ""0.dom.com"",
                                        ""dom.com""
                                    ]
                                }
                            ],
                            ""handle"": [
                                {
                                    ""handler"": ""file_server"",
                                    ""browse"": {}
                                }
                            ]
                        },
                        {
                            ""match"": [
                                {
                                    ""host"": [
                                        ""1.dom.com""
                                    ]
                                }
                            ],
                            ""handle"": [
                                {
                                    ""handler"": ""file_server"",
                                    ""browse"": {}
                                }
                            ]
                        }
                    ]
                }
            }
        }
    },
    ""tls"": {
        ""management"": {
            ""module"": ""acme"",
            ""ca"": ""https://acme-staging-v02.api.letsencrypt.org/directory"",
            ""email"": ""astein58@gmail.com"",
            ""on_demand"": false
        }
    }
}
Here is a client certificate you can use to try. The password is ""caddy"".
And here the CA certificate.
I didn't notice any side effect and it was asking for certificate.
Let me know what change would you like to see. 😄
3. Which documentation changes (if any) need to be made because of this PR?

The part related to the tls_connection_policies in the Wiki V2.
4. Checklist

 I have written tests and verified that they fail without my change
No but I'm ready to do it. I don't see where you are managing the CI
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,17
2737,2019-09-03T04:06:56Z,2019-09-10T03:46:22Z,2019-09-10T03:46:22Z,31,3875,1052,"1. What does this change do, exactly?

Refactors the reverse proxy so that the transport is modular, along with adding many new features and bringing features over that exist in v1.
Please help try it out!
2. Please link to the relevant issues.

Closes #2722, #2701, and mostly closes #2679.
3. Which documentation changes (if any) need to be made because of this PR?

Add documentation for the reverse proxy.
Here's a full config so far (using the HTTP transport as opposed to FastCGI here):
{
    ""handler"": ""reverse_proxy"",
    ""transport"": {
        ""protocol"": ""http"",
        ""tls"": {
            ""root_ca_pool"": [""...""],
            ""client_certificate_file"": ""..."",
            ""client_certificate_key_file"": ""..."",
            ""insecure_skip_verify"": false,
            ""handshake_timeout"": ""2s""
        },
        ""keep_alive"": {
            ""enabled"": true,
            ""max_idle_conns"": 1500,
            ""max_idle_conns_per_host"": 50,
            ""idle_timeout"": ""2m""
        },
        ""compression"": true,
        ""max_conns_per_host"": 100,
        ""dial_timeout"": ""2s"",
        ""response_header_timeout"": ""10s"",
        ""expect_continue_timeout"": ""5s"",
        ""max_response_header_size"": 1024,
        ""write_buffer_size"": 4096,
        ""read_buffer_size"": 4096
    },
    ""circuit_breaker"": { },
    ""load_balancing"": {
        ""selection_policy"": {
            ""policy"": ""header"",
            ""header_name"": ""Server-ID""
        },
        ""try_duration"": ""10s"",
        ""try_interval"": ""250ms""
    },
    ""health_checks"": {
        ""active"": {
            ""path"": ""/ok"",
            ""port"": 1234,
            ""interval"": ""10s"",
            ""timeout"": ""2s"",
            ""max_size"": 1024,
            ""expect_status"": 200,
            ""expect_body"": "".*foobar.*""
        },
        ""passive"": {
            ""max_fails"": 3,
            ""fail_duration"": ""1m"",
            ""unhealthy_request_count"": 100,
            ""unhealthy_status"": [500, 502],
            ""unhealthy_latency"": ""5s""
        }
    },
    ""upstreams"": [
        {
            ""dial"": ""localhost:7777""
        }
    ]
}
4. Checklist

 I have written tests and verified that they fail without my change
 I have squashed any insignificant commits
 This change has comments explaining package types, values, functions, and non-obvious lines of code
 I am willing to help maintain this change if there are issues with it later",4,41
